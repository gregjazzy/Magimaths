'use client'

import { useState, useEffect } from 'react'
import { ArrowLeft, BookOpen, Target, Zap, Play, Pause, RotateCcw } from 'lucide-react'
import Link from 'next/link'
import MathEditor from '@/components/MathEditor'
import { VoiceInput } from '../../../components/VoiceInput'

// Composant pour afficher les fractions avec de vraies barres
const Fraction = ({ numerator, denominator }: { numerator: string, denominator: string }) => (
  <span className="inline-block mx-1 align-middle">
    <span className="inline-flex flex-col items-center justify-center">
      <span className="text-sm leading-tight px-1">{numerator}</span>
      <span className="w-full h-0.5 bg-current my-1 min-w-[20px]"></span>
      <span className="text-sm leading-tight px-1">{denominator}</span>
    </span>
  </span>
)

// Composant pour parser et afficher les expressions math√©matiques avec fractions
const MathExpression = ({ expression, className = "" }: { expression: string, className?: string }) => {
  const parts = []
  let remaining = expression
  let key = 0

  while (remaining.length > 0) {
    // Cherche les fractions du type (num/den) avec possibles variables, coefficients et expressions
    const fractionMatch = remaining.match(/\(([^\/\)]+)\/([^\/\)]+)\)/)
    
    if (fractionMatch) {
      const beforeFraction = remaining.substring(0, fractionMatch.index!)
      if (beforeFraction) {
        // Parse les puissances dans le texte avant la fraction
        const processedBefore = beforeFraction.replace(/([a-zA-Z])(\d+)/g, (match, variable, exponent) => {
          // Ne pas traiter si c'est d√©j√† format√© ou si c'est un nombre complet
          if (match.includes('‚Å∞') || match.includes('¬π') || match.includes('¬≤') || match.includes('¬≥')) {
            return match
          }
          return variable + convertToSuperscript(exponent)
        })
        parts.push(<span key={key++}>{processedBefore}</span>)
      }
      
      // Traite les puissances dans le num√©rateur et d√©nominateur
      const numerator = fractionMatch[1].replace(/([a-zA-Z])(\d+)/g, (match, variable, exponent) => {
        return variable + convertToSuperscript(exponent)
      })
      const denominator = fractionMatch[2].replace(/([a-zA-Z])(\d+)/g, (match, variable, exponent) => {
        return variable + convertToSuperscript(exponent)
      })
      
      parts.push(
        <Fraction 
          key={key++} 
          numerator={numerator} 
          denominator={denominator} 
        />
      )
      
      remaining = remaining.substring(fractionMatch.index! + fractionMatch[0].length)
    } else {
      // Pas d'autres fractions, traiter les puissances dans le reste
      const processedRemaining = remaining.replace(/([a-zA-Z])(\d+)/g, (match, variable, exponent) => {
        // Ne pas traiter si c'est d√©j√† format√©
        if (match.includes('‚Å∞') || match.includes('¬π') || match.includes('¬≤') || match.includes('¬≥')) {
          return match
        }
        return variable + convertToSuperscript(exponent)
      })
      parts.push(<span key={key++}>{processedRemaining}</span>)
      break
    }
  }

  return <span className={className}>{parts}</span>
}

// Fonction pour convertir les nombres en exposants
const convertToSuperscript = (num: string): string => {
  const superscriptMap: { [key: string]: string } = {
    '0': '‚Å∞', '1': '¬π', '2': '¬≤', '3': '¬≥', '4': '‚Å¥',
    '5': '‚Åµ', '6': '‚Å∂', '7': '‚Å∑', '8': '‚Å∏', '9': '‚Åπ'
  }
  return num.split('').map(digit => superscriptMap[digit] || digit).join('')
}

export default function DeveloppementPage() {
  const [activeTab, setActiveTab] = useState<'cours' | 'exercices'>('cours')
  const [exerciseLevel, setExerciseLevel] = useState<'normal' | 'beast' | 'hardcore'>('normal')
  const [currentExercise, setCurrentExercise] = useState(0)
  const [userAnswer, setUserAnswer] = useState('')
  const [showAnswer, setShowAnswer] = useState(false)
  const [answerFeedback, setAnswerFeedback] = useState<'correct' | 'incorrect' | null>(null)
  
  // Compteurs de bonnes r√©ponses
  const [correctAnswersNormal, setCorrectAnswersNormal] = useState(0)
  const [correctAnswersBeast, setCorrectAnswersBeast] = useState(0)
  const [correctAnswersHardcore, setCorrectAnswersHardcore] = useState(0)
  const [showIncrement, setShowIncrement] = useState(false)
  
  // √âtats pour la solution d√©taill√©e
  const [showSolution, setShowSolution] = useState(false)
  const [solutionStep, setSolutionStep] = useState(0)
  
  const [animationPlaying, setAnimationPlaying] = useState(false)
  const [animationStep, setAnimationStep] = useState(0)
  const [selectedAnimation, setSelectedAnimation] = useState(0)

  // Animations pour expliquer la distributivit√©
  const distributivityAnimations = [
    {
      id: 'basic',
      title: 'üéØ Distributivit√© Simple',
      expression: '3(x + 2)',
      steps: [
        { phase: 'initial', content: '3(x + 2)', description: 'Expression de d√©part' },
        { phase: 'highlight', content: '3(x + 2)', description: 'Le 3 va se distribuer sur chaque terme' },
        { phase: 'distribute', content: '3 √ó x + 3 √ó 2', description: 'Distribution du 3 sur chaque terme' },
        { phase: 'calculate', content: '3x + 6', description: 'R√©sultat final' }
      ]
    },
    {
      id: 'negative',
      title: '‚ö° Avec Signe N√©gatif',
      expression: '-2(x + 3)',
      steps: [
        { phase: 'initial', content: '-2(x + 3)', description: 'Expression avec signe n√©gatif' },
        { phase: 'highlight', content: '-2(x + 3)', description: 'Le -2 va se distribuer' },
        { phase: 'distribute', content: '(-2) √ó x + (-2) √ó 3', description: 'Distribution du -2' },
        { phase: 'calculate', content: '-2x - 6', description: 'Attention aux signes !' }
      ]
    },
    {
      id: 'double',
      title: 'üöÄ Double Distributivit√©',
      expression: '(a + 1)(a + 2)',
      steps: [
        { phase: 'initial', content: '(a + 1)(a + 2)', description: 'Deux parenth√®ses √† multiplier' },
        { phase: 'arrow1', content: '(a + 1)(a + 2)', description: 'Premi√®re fl√®che : a √ó a' },
        { phase: 'arrow2', content: '(a + 1)(a + 2)', description: 'Deuxi√®me fl√®che : a √ó 2' },
        { phase: 'arrow3', content: '(a + 1)(a + 2)', description: 'Troisi√®me fl√®che : 1 √ó a' },
        { phase: 'arrow4', content: '(a + 1)(a + 2)', description: 'Quatri√®me fl√®che : 1 √ó 2' },
        { phase: 'distribute', content: 'a√óa + a√ó2 + 1√óa + 1√ó2', description: 'R√©capitulatif de tous les produits' },
        { phase: 'expand', content: 'a¬≤ + 2a + a + 2', description: 'D√©veloppement complet' },
        { phase: 'calculate', content: 'a¬≤ + 3a + 2', description: 'R√©duction finale : regrouper les termes similaires' }
      ]
    }
  ]

  // EXERCICES MODE NORMAL - Progression enrichie avec PUISSANCES et MOINS √ó MOINS
  const normalExercises = [
    // Niveau 1 : Distributivit√© simple - Bases
    {
      id: 1,
      question: "2(x + 3)",
      steps: [
        { text: "Expression de d√©part", expr: "2(x + 3)", color: "text-blue-600" },
        { text: "Distribution", expr: "2 √ó x + 2 √ó 3", color: "text-green-600" },
        { text: "R√©sultat", expr: "2x + 6", color: "text-purple-600" }
      ]
    },
    {
      id: 2,
      question: "-5(-x - 2)",
      steps: [
        { text: "Expression de d√©part", expr: "-5(-x - 2)", color: "text-blue-600" },
        { text: "Distribution", expr: "(-5) √ó (-x) + (-5) √ó (-2)", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+5x + 10", color: "text-orange-600" },
        { text: "R√©sultat", expr: "5x + 10", color: "text-purple-600" }
      ]
    },
    {
      id: 3,
      question: "3x¬≤(x - 4)",
      steps: [
        { text: "Expression de d√©part", expr: "3x¬≤(x - 4)", color: "text-blue-600" },
        { text: "Distribution avec puissances", expr: "3x¬≤ √ó x + 3x¬≤ √ó (-4)", color: "text-green-600" },
        { text: "Calcul des puissances", expr: "3x¬≥ - 12x¬≤", color: "text-orange-600" },
        { text: "R√©sultat", expr: "3x¬≥ - 12x¬≤", color: "text-purple-600" }
      ]
    },
    {
      id: 4,
      question: "-2x(-x¬≤ + 5)",
      steps: [
        { text: "Expression de d√©part", expr: "-2x(-x¬≤ + 5)", color: "text-blue-600" },
        { text: "Distribution", expr: "(-2x) √ó (-x¬≤) + (-2x) √ó 5", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+2x¬≥ - 10x", color: "text-orange-600" },
        { text: "R√©sultat", expr: "2x¬≥ - 10x", color: "text-purple-600" }
      ]
    },
    {
      id: 5,
      question: "-3(-y¬≥ - 2y)",
      steps: [
        { text: "Expression de d√©part", expr: "-3(-y¬≥ - 2y)", color: "text-blue-600" },
        { text: "Distribution", expr: "(-3) √ó (-y¬≥) + (-3) √ó (-2y)", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+3y¬≥ + 6y", color: "text-orange-600" },
        { text: "R√©sultat", expr: "3y¬≥ + 6y", color: "text-purple-600" }
      ]
    },
    {
      id: 6,
      question: "x¬≥(2x¬≤ - 3x)",
      steps: [
        { text: "Expression de d√©part", expr: "x¬≥(2x¬≤ - 3x)", color: "text-blue-600" },
        { text: "Distribution avec puissances", expr: "x¬≥ √ó 2x¬≤ + x¬≥ √ó (-3x)", color: "text-green-600" },
        { text: "Calcul des puissances", expr: "2x‚Åµ - 3x‚Å¥", color: "text-orange-600" },
        { text: "R√©sultat", expr: "2x‚Åµ - 3x‚Å¥", color: "text-purple-600" }
      ]
    },
    {
      id: 7,
      question: "-4a¬≤(-a¬≤ - 3a)",
      steps: [
        { text: "Expression de d√©part", expr: "-4a¬≤(-a¬≤ - 3a)", color: "text-blue-600" },
        { text: "Distribution", expr: "(-4a¬≤) √ó (-a¬≤) + (-4a¬≤) √ó (-3a)", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+4a‚Å¥ + 12a¬≥", color: "text-orange-600" },
        { text: "R√©sultat", expr: "4a‚Å¥ + 12a¬≥", color: "text-purple-600" }
      ]
    },
    {
      id: 8,
      question: "-x‚Å¥(-2x - 7)",
      steps: [
        { text: "Expression de d√©part", expr: "-x‚Å¥(-2x - 7)", color: "text-blue-600" },
        { text: "Distribution", expr: "(-x‚Å¥) √ó (-2x) + (-x‚Å¥) √ó (-7)", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+2x‚Åµ + 7x‚Å¥", color: "text-orange-600" },
        { text: "R√©sultat", expr: "2x‚Åµ + 7x‚Å¥", color: "text-purple-600" }
      ]
    },
    
    // Niveau 3 : Double distributivit√© avec puissances et signes n√©gatifs
    {
      id: 9,
      question: "(x¬≤ - 3)(-x + 2)",
      steps: [
        { text: "Expression de d√©part", expr: "(x¬≤ - 3)(-x + 2)", color: "text-blue-600" },
        { text: "Tous les produits", expr: "x¬≤√ó(-x) + x¬≤√ó2 + (-3)√ó(-x) + (-3)√ó2", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "-x¬≥ + 2x¬≤ + 3x - 6", color: "text-orange-600" },
        { text: "R√©sultat", expr: "-x¬≥ + 2x¬≤ + 3x - 6", color: "text-purple-600" }
      ]
    },
    {
      id: 10,
      question: "(-x¬≤ - 1)(-x - 4)",
      steps: [
        { text: "Expression de d√©part", expr: "(-x¬≤ - 1)(-x - 4)", color: "text-blue-600" },
        { text: "Tous les produits", expr: "(-x¬≤)√ó(-x) + (-x¬≤)√ó(-4) + (-1)√ó(-x) + (-1)√ó(-4)", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+x¬≥ + 4x¬≤ + x + 4", color: "text-orange-600" },
        { text: "R√©sultat", expr: "x¬≥ + 4x¬≤ + x + 4", color: "text-purple-600" }
      ]
    },
    {
      id: 11,
      question: "(2x¬≥ - 5)(-x¬≤ + 3)",
      steps: [
        { text: "Expression de d√©part", expr: "(2x¬≥ - 5)(-x¬≤ + 3)", color: "text-blue-600" },
        { text: "Tous les produits", expr: "2x¬≥√ó(-x¬≤) + 2x¬≥√ó3 + (-5)√ó(-x¬≤) + (-5)√ó3", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "-2x‚Åµ + 6x¬≥ + 5x¬≤ - 15", color: "text-orange-600" },
        { text: "R√©sultat", expr: "-2x‚Åµ + 6x¬≥ + 5x¬≤ - 15", color: "text-purple-600" }
      ]
    },
    {
      id: 12,
      question: "(-x‚Å¥ - 2x)(-3x - 1)",
      steps: [
        { text: "Expression de d√©part", expr: "(-x‚Å¥ - 2x)(-3x - 1)", color: "text-blue-600" },
        { text: "Tous les produits", expr: "(-x‚Å¥)√ó(-3x) + (-x‚Å¥)√ó(-1) + (-2x)√ó(-3x) + (-2x)√ó(-1)", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+3x‚Åµ + x‚Å¥ + 6x¬≤ + 2x", color: "text-orange-600" },
        { text: "R√©sultat", expr: "3x‚Åµ + x‚Å¥ + 6x¬≤ + 2x", color: "text-purple-600" }
      ]
    },
    
    // Niveau 4 : Coefficients avec puissances et signes n√©gatifs intensifs
    {
      id: 13,
      question: "(-3x¬≤ + 4)(-2x¬≥ - 5)",
      steps: [
        { text: "Expression de d√©part", expr: "(-3x¬≤ + 4)(-2x¬≥ - 5)", color: "text-blue-600" },
        { text: "Tous les produits", expr: "(-3x¬≤)√ó(-2x¬≥) + (-3x¬≤)√ó(-5) + 4√ó(-2x¬≥) + 4√ó(-5)", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+6x‚Åµ + 15x¬≤ - 8x¬≥ - 20", color: "text-orange-600" },
        { text: "R√©sultat", expr: "6x‚Åµ - 8x¬≥ + 15x¬≤ - 20", color: "text-purple-600" }
      ]
    },
    {
      id: 14,
      question: "(-4a¬≥ - 3a)(-a¬≤ + 2)",
      steps: [
        { text: "Expression de d√©part", expr: "(-4a¬≥ - 3a)(-a¬≤ + 2)", color: "text-blue-600" },
        { text: "Tous les produits", expr: "(-4a¬≥)√ó(-a¬≤) + (-4a¬≥)√ó2 + (-3a)√ó(-a¬≤) + (-3a)√ó2", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+4a‚Åµ - 8a¬≥ + 3a¬≥ - 6a", color: "text-orange-600" },
        { text: "R√©sultat", expr: "4a‚Åµ - 5a¬≥ - 6a", color: "text-purple-600" }
      ]
    },
    {
      id: 15,
      question: "(-2x‚Å¥ + x¬≤)(-3x¬≤ - 7)",
      steps: [
        { text: "Expression de d√©part", expr: "(-2x‚Å¥ + x¬≤)(-3x¬≤ - 7)", color: "text-blue-600" },
        { text: "Tous les produits", expr: "(-2x‚Å¥)√ó(-3x¬≤) + (-2x‚Å¥)√ó(-7) + x¬≤√ó(-3x¬≤) + x¬≤√ó(-7)", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+6x‚Å∂ + 14x‚Å¥ - 3x‚Å¥ - 7x¬≤", color: "text-orange-600" },
        { text: "R√©sultat", expr: "6x‚Å∂ + 11x‚Å¥ - 7x¬≤", color: "text-purple-600" }
      ]
    },
    
    // Niveau 5 : Puissances √©lev√©es avec signes n√©gatifs
    {
      id: 16,
      question: "-5x¬≥(-x‚Å¥ - 2x¬≤)",
      steps: [
        { text: "Expression de d√©part", expr: "-5x¬≥(-x‚Å¥ - 2x¬≤)", color: "text-blue-600" },
        { text: "Distribution", expr: "(-5x¬≥) √ó (-x‚Å¥) + (-5x¬≥) √ó (-2x¬≤)", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+5x‚Å∑ + 10x‚Åµ", color: "text-orange-600" },
        { text: "R√©sultat", expr: "5x‚Å∑ + 10x‚Åµ", color: "text-purple-600" }
      ]
    },
    {
      id: 17,
      question: "(-x‚Åµ - 4x¬≤)(-2x + 3)",
      steps: [
        { text: "Expression de d√©part", expr: "(-x‚Åµ - 4x¬≤)(-2x + 3)", color: "text-blue-600" },
        { text: "Tous les produits", expr: "(-x‚Åµ)√ó(-2x) + (-x‚Åµ)√ó3 + (-4x¬≤)√ó(-2x) + (-4x¬≤)√ó3", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+2x‚Å∂ - 3x‚Åµ + 8x¬≥ - 12x¬≤", color: "text-orange-600" },
        { text: "R√©sultat", expr: "2x‚Å∂ - 3x‚Åµ + 8x¬≥ - 12x¬≤", color: "text-purple-600" }
      ]
    },
    {
      id: 18,
      question: "(-3y‚Å¥ + 2y)(-y¬≥ - 5y)",
      steps: [
        { text: "Expression de d√©part", expr: "(-3y‚Å¥ + 2y)(-y¬≥ - 5y)", color: "text-blue-600" },
        { text: "Tous les produits", expr: "(-3y‚Å¥)√ó(-y¬≥) + (-3y‚Å¥)√ó(-5y) + 2y√ó(-y¬≥) + 2y√ó(-5y)", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+3y‚Å∑ + 15y‚Åµ - 2y‚Å¥ - 10y¬≤", color: "text-orange-600" },
        { text: "R√©sultat", expr: "3y‚Å∑ + 15y‚Åµ - 2y‚Å¥ - 10y¬≤", color: "text-purple-600" }
      ]
    },
    
    // Niveau 6 : Introduction aux priorit√©s op√©ratoires
    {
      id: 19,
      question: "x¬≤ + 2x(x - 3)",
      steps: [
        { text: "Expression de d√©part", expr: "x¬≤ + 2x(x - 3)", color: "text-blue-600" },
        { text: "üìö Priorit√©s : d'abord la parenth√®se", expr: "D'abord d√©velopper 2x(x - 3)", color: "text-green-600" },
        { text: "D√©veloppement", expr: "2x √ó x + 2x √ó (-3) = 2x¬≤ - 6x", color: "text-orange-600" },
        { text: "Substitution", expr: "x¬≤ + (2x¬≤ - 6x)", color: "text-red-600" },
        { text: "R√©sultat", expr: "3x¬≤ - 6x", color: "text-purple-600" }
      ]
    },
    {
      id: 20,
      question: "3x - (x + 2)(x - 1)",
      steps: [
        { text: "Expression de d√©part", expr: "3x - (x + 2)(x - 1)", color: "text-blue-600" },
        { text: "üìö Priorit√©s : d√©velopper la double distributivit√©", expr: "D'abord (x + 2)(x - 1)", color: "text-green-600" },
        { text: "D√©veloppement", expr: "x¬≤ - x + 2x - 2 = x¬≤ + x - 2", color: "text-orange-600" },
        { text: "Substitution", expr: "3x - (x¬≤ + x - 2)", color: "text-red-600" },
        { text: "R√©sultat", expr: "3x - x¬≤ - x + 2 = -x¬≤ + 2x + 2", color: "text-purple-600" }
      ]
    },
    
    // Niveau 7 : Priorit√©s avec multiplication
    {
      id: 21,
      question: "2x¬≤ + x(x + 3) - 4",
      steps: [
        { text: "Expression de d√©part", expr: "2x¬≤ + x(x + 3) - 4", color: "text-blue-600" },
        { text: "üìö D√©velopper x(x + 3)", expr: "x √ó x + x √ó 3 = x¬≤ + 3x", color: "text-green-600" },
        { text: "Substitution", expr: "2x¬≤ + (x¬≤ + 3x) - 4", color: "text-orange-600" },
        { text: "R√©sultat", expr: "3x¬≤ + 3x - 4", color: "text-purple-600" }
      ]
    },
    {
      id: 22,
      question: "5x - 2x(x - 2) + x¬≤",
      steps: [
        { text: "Expression de d√©part", expr: "5x - 2x(x - 2) + x¬≤", color: "text-blue-600" },
        { text: "üìö D√©velopper 2x(x - 2)", expr: "2x √ó x + 2x √ó (-2) = 2x¬≤ - 4x", color: "text-green-600" },
        { text: "Substitution", expr: "5x - (2x¬≤ - 4x) + x¬≤", color: "text-orange-600" },
        { text: "Calcul", expr: "5x - 2x¬≤ + 4x + x¬≤", color: "text-red-600" },
        { text: "R√©sultat", expr: "-x¬≤ + 9x", color: "text-purple-600" }
      ]
    },
    {
      id: 23,
      question: "(x + 1)(x - 2) + 3x",
      steps: [
        { text: "Expression de d√©part", expr: "(x + 1)(x - 2) + 3x", color: "text-blue-600" },
        { text: "üìö D√©velopper (x + 1)(x - 2)", expr: "x¬≤ - 2x + x - 2 = x¬≤ - x - 2", color: "text-green-600" },
        { text: "Substitution", expr: "(x¬≤ - x - 2) + 3x", color: "text-orange-600" },
        { text: "R√©sultat", expr: "x¬≤ + 2x - 2", color: "text-purple-600" }
      ]
    },
    {
      id: 24,
      question: "x¬≤ - (x - 1)¬≤ + 2x",
      steps: [
        { text: "Expression de d√©part", expr: "x¬≤ - (x - 1)¬≤ + 2x", color: "text-blue-600" },
        { text: "üìö D√©velopper (x - 1)¬≤", expr: "(x - 1)(x - 1) = x¬≤ - 2x + 1", color: "text-green-600" },
        { text: "Substitution", expr: "x¬≤ - (x¬≤ - 2x + 1) + 2x", color: "text-orange-600" },
        { text: "Calcul", expr: "x¬≤ - x¬≤ + 2x - 1 + 2x", color: "text-red-600" },
        { text: "R√©sultat", expr: "4x - 1", color: "text-purple-600" }
      ]
    },
    {
      id: 25,
      question: "2(x + 3)(x - 1) - x(x + 4)",
      steps: [
        { text: "Expression de d√©part", expr: "2(x + 3)(x - 1) - x(x + 4)", color: "text-blue-600" },
        { text: "üìö D√©velopper (x + 3)(x - 1)", expr: "x¬≤ - x + 3x - 3 = x¬≤ + 2x - 3", color: "text-green-600" },
        { text: "D√©velopper x(x + 4)", expr: "x¬≤ + 4x", color: "text-orange-600" },
        { text: "Substitution", expr: "2(x¬≤ + 2x - 3) - (x¬≤ + 4x)", color: "text-red-600" },
        { text: "Calcul", expr: "2x¬≤ + 4x - 6 - x¬≤ - 4x", color: "text-green-600" },
        { text: "R√©sultat", expr: "x¬≤ - 6", color: "text-purple-600" }
      ]
    }
  ]

  // EXERCICES MODE BEAST - Tr√®s difficiles d√®s le d√©but !
  const beastExercises = [
    // Beast Niveau 1-12 : INTENSIT√â MAXIMALE mais distributivit√© 2x2 ou 2x3 max
    {
      id: 1,
      question: "(-7x¬≥y¬≤)(5x¬≤y‚Å¥ - 8x‚Å¥z¬≤)",
      steps: [
        { text: "Expression de d√©part", expr: "(-7x¬≥y¬≤)(5x¬≤y‚Å¥ - 8x‚Å¥z¬≤)", color: "text-blue-600" },
        { text: "üî• BEAST ! Distribution puissante", expr: "(-7x¬≥y¬≤)√ó5x¬≤y‚Å¥ + (-7x¬≥y¬≤)√ó(-8x‚Å¥z¬≤)", color: "text-orange-600" },
        { text: "Calcul des puissances", expr: "-35x‚Åµy‚Å∂ + 56x‚Å∑y¬≤z¬≤", color: "text-red-600" },
        { text: "R√©sultat explosif", expr: "56x‚Å∑y¬≤z¬≤ - 35x‚Åµy‚Å∂", color: "text-purple-600" }
      ]
    },
    {
      id: 2,
      question: "(6x‚Å¥ - 9y¬≥)(11x¬≤ - 4xy¬≤)",
      steps: [
        { text: "Expression de d√©part", expr: "(6x‚Å¥ - 9y¬≥)(11x¬≤ - 4xy¬≤)", color: "text-blue-600" },
        { text: "üî• Quatre produits beast !", expr: "6x‚Å¥√ó11x¬≤ + 6x‚Å¥√ó(-4xy¬≤) + (-9y¬≥)√ó11x¬≤ + (-9y¬≥)√ó(-4xy¬≤)", color: "text-orange-600" },
        { text: "Calcul beast", expr: "66x‚Å∂ - 24x‚Åµy¬≤ - 99x¬≤y¬≥ + 36xy‚Åµ", color: "text-red-600" },
        { text: "R√©sultat beast", expr: "66x‚Å∂ - 24x‚Åµy¬≤ - 99x¬≤y¬≥ + 36xy‚Åµ", color: "text-purple-600" }
      ]
    },
    {
      id: 3,
      question: "(-4x‚Åµ - 7y¬≥z¬≤)(-12x¬≥y¬≤ - 5x¬≤y)",
      steps: [
        { text: "Expression de d√©part", expr: "(-4x‚Åµ - 7y¬≥z¬≤)(-12x¬≥y¬≤ - 5x¬≤y)", color: "text-blue-600" },
        { text: "üî• BEAST MOINS √ó MOINS !", expr: "Triple variables avec signes n√©gatifs", color: "text-orange-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+48x‚Å∏y¬≤ + 20x‚Å∑y + 84x¬≥y‚Åµz¬≤ + 35x¬≤y‚Å¥z¬≤", color: "text-red-600" },
        { text: "R√©sultat beast", expr: "48x‚Å∏y¬≤ + 20x‚Å∑y + 84x¬≥y‚Åµz¬≤ + 35x¬≤y‚Å¥z¬≤", color: "text-purple-600" }
      ]
    },
    {
      id: 4,
      question: "(8a‚Å¥b¬≤ - 15c¬≥)(9a¬≥b‚Å¥ - 13b¬≤)",
      steps: [
        { text: "Expression de d√©part", expr: "(8a‚Å¥b¬≤ - 15c¬≥)(9a¬≥b‚Å¥ - 13b¬≤)", color: "text-blue-600" },
        { text: "üî• BEAST ! Trois variables avec puissances √©lev√©es", expr: "Beast calculation", color: "text-orange-600" },
        { text: "R√©sultat beast", expr: "72a‚Å∑b‚Å∂ - 104a‚Å¥b‚Å¥ - 135a¬≥b‚Å¥c¬≥ + 195b¬≤c¬≥", color: "text-purple-600" }
      ]
    },
    {
      id: 5,
      question: "(-14x¬≥y‚Å¥)(6x‚Åµ - 17x¬≤y¬≥)",
      steps: [
        { text: "Expression de d√©part", expr: "(-14x¬≥y‚Å¥)(6x‚Åµ - 17x¬≤y¬≥)", color: "text-blue-600" },
        { text: "üî• Deux termes avec puissances √©lev√©es", expr: "(-14x¬≥y‚Å¥)√ó6x‚Åµ + (-14x¬≥y‚Å¥)√ó(-17x¬≤y¬≥)", color: "text-orange-600" },
        { text: "R√©sultat beast", expr: "-84x‚Å∏y‚Å¥ + 238x‚Åµy‚Å∑", color: "text-purple-600" }
      ]
    },
    
    // Beast Niveau 6 : ESCALADE BRUTALE
    {
      id: 6,
      question: "(12x‚Å∂ - 19x¬≥y‚Å¥)(7x¬≥ - 16y‚Åµ)",
      steps: [
        { text: "Expression de d√©part", expr: "(12x‚Å∂ - 19x¬≥y‚Å¥)(7x¬≥ - 16y‚Åµ)", color: "text-blue-600" },
        { text: "üî• BEAST ! 4 produits puissants", expr: "D√©veloppement beast", color: "text-orange-600" },
        { text: "R√©sultat beast", expr: "84x‚Åπ - 192x‚Å∂y‚Åµ - 133x‚Å∂y‚Å¥ + 304x¬≥y‚Åπ", color: "text-purple-600" }
      ]
    },
    {
      id: 7,
      question: "(-18a‚Å¥b‚Åµ + 23a¬≤bc¬≥)(11a‚Åµ - 25b‚Å¥)",
      steps: [
        { text: "Expression de d√©part", expr: "(-18a‚Å¥b‚Åµ + 23a¬≤bc¬≥)(11a‚Åµ - 25b‚Å¥)", color: "text-blue-600" },
        { text: "üî• Triple variables beast", expr: "Beast calculation", color: "text-orange-600" },
        { text: "R√©sultat beast", expr: "-198a‚Åπb‚Åµ + 450a‚Å¥b‚Åπ + 253a‚Å∑bc¬≥ - 575a¬≤b‚Åµc¬≥", color: "text-purple-600" }
      ]
    },
    {
      id: 8,
      question: "(21x‚Åµ + 13x¬≤y‚Å¥)(16x‚Å¥ - 29xy¬≥)",
      steps: [
        { text: "Expression de d√©part", expr: "(21x‚Åµ + 13x¬≤y‚Å¥)(16x‚Å¥ - 29xy¬≥)", color: "text-blue-600" },
        { text: "üî• Puissances jusqu'√† 9 !", expr: "x‚Åπ dans le r√©sultat", color: "text-orange-600" },
        { text: "R√©sultat beast", expr: "336x‚Åπ - 609x‚Å∂y¬≥ + 208x‚Å∂y‚Å¥ - 377x¬≥y‚Å∑", color: "text-purple-600" }
      ]
    },
    
    // Beast Niveau 9 : PUISSANCES D√âCHAIN√âES
    {
      id: 9,
      question: "(17x‚Å∑ - 22x‚Å¥y‚Åµ)(9x¬≥ + 31x¬≤y¬≤)",
      steps: [
        { text: "Expression de d√©part", expr: "(17x‚Å∑ - 22x‚Å¥y‚Åµ)(9x¬≥ + 31x¬≤y¬≤)", color: "text-blue-600" },
        { text: "üî• BEAST ! Puissances jusqu'√† 10", expr: "x¬π‚Å∞ beast", color: "text-orange-600" },
        { text: "R√©sultat beast", expr: "153x¬π‚Å∞ + 527x‚Åπy¬≤ - 198x‚Å∑y‚Åµ - 682x‚Å∂y‚Å∑", color: "text-purple-600" }
      ]
    },
    {
      id: 10,
      question: "(-26x‚Å∏ + 35x‚Åµy¬≥)(14x‚Å¥ - 47y‚Å∂)",
      steps: [
        { text: "Expression de d√©part", expr: "(-26x‚Å∏ + 35x‚Åµy¬≥)(14x‚Å¥ - 47y‚Å∂)", color: "text-blue-600" },
        { text: "üî• Puissance 12 maximale !", expr: "x¬π¬≤ beast mode", color: "text-orange-600" },
        { text: "R√©sultat beast", expr: "-364x¬π¬≤ + 1222x‚Å∏y‚Å∂ + 490x‚Åπy¬≥ - 1645x‚Åµy‚Åπ", color: "text-red-600" },
        { text: "Simplifi√©", expr: "-364x¬π¬≤ + 490x‚Åπy¬≥ + 1222x‚Å∏y‚Å∂ - 1645x‚Åµy‚Åπ", color: "text-purple-600" }
      ]
    },
    
    // Beast Niveau 11-12 : QUATRE VARIABLES !
    {
      id: 11,
      question: "(28x¬≥y¬≤ - 41z‚Å¥w¬≥)(15xy‚Å¥ - 33xz¬≤)",
      steps: [
        { text: "Expression de d√©part", expr: "(28x¬≥y¬≤ - 41z‚Å¥w¬≥)(15xy‚Å¥ - 33xz¬≤)", color: "text-blue-600" },
        { text: "üî• QUATRE VARIABLES BEAST !", expr: "x, y, z, w ensemble", color: "text-orange-600" },
        { text: "R√©sultat beast", expr: "420x‚Å¥y‚Å∂ - 924x‚Å¥y¬≤z¬≤ - 615x¬≤y‚Å¥z‚Å¥w¬≥ + 1353x¬≤z‚Å∂w¬≥", color: "text-purple-600" }
      ]
    },
    {
      id: 12,
      question: "(-39a‚Å∂b¬≤c‚Å¥ + 52a¬≥b‚Å∑d¬≤)(18a‚Å¥b¬≥ - 27c¬≤d‚Åµ)",
      steps: [
        { text: "Expression de d√©part", expr: "(-39a‚Å∂b¬≤c‚Å¥ + 52a¬≥b‚Å∑d¬≤)(18a‚Å¥b¬≥ - 27c¬≤d‚Åµ)", color: "text-blue-600" },
        { text: "üî• Quatre variables avec signes beast", expr: "a, b, c, d beast", color: "text-orange-600" },
        { text: "R√©sultat beast", expr: "-702a¬π‚Å∞b‚Åµc‚Å¥ + 1053a‚Å∂b¬≤c‚Å∂d‚Åµ + 936a‚Å∑b¬π‚Å∞d¬≤ - 1404a¬≥b‚Å∑c¬≤d‚Å∑", color: "text-purple-600" }
      ]
    },
    
    // Beast Niveau 13-22 : SOMMES DE DOUBLE DISTRIBUTIVIT√â !
    {
      id: 13,
      question: "(7x¬≤ + 15)(9x - 23) + (11x - 19)(4x¬≤ + 31)",
      steps: [
        { text: "Expression de d√©part", expr: "(7x¬≤ + 15)(9x - 23) + (11x - 19)(4x¬≤ + 31)", color: "text-blue-600" },
        { text: "üî• SOMME DE DOUBLE DISTRIBUTIVIT√â !", expr: "Deux doubles d√©veloppements", color: "text-orange-600" },
        { text: "Premier d√©veloppement", expr: "63x¬≥ - 161x¬≤ + 135x - 345", color: "text-green-600" },
        { text: "Second d√©veloppement", expr: "44x¬≥ + 341x - 76x¬≤ - 589", color: "text-orange-600" },
        { text: "Somme finale", expr: "63x¬≥ - 161x¬≤ + 135x - 345 + 44x¬≥ - 76x¬≤ + 341x - 589", color: "text-red-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "107x¬≥ - 237x¬≤ + 476x - 934", color: "text-purple-600" }
      ]
    },
    {
      id: 14,
      question: "(18x¬≥ - 37)(12x + 29) + (25x¬≤ - 41)(16x - 53)",
      steps: [
        { text: "Expression de d√©part", expr: "(18x¬≥ - 37)(12x + 29) + (25x¬≤ - 41)(16x - 53)", color: "text-blue-600" },
        { text: "üî• DOUBLE SOMME BEAST !", expr: "Calcul des deux produits", color: "text-orange-600" },
        { text: "Premier", expr: "216x‚Å¥ + 522x¬≥ - 444x - 1073", color: "text-green-600" },
        { text: "Second", expr: "400x¬≥ - 1325x¬≤ - 656x + 2173", color: "text-orange-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "216x‚Å¥ + 922x¬≥ - 1325x¬≤ - 1100x + 1100", color: "text-purple-600" }
      ]
    },
    {
      id: 15,
      question: "(14x‚Å¥ - 28)(17x¬≤ + 39) + (22x¬≥ - 61)(13x‚Åµ + 47)",
      steps: [
        { text: "Expression de d√©part", expr: "(14x‚Å¥ - 28)(17x¬≤ + 39) + (22x¬≥ - 61)(13x‚Åµ + 47)", color: "text-blue-600" },
        { text: "üî• PUISSANCES DANS LA SOMME !", expr: "Degr√© 8 beast", color: "text-orange-600" },
        { text: "Premier", expr: "238x‚Å∂ + 546x‚Å¥ - 476x¬≤ - 1092", color: "text-green-600" },
        { text: "Second", expr: "286x‚Å∏ + 1034x¬≥ - 793x‚Åµ - 2867", color: "text-orange-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "286x‚Å∏ + 238x‚Å∂ - 793x‚Åµ + 546x‚Å¥ + 1034x¬≥ - 476x¬≤ - 3959", color: "text-purple-600" }
      ]
    },
    {
      id: 16,
      question: "(43x¬≥ - 67y‚Å¥)(29x¬≤ + 71y) + (-58x‚Å¥ + 83y¬≤)(19x - 97y¬≥)",
      steps: [
        { text: "Expression de d√©part", expr: "(43x¬≥ - 67y‚Å¥)(29x¬≤ + 71y) + (-58x‚Å¥ + 83y¬≤)(19x - 97y¬≥)", color: "text-blue-600" },
        { text: "üî• DEUX VARIABLES BEAST SOMME !", expr: "x et y dans les deux", color: "text-orange-600" },
        { text: "Premier", expr: "1247x‚Åµ + 3053x¬≥y - 1943x¬≤y‚Å¥ - 4757y‚Åµ", color: "text-green-600" },
        { text: "Second", expr: "-1102x‚Åµ + 5626x‚Å¥y¬≥ + 1577x¬≤y¬≤ - 8051y‚Åµ", color: "text-orange-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "145x‚Åµ + 5626x‚Å¥y¬≥ + 3053x¬≥y - 366x¬≤y‚Å¥ + 1577x¬≤y¬≤ - 12808y‚Åµ", color: "text-purple-600" }
      ]
    },
    {
      id: 17,
      question: "(73a‚Å¥ + 89b¬≥)(41a¬≤ - 127b‚Åµ) + (106a¬≥ + 154b¬≤)(62a‚Å¥ - 179b‚Å∂)",
      steps: [
        { text: "Expression de d√©part", expr: "(73a‚Å¥ + 89b¬≥)(41a¬≤ - 127b‚Åµ) + (106a¬≥ + 154b¬≤)(62a‚Å¥ - 179b‚Å∂)", color: "text-blue-600" },
        { text: "üî• VARIABLES a,b BEAST SOMME !", expr: "Double distributivit√© complexe", color: "text-orange-600" },
        { text: "Premier", expr: "2993a‚Å∂ - 9271a‚Å¥b‚Åµ + 3649a¬≤b¬≥ - 11303b‚Å∏", color: "text-green-600" },
        { text: "Second", expr: "6572a‚Å∑ - 18974a¬≥b‚Å∂ + 9548a‚Å¥b¬≤ - 27566b‚Å∏", color: "text-orange-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "6572a‚Å∑ + 2993a‚Å∂ + 9548a‚Å¥b¬≤ - 9271a‚Å¥b‚Åµ + 3649a¬≤b¬≥ - 18974a¬≥b‚Å∂ - 38869b‚Å∏", color: "text-purple-600" }
      ]
    },
    {
      id: 18,
      question: "(91x‚Å∂ + 137x¬≥)(83x‚Å¥ - 211) + (168x‚Åµ - 229)(94x‚Å∑ - 317x¬≤)",
      steps: [
        { text: "Expression de d√©part", expr: "(91x‚Å∂ + 137x¬≥)(83x‚Å¥ - 211) + (168x‚Åµ - 229)(94x‚Å∑ - 317x¬≤)", color: "text-blue-600" },
        { text: "üî• DEGR√â 12 BEAST SOMME !", expr: "x¬π¬≤ partout", color: "text-orange-600" },
        { text: "Premier", expr: "7553x¬π‚Å∞ - 19201x‚Å∂ + 11371x‚Å∑ - 28907x¬≥", color: "text-green-600" },
        { text: "Second", expr: "15792x¬π¬≤ - 53256x‚Å∑ - 21526x‚Å∑ + 72593x¬≤", color: "text-orange-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "15792x¬π¬≤ + 7553x¬π‚Å∞ - 63411x‚Å∑ - 19201x‚Å∂ - 28907x¬≥ + 72593x¬≤", color: "text-purple-600" }
      ]
    },
    {
      id: 19,
      question: "(247x‚Å¥ - 359y‚Å∂)(182x¬≥ + 431y¬≤) + (503x‚Å∑ + 617y‚Å¥)(274x - 389y¬≥)",
      steps: [
        { text: "Expression de d√©part", expr: "(247x‚Å¥ - 359y‚Å∂)(182x¬≥ + 431y¬≤) + (503x‚Å∑ + 617y‚Å¥)(274x - 389y¬≥)", color: "text-blue-600" },
        { text: "üî• VARIABLES CROIS√âES BEAST !", expr: "Somme complexe", color: "text-orange-600" },
        { text: "Premier", expr: "44954x‚Å∑ + 106457x‚Å¥y¬≤ - 65338x¬≥y‚Å∂ - 154729y‚Å∏", color: "text-green-600" },
        { text: "Second", expr: "137822x‚Å∏ - 195617x‚Å∑y¬≥ + 169058x‚Å¥y - 240013y‚Å∑", color: "text-orange-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "137822x‚Å∏ + 44954x‚Å∑ - 195617x‚Å∑y¬≥ + 169058x‚Å¥y + 106457x‚Å¥y¬≤ - 65338x¬≥y‚Å∂ - 240013y‚Å∑ - 154729y‚Å∏", color: "text-purple-600" }
      ]
    },
    {
      id: 20,
      question: "(683x‚Å∏ - 791)(422x¬≥ + 857) + (934x‚Åµ + 1246)(519x‚Å∂ - 1382)",
      steps: [
        { text: "Expression de d√©part", expr: "(683x‚Å∏ - 791)(422x¬≥ + 857) + (934x‚Åµ + 1246)(519x‚Å∂ - 1382)", color: "text-blue-600" },
        { text: "üî• COEFFICIENTS √âLEV√âS BEAST !", expr: "Gros coefficients", color: "text-orange-600" },
        { text: "Premier", expr: "288226x¬π¬π + 585331x‚Å∏ - 333802x¬≥ - 678087", color: "text-green-600" },
        { text: "Second", expr: "484746x¬π¬π - 1290788x‚Åµ + 646674x‚Å∂ - 1721972", color: "text-orange-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "772972x¬π¬π + 585331x‚Å∏ + 646674x‚Å∂ - 1290788x‚Åµ - 333802x¬≥ - 2400059", color: "text-purple-600" }
      ]
    },
    {
      id: 21,
      question: "(1547x‚Åπ - 1823x‚Å¥)(1094x‚Åµ + 1376x¬≤) + (2156x‚Å∑ - 2489)(1738x‚Å∂ + 2017x¬≥)",
      steps: [
        { text: "Expression de d√©part", expr: "(1547x‚Åπ - 1823x‚Å¥)(1094x‚Åµ + 1376x¬≤) + (2156x‚Å∑ - 2489)(1738x‚Å∂ + 2017x¬≥)", color: "text-blue-600" },
        { text: "üî• DEGR√â 14 COMPLEXE BEAST !", expr: "x¬π‚Å¥ avec coefficients", color: "text-orange-600" },
        { text: "Premier", expr: "1692418x¬π‚Å¥ + 2128672x¬π¬π - 1993162x‚Åπ - 2507848x‚Å∂", color: "text-green-600" },
        { text: "Second", expr: "3747128x¬π¬≥ + 4346652x¬π‚Å∞ - 4324582x‚Å∂ - 5021813x¬≥", color: "text-orange-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "1692418x¬π‚Å¥ + 3747128x¬π¬≥ + 2128672x¬π¬π + 4346652x¬π‚Å∞ - 1993162x‚Åπ - 6832430x‚Å∂ - 5021813x¬≥", color: "text-purple-600" }
      ]
    },
    {
      id: 22,
      question: "(2847a‚Å∂ - 3196b‚Å∏)(1573a¬≥ + 2439b‚Å¥) + (4126a‚Åµ + 4823b‚Å∑)(2681a‚Å¥ - 3417b¬≤)",
      steps: [
        { text: "Expression de d√©part", expr: "(2847a‚Å∂ - 3196b‚Å∏)(1573a¬≥ + 2439b‚Å¥) + (4126a‚Åµ + 4823b‚Å∑)(2681a‚Å¥ - 3417b¬≤)", color: "text-blue-600" },
        { text: "üî• VARIABLES a,b ULTIMATE !", expr: "Coefficients maximums", color: "text-orange-600" },
        { text: "Premier", expr: "4479531a‚Åπ + 6946683a‚Å∂b‚Å¥ - 5028268a¬≥b‚Å∏ - 7795044b¬π¬≤", color: "text-green-600" },
        { text: "Second", expr: "11061706a‚Åπ - 14101442a‚Åµb¬≤ + 12933763a‚Å¥b‚Å∑ - 16481091b‚Åπ", color: "text-orange-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "15541237a‚Åπ + 6946683a‚Å∂b‚Å¥ - 14101442a‚Åµb¬≤ + 12933763a‚Å¥b‚Å∑ - 5028268a¬≥b‚Å∏ - 16481091b‚Åπ - 7795044b¬π¬≤", color: "text-purple-600" }
      ]
    },
    
    // Beast Niveau 23-24 : INTRODUCTION AUX PRIORIT√âS OP√âRATOIRES !
    {
      id: 23,
      question: "3x¬≤ + (2x - 1)(4x + 5) - x(x - 3) √ó 2",
      steps: [
        { text: "Expression de d√©part", expr: "3x¬≤ + (2x - 1)(4x + 5) - x(x - 3) √ó 2", color: "text-blue-600" },
        { text: "üî• PRIORIT√âS OP√âRATOIRES BEAST !", expr: "D'abord les parenth√®ses, puis la multiplication", color: "text-orange-600" },
        { text: "D√©veloppement (2x - 1)(4x + 5)", expr: "8x¬≤ + 10x - 4x - 5 = 8x¬≤ + 6x - 5", color: "text-green-600" },
        { text: "D√©veloppement x(x - 3) √ó 2", expr: "2x(x - 3) = 2x¬≤ - 6x", color: "text-orange-600" },
        { text: "Substitution", expr: "3x¬≤ + (8x¬≤ + 6x - 5) - (2x¬≤ - 6x)", color: "text-red-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "9x¬≤ + 12x - 5", color: "text-purple-600" }
      ]
    },
    {
      id: 24,
      question: "5x¬≥ - 2x(3x¬≤ - 4x + 1) + (x + 2)(x¬≤ - 3) √ó 3",
      steps: [
        { text: "Expression de d√©part", expr: "5x¬≥ - 2x(3x¬≤ - 4x + 1) + (x + 2)(x¬≤ - 3) √ó 3", color: "text-blue-600" },
        { text: "üî• PRIORIT√âS COMPLEXES BEAST !", expr: "Multiple distributivit√©s avec priorit√©s", color: "text-orange-600" },
        { text: "D√©veloppement 2x(3x¬≤ - 4x + 1)", expr: "6x¬≥ - 8x¬≤ + 2x", color: "text-green-600" },
        { text: "D√©veloppement (x + 2)(x¬≤ - 3) √ó 3", expr: "3(x¬≥ - 3x + 2x¬≤ - 6) = 3x¬≥ + 6x¬≤ - 9x - 18", color: "text-orange-600" },
        { text: "Substitution", expr: "5x¬≥ - (6x¬≥ - 8x¬≤ + 2x) + (3x¬≥ + 6x¬≤ - 9x - 18)", color: "text-red-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "2x¬≥ + 14x¬≤ - 11x - 18", color: "text-purple-600" }
      ]
    },

    // Beast Niveau 25-30 : PRIORIT√âS OP√âRATOIRES ESCALADANTES !
    {
      id: 25,
      question: "x¬≤ + 3x(2x - 1)¬≤ - (x + 1)(x - 2)(x + 3)",
      steps: [
        { text: "Expression de d√©part", expr: "x¬≤ + 3x(2x - 1)¬≤ - (x + 1)(x - 2)(x + 3)", color: "text-blue-600" },
        { text: "üî• CARR√â + TRIPLE PRODUIT BEAST !", expr: "Priorit√©s avec carr√© et triple multiplication", color: "text-orange-600" },
        { text: "D√©veloppement (2x - 1)¬≤", expr: "4x¬≤ - 4x + 1", color: "text-green-600" },
        { text: "D√©veloppement 3x(2x - 1)¬≤", expr: "3x(4x¬≤ - 4x + 1) = 12x¬≥ - 12x¬≤ + 3x", color: "text-orange-600" },
        { text: "Triple produit", expr: "(x + 1)(x - 2)(x + 3) = (x¬≤ - x - 2)(x + 3) = x¬≥ + 2x¬≤ - 5x - 6", color: "text-red-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "x¬≤ + 12x¬≥ - 12x¬≤ + 3x - x¬≥ - 2x¬≤ + 5x + 6 = 11x¬≥ - 13x¬≤ + 8x + 6", color: "text-purple-600" }
      ]
    },
    {
      id: 26,
      question: "2x‚Å¥ - x¬≤(3x + 2)¬≤ + 4x(x - 1)(2x + 3) - (x¬≤ + 1)¬≤",
      steps: [
        { text: "Expression de d√©part", expr: "2x‚Å¥ - x¬≤(3x + 2)¬≤ + 4x(x - 1)(2x + 3) - (x¬≤ + 1)¬≤", color: "text-blue-600" },
        { text: "üî• PRIORIT√âS MULTIPLES BEAST !", expr: "Carr√©s, doubles produits, tout ensemble", color: "text-orange-600" },
        { text: "D√©veloppement (3x + 2)¬≤", expr: "9x¬≤ + 12x + 4", color: "text-green-600" },
        { text: "Calcul x¬≤(3x + 2)¬≤", expr: "x¬≤(9x¬≤ + 12x + 4) = 9x‚Å¥ + 12x¬≥ + 4x¬≤", color: "text-orange-600" },
        { text: "Double produit (x - 1)(2x + 3)", expr: "2x¬≤ + 3x - 2x - 3 = 2x¬≤ + x - 3", color: "text-green-600" },
        { text: "Calcul 4x(x - 1)(2x + 3)", expr: "4x(2x¬≤ + x - 3) = 8x¬≥ + 4x¬≤ - 12x", color: "text-orange-600" },
        { text: "Carr√© (x¬≤ + 1)¬≤", expr: "x‚Å¥ + 2x¬≤ + 1", color: "text-red-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "2x‚Å¥ - 9x‚Å¥ - 12x¬≥ - 4x¬≤ + 8x¬≥ + 4x¬≤ - 12x - x‚Å¥ - 2x¬≤ - 1 = -8x‚Å¥ - 4x¬≥ - 2x¬≤ - 12x - 1", color: "text-purple-600" }
      ]
    },
    {
      id: 27,
      question: "3x(x + 1)¬≥ - 2(x - 2)¬≤(x + 3) + x¬≤(2x - 1)(x + 4)",
      steps: [
        { text: "Expression de d√©part", expr: "3x(x + 1)¬≥ - 2(x - 2)¬≤(x + 3) + x¬≤(2x - 1)(x + 4)", color: "text-blue-600" },
        { text: "üî• CUBE + CARR√âS MULTIPLES BEAST !", expr: "Cube, carr√© √ó bin√¥me, triple produit", color: "text-orange-600" },
        { text: "R√©sultat ultra-complexe", expr: "Expression beast avec puissances jusqu'√† 6", color: "text-purple-600" }
      ]
    },
    {
      id: 28,
      question: "x‚Åµ - 3x¬≤(2x - 1)¬≥ + 2(x + 1)¬≤(x - 3)¬≤ - x(x¬≤ + 2)¬≤",
      steps: [
        { text: "Expression de d√©part", expr: "x‚Åµ - 3x¬≤(2x - 1)¬≥ + 2(x + 1)¬≤(x - 3)¬≤ - x(x¬≤ + 2)¬≤", color: "text-blue-600" },
        { text: "üî• CUBES ET CARR√âS MULTIPLES !", expr: "Cube multipli√© par x¬≤, double carr√©, carr√© de trin√¥me", color: "text-orange-600" },
        { text: "üî• R√âSULTAT APOCALYPTIQUE", expr: "Expression g√©ante avec puissances jusqu'√† 8", color: "text-purple-600" }
      ]
    },
    {
      id: 29,
      question: "4x¬≤(x - 1)‚Å¥ - (2x + 1)¬≥(x - 2) + 3x(x + 3)¬≤(x - 4)¬≤",
      steps: [
        { text: "Expression de d√©part", expr: "4x¬≤(x - 1)‚Å¥ - (2x + 1)¬≥(x - 2) + 3x(x + 3)¬≤(x - 4)¬≤", color: "text-blue-600" },
        { text: "üî• PUISSANCE 4 + CUBES MULTIPLES !", expr: "Puissance 4, cube √ó bin√¥me, triple carr√©", color: "text-orange-600" },
        { text: "üî• BEAST ULTIME", expr: "Expression titanesque avec puissances jusqu'√† 9", color: "text-purple-600" }
      ]
    },
    {
      id: 30,
      question: "x¬≥(2x + 3)‚Å¥ - 2x¬≤(x - 1)¬≥(x + 2) + (3x - 2)¬≤(x + 1)¬≥",
      steps: [
        { text: "Expression de d√©part", expr: "x¬≥(2x + 3)‚Å¥ - 2x¬≤(x - 1)¬≥(x + 2) + (3x - 2)¬≤(x + 1)¬≥", color: "text-blue-600" },
        { text: "üî• PUISSANCE 4 MULTIPLICATIVE !", expr: "x¬≥ √ó puissance 4, triple produits, carr√© √ó cube", color: "text-orange-600" },
        { text: "üî• CHAMPION PRIORIT√âS", expr: "Expression colossale avec puissances jusqu'√† 10", color: "text-purple-600" }
      ]
    },

    // Beast Niveau 31-35 : APOCALYPSE PRIORIT√âS OP√âRATOIRES !
    {
      id: 31,
      question: "5x‚Å¥(x - 2)‚Åµ - 3x¬≤(2x + 1)‚Å¥(x - 3) + x(x + 1)¬≥(x - 1)¬≥",
      steps: [
        { text: "Expression de d√©part", expr: "5x‚Å¥(x - 2)‚Åµ - 3x¬≤(2x + 1)‚Å¥(x - 3) + x(x + 1)¬≥(x - 1)¬≥", color: "text-blue-600" },
        { text: "üíÄ PUISSANCE 5 APOCALYPTIQUE !", expr: "x‚Å¥ √ó puissance 5, quadruple produits", color: "text-orange-600" },
        { text: "üíÄ APOCALYPSE BEAST", expr: "Expression d√©moniaque avec puissances jusqu'√† 11", color: "text-purple-600" }
      ]
    },
    {
      id: 32,
      question: "x‚Å∂ - 2x¬≥(3x - 1)‚Åµ + 4x¬≤(x + 2)¬≥(2x - 3)¬≤ - (x¬≤ + x + 1)¬≥",
      steps: [
        { text: "Expression de d√©part", expr: "x‚Å∂ - 2x¬≥(3x - 1)‚Åµ + 4x¬≤(x + 2)¬≥(2x - 3)¬≤ - (x¬≤ + x + 1)¬≥", color: "text-blue-600" },
        { text: "üíÄ PUISSANCE 5 + CUBE DE TRIN√îME !", expr: "x¬≥ √ó puissance 5, quintuple produits, cube trin√¥me", color: "text-orange-600" },
        { text: "üíÄ SUPR√äME BEAST", expr: "Expression infernale avec puissances jusqu'√† 12", color: "text-purple-600" }
      ]
    },
    {
      id: 33,
      question: "3x‚Åµ(2x - 3)‚Å∂ - x‚Å¥(x + 1)‚Å¥(x - 2)¬≤ + 2x¬≤(3x + 2)¬≥(x - 1)¬≥",
      steps: [
        { text: "Expression de d√©part", expr: "3x‚Åµ(2x - 3)‚Å∂ - x‚Å¥(x + 1)‚Å¥(x - 2)¬≤ + 2x¬≤(3x + 2)¬≥(x - 1)¬≥", color: "text-blue-600" },
        { text: "üíÄ PUISSANCE 6 D√âMONIAQUE !", expr: "x‚Åµ √ó puissance 6, sextuple produits", color: "text-orange-600" },
        { text: "üíÄ L√âGENDE BEAST", expr: "Expression l√©gendaire avec puissances jusqu'√† 13", color: "text-purple-600" }
      ]
    },
    {
      id: 34,
      question: "x‚Å∑ - 4x‚Å¥(2x + 1)‚Å∑ + 3x¬≥(x - 1)‚Åµ(x + 2)¬≤ - 2x¬≤(3x + 1)‚Å¥(x - 3)¬≥",
      steps: [
        { text: "Expression de d√©part", expr: "x‚Å∑ - 4x‚Å¥(2x + 1)‚Å∑ + 3x¬≥(x - 1)‚Åµ(x + 2)¬≤ - 2x¬≤(3x + 1)‚Å¥(x - 3)¬≥", color: "text-blue-600" },
        { text: "üíÄ PUISSANCE 7 ULTIME !", expr: "x‚Å¥ √ó puissance 7, septuple produits", color: "text-orange-600" },
        { text: "üíÄ MA√éTRE BEAST", expr: "Expression mythique avec puissances jusqu'√† 14", color: "text-purple-600" }
      ]
    },
    {
      id: 35,
      question: "2x‚Å∏ - x‚Å∂(3x - 2)‚Å∏ + 5x‚Å¥(x + 1)‚Å∂(2x - 1)¬≥ - 3x¬≤(x¬≤ + x + 1)‚Å¥(x - 2)¬≤ + x(4x + 3)‚Åµ(x - 3)‚Å¥",
      steps: [
        { text: "Expression de d√©part", expr: "2x‚Å∏ - x‚Å∂(3x - 2)‚Å∏ + 5x‚Å¥(x + 1)‚Å∂(2x - 1)¬≥ - 3x¬≤(x¬≤ + x + 1)‚Å¥(x - 2)¬≤ + x(4x + 3)‚Åµ(x - 3)‚Å¥", color: "text-blue-600" },
        { text: "üíÄ PUISSANCE 8 APOCALYPSE FINALE !", expr: "x‚Å∂ √ó puissance 8, quintuple termes", color: "text-orange-600" },
        { text: "üíÄ EMPEREUR BEAST SUPR√äME !", expr: "5 termes g√©ants avec priorit√©s d√©mentielles", color: "text-red-600" },
        { text: "üíÄ CHAMPION PRIORIT√âS ULTIME", expr: "Expression divine avec puissances jusqu'√† 15", color: "text-purple-600" }
      ]
    }
  ]

  // EXERCICES MODE HARDCORE - FRACTIONS ET LA TOTALE ! üíÄ
  const hardcoreExercises = [
    // Hardcore Niveau 1-5 : FRACTIONS SIMPLES
    {
      id: 1,
      question: "(2/3)x¬≥((9/4)x¬≤ - (5/6)x)",
      steps: [
        { text: "Expression de d√©part", expr: "(2/3)x¬≥((9/4)x¬≤ - (5/6)x)", color: "text-blue-600" },
        { text: "üíÄ HARDCORE ! Distribution fractionnaire", expr: "(2/3)x¬≥ √ó (9/4)x¬≤ + (2/3)x¬≥ √ó (-(5/6)x)", color: "text-orange-600" },
        { text: "Premier produit", expr: "(2/3) √ó (9/4) √ó x‚Åµ = (18/12)x‚Åµ = (3/2)x‚Åµ", color: "text-green-600" },
        { text: "Second produit", expr: "(2/3) √ó (-(5/6)) √ó x‚Å¥ = -(10/18)x‚Å¥ = -(5/9)x‚Å¥", color: "text-red-600" },
        { text: "üíÄ R√âSULTAT HARDCORE", expr: "(3/2)x‚Åµ - (5/9)x‚Å¥", color: "text-purple-600" }
      ]
    },
    {
      id: 2,
      question: "((5/7)x‚Å¥y¬≤ - (3/8)y‚Åµ)((11/4)x¬≥ - (17/9)y¬≤)",
      steps: [
        { text: "Expression de d√©part", expr: "((5/7)x‚Å¥y¬≤ - (3/8)y‚Åµ)((11/4)x¬≥ - (17/9)y¬≤)", color: "text-blue-600" },
        { text: "üíÄ QUATRE PRODUITS FRACTIONNAIRES !", expr: "Tous les produits : 4 termes √† calculer", color: "text-orange-600" },
        { text: "Premier produit", expr: "(5/7) √ó (11/4) √ó x‚Å∑y¬≤ = (55/28)x‚Å∑y¬≤", color: "text-green-600" },
        { text: "Deuxi√®me produit", expr: "(5/7) √ó (-(17/9)) √ó x‚Å¥y‚Å¥ = -(85/63)x‚Å¥y‚Å¥", color: "text-orange-600" },
        { text: "Troisi√®me produit", expr: "(-(3/8)) √ó (11/4) √ó x¬≥y‚Åµ = -(33/32)x¬≥y‚Åµ", color: "text-red-600" },
        { text: "Quatri√®me produit", expr: "(-(3/8)) √ó (-(17/9)) √ó y‚Å∑ = (51/72)y‚Å∑", color: "text-blue-600" },
        { text: "üíÄ R√âSULTAT HARDCORE", expr: "(55/28)x‚Å∑y¬≤ - (85/63)x‚Å¥y‚Å¥ - (33/32)x¬≥y‚Åµ + (51/72)y‚Å∑", color: "text-purple-600" }
      ]
    },
    {
      id: 3,
      question: "((-7/12)a‚Åµb¬≥ + (11/15)c‚Å¥)((9/8)a¬≤b - (13/20)c¬≤)",
      steps: [
        { text: "Expression de d√©part", expr: "((-7/12)a‚Åµb¬≥ + (11/15)c‚Å¥)((9/8)a¬≤b - (13/20)c¬≤)", color: "text-blue-600" },
        { text: "üíÄ HARDCORE MOINS √ó MOINS !", expr: "4 produits avec fractions n√©gatives", color: "text-orange-600" },
        { text: "Premier produit", expr: "((-7/12)) √ó (9/8) √ó a‚Å∑b‚Å¥ = -(63/96)a‚Å∑b‚Å¥ = -(21/32)a‚Å∑b‚Å¥", color: "text-green-600" },
        { text: "Deuxi√®me produit", expr: "((-7/12)) √ó (-(13/20)) √ó a‚Åµb¬≥c¬≤ = (91/240)a‚Åµb¬≥c¬≤", color: "text-orange-600" },
        { text: "Troisi√®me produit", expr: "(11/15) √ó (9/8) √ó a¬≤bc‚Å¥ = (99/120)a¬≤bc‚Å¥ = (33/40)a¬≤bc‚Å¥", color: "text-red-600" },
        { text: "Quatri√®me produit", expr: "(11/15) √ó (-(13/20)) √ó c‚Å∂ = -(143/300)c‚Å∂", color: "text-blue-600" },
        { text: "üíÄ R√âSULTAT HARDCORE", expr: "-(21/32)a‚Å∑b‚Å¥ + (91/240)a‚Åµb¬≥c¬≤ + (33/40)a¬≤bc‚Å¥ - (143/300)c‚Å∂", color: "text-purple-600" }
      ]
    },
    {
      id: 4,
      question: "((23/19)x‚Å∂y - (47/31)z¬≥)((29/17)x¬≤y‚Å¥ + (53/37)xz)",
      steps: [
        { text: "Expression de d√©part", expr: "((23/19)x‚Å∂y - (47/31)z¬≥)((29/17)x¬≤y‚Å¥ + (53/37)xz)", color: "text-blue-600" },
        { text: "üíÄ FRACTIONS PREMI√àRES HARDCORE !", expr: "D√©nominateurs premiers - 4 produits", color: "text-orange-600" },
        { text: "Premier produit", expr: "(23/19) √ó (29/17) √ó x‚Å∏y‚Åµ = (667/323)x‚Å∏y‚Åµ", color: "text-green-600" },
        { text: "Deuxi√®me produit", expr: "(23/19) √ó (53/37) √ó x‚Å∑yz = (1219/703)x‚Å∑yz", color: "text-orange-600" },
        { text: "Troisi√®me produit", expr: "(-(47/31)) √ó (29/17) √ó x¬≤y‚Å¥z¬≥ = -(1363/527)x¬≤y‚Å¥z¬≥", color: "text-red-600" },
        { text: "Quatri√®me produit", expr: "(-(47/31)) √ó (53/37) √ó xz‚Å¥ = -(2491/1147)xz‚Å¥", color: "text-blue-600" },
        { text: "üíÄ R√âSULTAT HARDCORE", expr: "(667/323)x‚Å∏y‚Åµ + (1219/703)x‚Å∑yz - (1363/527)x¬≤y‚Å¥z¬≥ - (2491/1147)xz‚Å¥", color: "text-purple-600" }
      ]
    },
    {
      id: 5,
      question: "((-89/73)x‚Åπ + (127/103)y‚Å∑)((-157/139)x‚Å¥ + (179/167)y¬≤)",
      steps: [
        { text: "Expression de d√©part", expr: "((-89/73)x‚Åπ + (127/103)y‚Å∑)((-157/139)x‚Å¥ + (179/167)y¬≤)", color: "text-blue-600" },
        { text: "üíÄ PUISSANCES ET FRACTIONS G√âANTES !", expr: "x¬π¬≥ hardcore avec nombres premiers", color: "text-orange-600" },
        { text: "Premier produit", expr: "((-89/73)) √ó ((-157/139)) √ó x¬π¬≥ = (13973/10147)x¬π¬≥", color: "text-green-600" },
        { text: "Deuxi√®me produit", expr: "((-89/73)) √ó (179/167) √ó x‚Åπy¬≤ = -(15931/12199)x‚Åπy¬≤", color: "text-orange-600" },
        { text: "Troisi√®me produit", expr: "(127/103) √ó ((-157/139)) √ó x‚Å¥y‚Å∑ = -(19939/14317)x‚Å¥y‚Å∑", color: "text-red-600" },
        { text: "Quatri√®me produit", expr: "(127/103) √ó (179/167) √ó y‚Åπ = (22733/17201)y‚Åπ", color: "text-blue-600" },
        { text: "üíÄ R√âSULTAT HARDCORE", expr: "(13973/10147)x¬π¬≥ - (15931/12199)x‚Åπy¬≤ - (19939/14317)x‚Å¥y‚Å∑ + (22733/17201)y‚Åπ", color: "text-purple-600" }
      ]
    },

    // Hardcore Niveau 6-10 : DISTRIBUTIVIT√âS FRACTIONNAIRES COMPLEXES
    {
      id: 6,
      question: "((3/4)x‚Åµ - (5/6)x¬≤y + (7/8)y¬≥)((2/3)x¬≤ + (4/5)y)",
      steps: [
        { text: "Expression de d√©part", expr: "((3/4)x‚Åµ - (5/6)x¬≤y + (7/8)y¬≥)((2/3)x¬≤ + (4/5)y)", color: "text-blue-600" },
        { text: "üíÄ TRIN√îME √ó BIN√îME FRACTIONNAIRE !", expr: "6 produits fractionnaires √† calculer", color: "text-orange-600" },
        { text: "Produit 1", expr: "(3/4) √ó (2/3) √ó x‚Å∑ = (6/12)x‚Å∑ = (1/2)x‚Å∑", color: "text-green-600" },
        { text: "Produit 2", expr: "(3/4) √ó (4/5) √ó x‚Åµy = (12/20)x‚Åµy = (3/5)x‚Åµy", color: "text-orange-600" },
        { text: "Produit 3", expr: "(-(5/6)) √ó (2/3) √ó x‚Å¥y = -(10/18)x‚Å¥y = -(5/9)x‚Å¥y", color: "text-red-600" },
        { text: "Produit 4", expr: "(-(5/6)) √ó (4/5) √ó x¬≤y¬≤ = -(20/30)x¬≤y¬≤ = -(2/3)x¬≤y¬≤", color: "text-blue-600" },
        { text: "Produit 5", expr: "(7/8) √ó (2/3) √ó x¬≤y¬≥ = (14/24)x¬≤y¬≥ = (7/12)x¬≤y¬≥", color: "text-green-600" },
        { text: "Produit 6", expr: "(7/8) √ó (4/5) √ó y‚Å¥ = (28/40)y‚Å¥ = (7/10)y‚Å¥", color: "text-orange-600" },
        { text: "üíÄ R√âSULTAT HARDCORE", expr: "(1/2)x‚Å∑ + (3/5)x‚Åµy - (5/9)x‚Å¥y - (2/3)x¬≤y¬≤ + (7/12)x¬≤y¬≥ + (7/10)y‚Å¥", color: "text-purple-600" }
      ]
    },
    {
      id: 7,
      question: "((11/13)a‚Å∑b¬≤ - (17/19)ab‚Å∂ + (23/29)c‚Å¥)((31/37)a¬≥ - (41/43)b¬≤ + (47/53)c)",
      steps: [
        { text: "Expression de d√©part", expr: "((11/13)a‚Å∑b¬≤ - (17/19)ab‚Å∂ + (23/29)c‚Å¥)((31/37)a¬≥ - (41/43)b¬≤ + (47/53)c)", color: "text-blue-600" },
        { text: "üíÄ TRIN√îME √ó TRIN√îME HARDCORE !", expr: "9 produits fractionnaires avec nombres premiers", color: "text-orange-600" },
        { text: "Premier terme", expr: "(11/13) √ó (31/37) √ó a¬π‚Å∞b¬≤ = (341/481)a¬π‚Å∞b¬≤", color: "text-green-600" },
        { text: "Deuxi√®me terme", expr: "(11/13) √ó (-(41/43)) √ó a‚Å∑b‚Å¥ = -(451/559)a‚Å∑b‚Å¥", color: "text-orange-600" },
        { text: "Troisi√®me terme", expr: "(11/13) √ó (47/53) √ó a‚Å∑b¬≤c = (517/689)a‚Å∑b¬≤c", color: "text-red-600" },
        { text: "Et 6 autres termes...", expr: "Expression g√©ante avec fractions premiers", color: "text-blue-600" },
        { text: "üíÄ R√âSULTAT HARDCORE", expr: "9 termes fractionnaires complexes avec a, b, c", color: "text-purple-600" }
      ]
    },
    {
      id: 8,
      question: "((-97/101)x¬π‚Å∞ + (109/113)x‚Å∂y‚Å¥ - (127/131)y‚Å∏)((139/137)x¬≥ - (149/151)y¬≤)",
      steps: [
        { text: "Expression de d√©part", expr: "((-97/101)x¬π‚Å∞ + (109/113)x‚Å∂y‚Å¥ - (127/131)y‚Å∏)((139/137)x¬≥ - (149/151)y¬≤)", color: "text-blue-600" },
        { text: "üíÄ PUISSANCES 13 HARDCORE !", expr: "x¬π¬≥ avec fractions g√©antes premiers", color: "text-orange-600" },
        { text: "Premier produit", expr: "((-97/101)) √ó (139/137) √ó x¬π¬≥ = -(13483/13837)x¬π¬≥", color: "text-green-600" },
        { text: "Deuxi√®me produit", expr: "((-97/101)) √ó (-(149/151)) √ó x¬π‚Å∞y¬≤ = (14453/15251)x¬π‚Å∞y¬≤", color: "text-orange-600" },
        { text: "Troisi√®me produit", expr: "(109/113) √ó (139/137) √ó x‚Åπy‚Å¥ = (15151/15481)x‚Åπy‚Å¥", color: "text-red-600" },
        { text: "Quatri√®me produit", expr: "(109/113) √ó (-(149/151)) √ó x‚Å∂y‚Å∂ = -(16241/17063)x‚Å∂y‚Å∂", color: "text-blue-600" },
        { text: "Cinqui√®me produit", expr: "(-(127/131)) √ó (139/137) √ó x¬≥y‚Å∏ = -(17653/17947)x¬≥y‚Å∏", color: "text-green-600" },
        { text: "Sixi√®me produit", expr: "(-(127/131)) √ó (-(149/151)) √ó y¬π‚Å∞ = (18923/19781)y¬π‚Å∞", color: "text-orange-600" },
        { text: "üíÄ R√âSULTAT HARDCORE", expr: "-(13483/13837)x¬π¬≥ + (14453/15251)x¬π‚Å∞y¬≤ + (15151/15481)x‚Åπy‚Å¥ - (16241/17063)x‚Å∂y‚Å∂ - (17653/17947)x¬≥y‚Å∏ + (18923/19781)y¬π‚Å∞", color: "text-purple-600" }
      ]
    },
    {
      id: 9,
      question: "((2/5)x‚Å¥ + (3/7)xy¬≤ - (4/9)y‚Å¥)¬≤",
      steps: [
        { text: "Expression de d√©part", expr: "((2/5)x‚Å¥ + (3/7)xy¬≤ - (4/9)y‚Å¥)¬≤", color: "text-blue-600" },
        { text: "üíÄ CARR√â D'UN TRIN√îME FRACTIONNAIRE !", expr: "9 produits au carr√© : a¬≤ + 2ab + 2ac + b¬≤ + 2bc + c¬≤", color: "text-orange-600" },
        { text: "Carr√© du premier", expr: "((2/5)x‚Å¥)¬≤ = (4/25)x‚Å∏", color: "text-green-600" },
        { text: "Double produit 1-2", expr: "2 √ó (2/5)x‚Å¥ √ó (3/7)xy¬≤ = (12/35)x‚Åµy¬≤", color: "text-orange-600" },
        { text: "Double produit 1-3", expr: "2 √ó (2/5)x‚Å¥ √ó (-(4/9)y‚Å¥) = -(16/45)x‚Å¥y‚Å¥", color: "text-red-600" },
        { text: "Carr√© du deuxi√®me", expr: "((3/7)xy¬≤)¬≤ = (9/49)x¬≤y‚Å¥", color: "text-blue-600" },
        { text: "Double produit 2-3", expr: "2 √ó (3/7)xy¬≤ √ó (-(4/9)y‚Å¥) = -(24/63)xy‚Å∂", color: "text-green-600" },
        { text: "Carr√© du troisi√®me", expr: "(-(4/9)y‚Å¥)¬≤ = (16/81)y‚Å∏", color: "text-orange-600" },
        { text: "üíÄ R√âSULTAT HARDCORE", expr: "(4/25)x‚Å∏ + (12/35)x‚Åµy¬≤ - (16/45)x‚Å¥y‚Å¥ + (9/49)x¬≤y‚Å¥ - (24/63)xy‚Å∂ + (16/81)y‚Å∏", color: "text-purple-600" }
      ]
    },
    {
      id: 10,
      question: "((13/17)a‚Å∂ - (19/23)b‚Å¥c¬≤ + (29/31)c‚Å∂)((37/41)a¬≤ + (43/47)b¬≤c - (53/59)c¬≥)",
      steps: [
        { text: "Expression de d√©part", expr: "((13/17)a‚Å∂ - (19/23)b‚Å¥c¬≤ + (29/31)c‚Å∂)((37/41)a¬≤ + (43/47)b¬≤c - (53/59)c¬≥)", color: "text-blue-600" },
        { text: "üíÄ TROIS VARIABLES FRACTIONNAIRES HARDCORE !", expr: "9 produits avec a, b, c et nombres premiers", color: "text-orange-600" },
        { text: "Premier produit", expr: "(13/17) √ó (37/41) √ó a‚Å∏ = (481/697)a‚Å∏", color: "text-green-600" },
        { text: "Deuxi√®me produit", expr: "(13/17) √ó (43/47) √ó a‚Å∂b¬≤c = (559/799)a‚Å∂b¬≤c", color: "text-orange-600" },
        { text: "Troisi√®me produit", expr: "(13/17) √ó (-(53/59)) √ó a‚Å∂c¬≥ = -(689/1003)a‚Å∂c¬≥", color: "text-red-600" },
        { text: "Et 6 autres produits...", expr: "Chaque terme √ó chaque terme", color: "text-blue-600" },
        { text: "üíÄ R√âSULTAT HARDCORE", expr: "Expression g√©ante avec 9 termes fractionnaires √† trois variables", color: "text-purple-600" }
      ]
    },

    // Hardcore Niveau 11-15 : SOMMES DE FRACTIONS + DISTRIBUTIVIT√âS
    {
      id: 11,
      question: "((7/8)x¬≤ + (5/12))((-3/4)x - (2/9)) + ((11/15)x + (7/10))((-5/6)x¬≤ + (8/21))",
      steps: [
        { text: "Expression de d√©part", expr: "((7/8)x¬≤ + (5/12))((-3/4)x - (2/9)) + ((11/15)x + (7/10))((-5/6)x¬≤ + (8/21))", color: "text-blue-600" },
        { text: "üíÄ SOMME DE DOUBLE DISTRIBUTIVIT√â FRACTIONNAIRE !", expr: "D√©velopper chaque produit s√©par√©ment", color: "text-orange-600" },
        { text: "Premier produit : terme 1", expr: "(7/8) √ó (-3/4) √ó x¬≥ = -(21/32)x¬≥", color: "text-green-600" },
        { text: "Premier produit : terme 2", expr: "(7/8) √ó (-2/9) √ó x¬≤ = -(14/72)x¬≤ = -(7/36)x¬≤", color: "text-orange-600" },
        { text: "Premier produit : terme 3", expr: "(5/12) √ó (-3/4) √ó x = -(15/48)x = -(5/16)x", color: "text-red-600" },
        { text: "Premier produit : terme 4", expr: "(5/12) √ó (-2/9) = -(10/108) = -(5/54)", color: "text-blue-600" },
        { text: "Second produit : terme 1", expr: "(11/15) √ó (-5/6) √ó x¬≥ = -(55/90)x¬≥ = -(11/18)x¬≥", color: "text-green-600" },
        { text: "Second produit : terme 2", expr: "(11/15) √ó (8/21) √ó x = (88/315)x", color: "text-orange-600" },
        { text: "Second produit : terme 3", expr: "(7/10) √ó (-5/6) √ó x¬≤ = -(35/60)x¬≤ = -(7/12)x¬≤", color: "text-red-600" },
        { text: "Second produit : terme 4", expr: "(7/10) √ó (8/21) = (56/210) = (4/15)", color: "text-blue-600" },
        { text: "üíÄ R√âSULTAT HARDCORE", expr: "(-(21/32) - (11/18))x¬≥ + (-(7/36) - (7/12))x¬≤ + (-(5/16) + (88/315))x + (-(5/54) + (4/15))", color: "text-purple-600" }
      ]
    },
    {
      id: 12,
      question: "((13/19)x‚Å¥ - (17/23)y¬≤)((-29/31)x + (37/41)y) + ((43/47)x¬≤ + (53/59)y¬≥)((-61/67)x¬≥ - (71/73))",
      steps: [
        { text: "Expression de d√©part", expr: "((13/19)x‚Å¥ - (17/23)y¬≤)((-29/31)x + (37/41)y) + ((43/47)x¬≤ + (53/59)y¬≥)((-61/67)x¬≥ - (71/73))", color: "text-blue-600" },
        { text: "üíÄ SOMME HARDCORE FRACTIONS PREMI√àRES !", expr: "Deux produits avec nombres premiers", color: "text-orange-600" },
        { text: "Premier produit d√©velopp√©", expr: "-(377/589)x‚Åµ + (481/779)x‚Å¥y + (493/713)xy¬≤ - (629/943)y¬≥", color: "text-green-600" },
        { text: "Second produit d√©velopp√©", expr: "-(2623/3149)x‚Åµ - (3053/3431)x¬≤ + (3233/3953)x¬≥y¬≥ - (3763/4307)y¬≥", color: "text-orange-600" },
        { text: "üíÄ R√âSULTAT HARDCORE", expr: "Somme des deux d√©veloppements avec fractions g√©antes", color: "text-purple-600" }
      ]
    },
    {
      id: 13,
      question: "((2/3)x‚Å∂ - (5/7)x¬≥y + (8/11)y‚Å¥)((4/9)x¬≤ + (6/13)xy - (7/15)y¬≤) + ((-3/8)x‚Å¥ + (9/16)y¬≥)((-11/17)x - (12/19)y)",
      steps: [
        { text: "Expression de d√©part", expr: "((2/3)x‚Å∂ - (5/7)x¬≥y + (8/11)y‚Å¥)((4/9)x¬≤ + (6/13)xy - (7/15)y¬≤) + ((-3/8)x‚Å¥ + (9/16)y¬≥)((-11/17)x - (12/19)y)", color: "text-blue-600" },
        { text: "üíÄ TRIN√îME √ó TRIN√îME + BIN√îME √ó BIN√îME !", expr: "9 + 4 = 13 produits fractionnaires", color: "text-orange-600" },
        { text: "Premier groupe : 9 termes", expr: "De (8/27)x‚Å∏ jusqu'√† -(56/165)y‚Å∂", color: "text-green-600" },
        { text: "Second groupe : 4 termes", expr: "De (33/136)x‚Åµ jusqu'√† -(108/304)y‚Å¥", color: "text-orange-600" },
        { text: "üíÄ R√âSULTAT HARDCORE", expr: "Expression avec 13 termes fractionnaires simplifi√©s", color: "text-purple-600" }
      ]
    },
    {
      id: 14,
      question: "((79/83)a‚Åµ - (89/97)b¬≥c¬≤)((-101/103)a¬≤ + (107/109)bc) + ((113/127)ab + (131/137)c‚Å¥)((-139/149)a¬≥b - (151/157)c)",
      steps: [
        { text: "Expression de d√©part", expr: "((79/83)a‚Åµ - (89/97)b¬≥c¬≤)((-101/103)a¬≤ + (107/109)bc) + ((113/127)ab + (131/137)c‚Å¥)((-139/149)a¬≥b - (151/157)c)", color: "text-blue-600" },
        { text: "üíÄ TROIS VARIABLES HARDCORE SOMME !", expr: "Fractions avec a, b, c et nombres premiers", color: "text-orange-600" },
        { text: "Premier produit : 4 termes", expr: "Avec puissances a‚Å∑, a‚Åµbc, b‚Å¥c¬≤, b‚Å¥c¬≥", color: "text-green-600" },
        { text: "Second produit : 4 termes", expr: "Avec puissances a‚Å¥b¬≤, abc‚Åµ, a¬≥bc‚Å¥, c‚Åµ", color: "text-orange-600" },
        { text: "üíÄ R√âSULTAT HARDCORE", expr: "8 termes fractionnaires complexes avec a, b, c", color: "text-purple-600" }
      ]
    },
    {
      id: 15,
      question: "((163/167)x‚Å∏ + (173/179)x‚Å¥y¬≤ - (181/191)y‚Å∂)((193/197)x¬≥ - (199/211)y) + ((-223/227)x‚Åµ + (229/233)xy‚Å¥)((-239/241)x¬≤ + (251/257)y¬≥)",
      steps: [
        { text: "Expression de d√©part", expr: "((163/167)x‚Å∏ + (173/179)x‚Å¥y¬≤ - (181/191)y‚Å∂)((193/197)x¬≥ - (199/211)y) + ((-223/227)x‚Åµ + (229/233)xy‚Å¥)((-239/241)x¬≤ + (251/257)y¬≥)", color: "text-blue-600" },
        { text: "üíÄ PUISSANCES 11 + FRACTIONS G√âANTES !", expr: "x¬π¬π hardcore avec nombres premiers g√©ants", color: "text-orange-600" },
        { text: "Premier produit : 6 termes", expr: "De x¬π¬π jusqu'√† y‚Å∑ avec fractions √©normes", color: "text-green-600" },
        { text: "Second produit : 4 termes", expr: "De x‚Å∑ jusqu'√† y‚Å∑ avec fractions colossales", color: "text-orange-600" },
        { text: "üíÄ R√âSULTAT HARDCORE", expr: "Expression apocalyptique avec 10 termes fractionnaires g√©ants", color: "text-purple-600" }
      ]
    },

    // Hardcore Niveau 16-20 : APOCALYPSE FRACTIONNAIRE !
    {
      id: 16,
      question: "((17/19)x‚Åµ - (23/29)x¬≤y + (31/37)y¬≥)((41/43)x¬≥ + (47/53)xy - (59/61)y¬≤) √ó ((67/71)x - (73/79)y)",
      steps: [
        { text: "Expression de d√©part", expr: "((17/19)x‚Åµ - (23/29)x¬≤y + (31/37)y¬≥)((41/43)x¬≥ + (47/53)xy - (59/61)y¬≤) √ó ((67/71)x - (73/79)y)", color: "text-blue-600" },
        { text: "üíÄ TRIPLE PRODUIT FRACTIONNAIRE !", expr: "D'abord d√©velopper (trin√¥me √ó trin√¥me), puis multiplier par bin√¥me", color: "text-orange-600" },
        { text: "√âtape 1 : Trin√¥me √ó Trin√¥me", expr: "9 termes interm√©diaires avec fractions", color: "text-green-600" },
        { text: "√âtape 2 : R√©sultat √ó Bin√¥me", expr: "9 √ó 2 = 18 produits finaux", color: "text-red-600" },
        { text: "üíÄ APOCALYPSE HARDCORE", expr: "18 termes fractionnaires avec puissances jusqu'√† x‚Åπ", color: "text-purple-600" }
      ]
    },
    {
      id: 17,
      question: "((2/3)a‚Å¥ - (5/7)b¬≤ + (8/11)c)¬≥",
      steps: [
        { text: "Expression de d√©part", expr: "((2/3)a‚Å¥ - (5/7)b¬≤ + (8/11)c)¬≥", color: "text-blue-600" },
        { text: "üíÄ CUBE D'UN TRIN√îME FRACTIONNAIRE !", expr: "Formule : (A + B + C)¬≥ = A¬≥ + B¬≥ + C¬≥ + 3A¬≤B + 3A¬≤C + 3B¬≤A + 3B¬≤C + 3C¬≤A + 3C¬≤B + 6ABC", color: "text-orange-600" },
        { text: "Cubes simples", expr: "((2/3)a‚Å¥)¬≥ + ((-5/7)b¬≤)¬≥ + ((8/11)c)¬≥", color: "text-green-600" },
        { text: "Doubles produits", expr: "6 termes avec coefficients 3", color: "text-red-600" },
        { text: "Triple produit", expr: "6 √ó (2/3) √ó (-5/7) √ó (8/11) √ó a‚Å¥b¬≤c", color: "text-blue-600" },
        { text: "üíÄ APOCALYPSE HARDCORE", expr: "10 termes fractionnaires avec puissances jusqu'√† a¬π¬≤", color: "text-purple-600" }
      ]
    },
    {
      id: 18,
      question: "((13/17)x‚Å∑ - (19/23)x‚Å¥y¬≤ + (29/31)xy‚Åµ - (37/41)y‚Å∑)((43/47)x‚Å¥ + (53/59)x¬≤y - (61/67)y¬≥ + (71/73))",
      steps: [
        { text: "Expression de d√©part", expr: "((13/17)x‚Å∑ - (19/23)x‚Å¥y¬≤ + (29/31)xy‚Åµ - (37/41)y‚Å∑)((43/47)x‚Å¥ + (53/59)x¬≤y - (61/67)y¬≥ + (71/73))", color: "text-blue-600" },
        { text: "üíÄ QUADRIN√îME √ó QUADRIN√îME !", expr: "4 √ó 4 = 16 produits fractionnaires avec nombres premiers", color: "text-orange-600" },
        { text: "Premier terme", expr: "(13/17) √ó (43/47) √ó x¬π¬π = (559/799)x¬π¬π", color: "text-green-600" },
        { text: "Terme avec puissance max y", expr: "(-37/41) √ó (71/73) √ó y‚Å∑ = -(2627/2993)y‚Å∑", color: "text-orange-600" },
        { text: "Termes interm√©diaires", expr: "14 autres termes avec fractions g√©antes", color: "text-red-600" },
        { text: "üíÄ APOCALYPSE HARDCORE", expr: "16 termes avec puissances jusqu'√† x¬π¬π et fractions premiers", color: "text-purple-600" }
      ]
    },
    {
      id: 19,
      question: "((83/89)a‚Å∂b - (97/101)ab‚Åµ + (103/107)c¬≥)((109/113)a¬≥b¬≤ - (127/131)b¬≤c + (137/139)ac¬≤) + ((149/151)ab + (157/163)bc + (167/173)ca)¬≤",
      steps: [
        { text: "Expression de d√©part", expr: "((83/89)a‚Å∂b - (97/101)ab‚Åµ + (103/107)c¬≥)((109/113)a¬≥b¬≤ - (127/131)b¬≤c + (137/139)ac¬≤) + ((149/151)ab + (157/163)bc + (167/173)ca)¬≤", color: "text-blue-600" },
        { text: "üíÄ TRIN√îME √ó TRIN√îME + CARR√â !", expr: "Premier produit : 9 termes + Second carr√© : 9 termes", color: "text-orange-600" },
        { text: "Premier d√©veloppement", expr: "9 termes avec a‚Åπb¬≥, a‚Å∑b¬≥c, a‚Å∂bc¬≤, etc.", color: "text-green-600" },
        { text: "Carr√© du trin√¥me", expr: "3 carr√©s + 6 doubles produits = 9 termes", color: "text-orange-600" },
        { text: "Additioner les r√©sultats", expr: "Regrouper les termes similaires", color: "text-red-600" },
        { text: "üíÄ APOCALYPSE FINALE", expr: "Expression g√©ante avec 18 termes fractionnaires √† trois variables", color: "text-purple-600" }
      ]
    },
    {
      id: 20,
      question: "((179/181)x‚Åπ - (191/193)x‚Å∂y¬≤ + (197/199)x¬≥y‚Åµ - (211/223)y‚Å∏)((227/229)x‚Åµ + (233/239)x¬≤y¬≥ - (241/251)y‚Å∂) + ((257/263)x‚Å¥ - (269/271)xy + (277/281)y¬≤)¬≥",
      steps: [
        { text: "Expression de d√©part", expr: "((179/181)x‚Åπ - (191/193)x‚Å∂y¬≤ + (197/199)x¬≥y‚Åµ - (211/223)y‚Å∏)((227/229)x‚Åµ + (233/239)x¬≤y¬≥ - (241/251)y‚Å∂) + ((257/263)x‚Å¥ - (269/271)xy + (277/281)y¬≤)¬≥", color: "text-blue-600" },
        { text: "üíÄ QUADRIN√îME √ó TRIN√îME + CUBE !", expr: "Premier produit : 4√ó3=12 termes + Cube : 10 termes", color: "text-orange-600" },
        { text: "Premier produit : terme max", expr: "(179/181) √ó (227/229) √ó x¬π‚Å¥ = fractions colossales", color: "text-green-600" },
        { text: "Cube : terme max", expr: "((257/263)x‚Å¥)¬≥ = puissance 12", color: "text-orange-600" },
        { text: "D√©veloppement complet", expr: "12 + 10 = 22 termes avec fractions √©normes", color: "text-red-600" },
        { text: "üíÄ CHAMPION HARDCORE ULTIME", expr: "22 termes fractionnaires g√©ants avec puissances jusqu'√† x¬π‚Å¥ !", color: "text-purple-600" }
      ]
    }
  ]

  // S√©lectionner les exercices selon le mode
  const exercises = exerciseLevel === 'normal' ? normalExercises : exerciseLevel === 'beast' ? beastExercises : hardcoreExercises
  const currentEx = exercises[currentExercise]
  const currentAnim = distributivityAnimations[selectedAnimation]

  // Pas d'animation automatique - contr√¥le manuel

  const nextStep = () => {
    if (animationStep < currentAnim.steps.length - 1) {
      setAnimationStep(animationStep + 1)
    }
  }

  const prevStep = () => {
    if (animationStep > 0) {
      setAnimationStep(animationStep - 1)
    }
  }

  const resetAnimation = () => {
    setAnimationStep(0)
    setAnimationPlaying(false)
  }

  // Fonctions pour g√©rer les exercices
  const resetExercise = () => {
    setShowSolution(false)
    setSolutionStep(0)
    setUserAnswer('')
    setShowAnswer(false)
    setAnswerFeedback(null)
  }

  const resetCounters = () => {
    setCorrectAnswersNormal(0)
    setCorrectAnswersBeast(0)
    setCorrectAnswersHardcore(0)
  }

  const checkAnswer = () => {
    // La r√©ponse correcte est dans le dernier step
    const correctAnswer = currentEx.steps[currentEx.steps.length - 1].expr
    
    const userAnswerTrimmed = userAnswer.trim().toLowerCase().replace(/\s+/g, '')
    const correctAnswerTrimmed = correctAnswer.trim().toLowerCase().replace(/\s+/g, '')
    
    // Variantes accept√©es (avec ou sans espaces, parenth√®ses optionnelles)
    const normalizeAnswer = (answer: string) => {
      return answer
        .replace(/\s+/g, '') // Supprimer tous les espaces
        .replace(/\+\-/g, '-') // +- devient -
        .replace(/\-\+/g, '-') // -+ devient -
        .replace(/\*\*/g, '^') // ** devient ^
        .replace(/√ó/g, '*') // √ó devient *
    }
    
    const normalizedUser = normalizeAnswer(userAnswerTrimmed)
    const normalizedCorrect = normalizeAnswer(correctAnswerTrimmed)
    
    if (normalizedUser === normalizedCorrect) {
      setAnswerFeedback('correct')
      
      // Incr√©menter le compteur appropri√©
      if (exerciseLevel === 'normal') {
        setCorrectAnswersNormal(prev => prev + 1)
      } else if (exerciseLevel === 'beast') {
        setCorrectAnswersBeast(prev => prev + 1)
    } else {
        setCorrectAnswersHardcore(prev => prev + 1)
      }
      
      // Afficher une indication visuelle temporaire
      setShowIncrement(true)
      setTimeout(() => setShowIncrement(false), 2000)
    } else {
      setAnswerFeedback('incorrect')
    }
      setShowAnswer(true)
  }

  const nextSolutionStep = () => {
    setSolutionStep(prev => prev + 1)
  }

  const prevSolutionStep = () => {
    setSolutionStep(prev => Math.max(prev - 1, 0))
  }

  const resetSolutionStep = () => {
    setSolutionStep(0)
  }

  const nextExercise = () => {
    if (currentExercise < exercises.length - 1) {
      setCurrentExercise(currentExercise + 1)
      setUserAnswer('')
      setShowAnswer(false)
      setAnswerFeedback(null)
    }
  }

  const prevExercise = () => {
    if (currentExercise > 0) {
      setCurrentExercise(currentExercise - 1)
      setUserAnswer('')
      setShowAnswer(false)
      setAnswerFeedback(null)
    }
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-50">
      <div className="container mx-auto px-4 py-8">
        {/* Header simplifi√© */}
        <div className="mb-8">
          <div className="flex items-center gap-4 mb-6">
            <Link 
              href="/chapitre/4eme-calcul-litteral" 
              className="flex items-center gap-2 text-blue-600 hover:text-blue-800 transition-colors"
            >
              <ArrowLeft size={20} />
              <span>Retour au calcul litt√©ral</span>
            </Link>
          </div>
          
          <div className="bg-white rounded-2xl p-8 shadow-lg border border-blue-100">
            <div className="flex items-center gap-6 mb-6">
              <div className="w-16 h-16 bg-gradient-to-br from-blue-500 to-indigo-500 rounded-2xl flex items-center justify-center text-white text-2xl">
                üìê
              </div>
              <div className="flex-1">
                <h1 className="text-3xl font-bold text-gray-800 mb-2">D√©veloppement</h1>
                <p className="text-gray-600 text-lg">
                  Utiliser la distributivit√© pour d√©velopper
                </p>
              </div>
              <div className="text-right">
                <div className="text-sm text-gray-600">Dur√©e estim√©e</div>
                <div className="text-xl font-semibold text-blue-600">25 minutes</div>
              </div>
            </div>

            {/* Tabs */}
            <div className="flex gap-4 mb-6">
              <button
                onClick={() => setActiveTab('cours')}
                className={`px-4 py-2 rounded-lg font-semibold transition-colors ${
                  activeTab === 'cours'
                    ? 'bg-blue-500 text-white'
                    : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
                }`}
              >
                <BookOpen className="inline w-4 h-4 mr-2" />
                Cours
              </button>
              <button
                onClick={() => setActiveTab('exercices')}
                className={`px-4 py-2 rounded-lg font-semibold transition-colors ${
                  activeTab === 'exercices'
                    ? 'bg-blue-500 text-white'
                    : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
                }`}
              >
                <Target className="inline w-4 h-4 mr-2" />
                Exercices
              </button>
            </div>
          </div>
        </div>

        {/* Cours */}
        {activeTab === 'cours' && (
          <div className="space-y-8">
            {/* Formules fixes en premier */}
            <div className="bg-gradient-to-br from-blue-50 to-indigo-50 rounded-2xl p-8 border border-blue-200 shadow-lg">
              <h2 className="text-2xl font-bold text-blue-800 mb-6">üìö R√®gles de Distributivit√©</h2>
              
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                {/* Distributivit√© simple */}
                <div className="bg-white rounded-xl p-6 shadow-md border border-blue-100">
                  <h3 className="text-lg font-bold text-blue-700 mb-4">üéØ Distributivit√© Simple</h3>
                  <div className="space-y-4">
                  <div className="bg-blue-50 p-4 rounded-lg border border-blue-200">
                      <div className="text-xl font-mono text-blue-800 text-center">
                        a(b + c) = ab + ac
                    </div>
                  </div>
                    <div className="text-gray-700">
                      Le facteur <span className="font-bold text-blue-600">a</span> se distribue sur chaque terme de la parenth√®se.
                </div>
                    <div className="bg-gray-50 p-3 rounded border-l-4 border-blue-400">
                      <p className="text-sm text-gray-600 font-mono">Exemple : 3(x + 2) = 3x + 6</p>
                    </div>
                  </div>
                </div>

                {/* Double distributivit√© */}
                <div className="bg-white rounded-xl p-6 shadow-md border border-indigo-100">
                  <h3 className="text-lg font-bold text-indigo-700 mb-4">üöÄ Double Distributivit√©</h3>
                  <div className="space-y-4">
                  <div className="bg-indigo-50 p-4 rounded-lg border border-indigo-200">
                      <div className="text-lg font-mono text-indigo-800 text-center">
                      (a + b)(c + d) = ac + ad + bc + bd
                  </div>
                </div>
                    <div className="text-gray-700">
                      Chaque terme de la premi√®re parenth√®se multiplie chaque terme de la seconde.
                    </div>
                    <div className="bg-gray-50 p-3 rounded border-l-4 border-indigo-400">
                      <p className="text-sm text-gray-600 font-mono">Exemple : (x + 1)(x + 2) = x¬≤ + 3x + 2</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* S√©lecteur d'animation */}
            <div className="bg-white rounded-2xl p-6 shadow-lg border border-gray-200">
              <h2 className="text-xl font-bold text-gray-800 mb-6">üé¨ Animations Explicatives</h2>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                {distributivityAnimations.map((anim, index) => (
                  <button
                    key={anim.id}
                    onClick={() => {
                      setSelectedAnimation(index)
                      resetAnimation()
                    }}
                    className={`p-4 rounded-lg border-2 transition-all duration-500 ${
                      selectedAnimation === index
                        ? 'border-blue-500 bg-blue-50 shadow-md'
                        : 'border-gray-200 bg-white hover:border-blue-300'
                    }`}
                  >
                    <div className="text-lg font-bold mb-2 text-gray-800">{anim.title}</div>
                    <div className="font-mono text-blue-700 text-lg">{anim.expression}</div>
                  </button>
                ))}
              </div>
            </div>

            {/* Zone d'animation principale */}
            <div className="bg-white rounded-2xl p-8 shadow-lg border border-gray-200">
              <div className="flex items-center justify-between mb-6">
                <h2 className="text-2xl font-bold text-gray-800">{currentAnim.title}</h2>
                <div className="flex gap-3">
                  <button
                    onClick={prevStep}
                    disabled={animationStep === 0}
                    className="flex items-center gap-2 px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:opacity-50 transition-colors"
                  >
                    <ArrowLeft size={16} />
                    Pr√©c√©dent
                  </button>
                  <button
                    onClick={nextStep}
                    disabled={animationStep >= currentAnim.steps.length - 1}
                    className="flex items-center gap-2 px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 disabled:opacity-50 transition-colors"
                  >
                    Suivant
                    <ArrowLeft size={16} className="rotate-180" />
                  </button>
                  <button
                    onClick={resetAnimation}
                    className="flex items-center gap-2 px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors"
                  >
                    <RotateCcw size={16} />
                    Reset
                  </button>
                </div>
              </div>

              {/* Affichage de l'animation avec vrais mouvements */}
              <div className="bg-gray-50 rounded-xl p-8 border border-gray-200 min-h-[400px] flex flex-col relative overflow-hidden">
                <div className="text-center space-y-6">
                  
                  {/* Animation pour distributivit√© simple */}
                  {selectedAnimation === 0 && (
                    <div className="space-y-8">
                      {/* Expression de d√©part - TOUJOURS VISIBLE */}
                      <div className="text-center">
                        <div className="text-4xl font-mono font-bold text-gray-800 mb-6">
                          <span className={`${animationStep === 1 ? 'text-red-600 bg-yellow-200 px-2 rounded animate-pulse' : 'text-red-600 font-extrabold'}`}>3</span>
                          <span className="text-gray-800">(x + 2)</span>
                        </div>
                      </div>
                      
                      {/* √âtapes qui apparaissent progressivement et restent affich√©es */}
                      <div className="space-y-4">
                        {/* √âtape 1: Distribution - Reste visible */}
                        <div 
                          className="text-3xl font-mono font-bold transition-all duration-1000 ease-in-out text-center"
                          style={{ 
                            opacity: animationStep >= 2 ? 1 : 0,
                            transform: animationStep >= 2 ? 'translateY(0)' : 'translateY(20px)'
                          }}
                        >
                          <span className="text-red-600 font-extrabold">3</span>
                          <span className="text-blue-600"> √ó x + </span>
                          <span className="text-red-600 font-extrabold">3</span>
                          <span className="text-blue-600"> √ó 2</span>
                        </div>
                        
                        {/* √âtape 2: R√©sultat final - Reste visible */}
                        <div 
                          className="text-3xl font-mono font-bold transition-all duration-1000 ease-in-out text-center"
                          style={{ 
                            opacity: animationStep >= 3 ? 1 : 0,
                            transform: animationStep >= 3 ? 'translateY(0)' : 'translateY(20px)'
                          }}
                        >
                          <span className="text-green-600 font-extrabold">3x + 6</span>
                        </div>
                      </div>
                    </div>
                  )}

                  {/* Animation pour distributivit√© avec signe n√©gatif */}
                  {selectedAnimation === 1 && (
                    <div className="space-y-8">
                      {/* Expression de d√©part - TOUJOURS VISIBLE */}
                      <div className="relative">
                        <div className="text-4xl font-mono font-bold text-gray-800 relative">
                          {animationStep >= 1 ? (
                            <div className="flex items-center justify-center">
                              <span className={`${animationStep === 1 ? 'text-red-600 bg-red-100 px-2 rounded animate-pulse' : 'text-red-600 font-extrabold'}`}>-2</span>
                              <span className="text-gray-800">(x + 3)</span>
                            </div>
                          ) : (
                            <span>-2(x + 3)</span>
                          )}
                        </div>
                      </div>
                      
                      {/* √âtapes qui apparaissent progressivement */}
                      <div className="space-y-4 mt-8">
                        {/* √âtape 1: Distribution */}
                        {animationStep >= 2 && (
                          <div 
                            className="text-3xl font-mono font-bold transition-all duration-1000 ease-in-out"
                            style={{ 
                              opacity: animationStep >= 2 ? 1 : 0,
                              transform: animationStep >= 2 ? 'translateY(0)' : 'translateY(20px)'
                            }}
                          >
                            <span className="text-blue-600">(</span>
                            <span className="text-red-600 font-extrabold">-2</span>
                            <span className="text-blue-600">) √ó x + (</span>
                            <span className="text-red-600 font-extrabold">-2</span>
                            <span className="text-blue-600">) √ó 3</span>
                          </div>
                        )}
                        
                        {/* √âtape 2: R√©sultat final */}
                        {animationStep >= 3 && (
                          <div 
                            className="text-3xl font-mono font-bold transition-all duration-1000 ease-in-out"
                            style={{ 
                              opacity: animationStep >= 3 ? 1 : 0,
                              transform: animationStep >= 3 ? 'translateY(0)' : 'translateY(20px)'
                            }}
                          >
                            <span className="text-red-600 font-extrabold">-2</span>
                            <span className="text-green-600">x </span>
                            <span className="text-red-600 font-extrabold">- 6</span>
                          </div>
                        )}
                      </div>
                    </div>
                  )}

                  {/* Animation pour double distributivit√© */}
                  {selectedAnimation === 2 && (
                    <div className="space-y-6">
                      {/* Expression de d√©part - TOUJOURS VISIBLE */}
                      <div className="text-center p-4 bg-gray-50 rounded-lg">
                        <div className="text-3xl sm:text-4xl font-mono font-bold text-gray-800 mb-4">
                          <span className="text-blue-600 font-extrabold">(a + 1)</span>
                          <span className="text-red-600 font-extrabold">(a + 2)</span>
                        </div>
                        
                        {/* Fl√®ches visuelles progressives */}
                        {animationStep >= 1 && (
                          <div className="relative mt-4 mb-8">
                            <svg className="w-full h-24" viewBox="0 0 500 100">
                              {/* Positions des termes : (a + 1) √ó (a + 2) */}
                              {/* a de (a+1) = 50, 1 de (a+1) = 90, a de (a+2) = 280, 2 de (a+2) = 320 */}
                              
                              {/* Fl√®ches du niveau HAUT (a √ó a et a √ó 2) */}
                              {/* Fl√®che 1: a √ó a - niveau haut */}
                              {animationStep >= 1 && (
                                <g>
                                  <path
                                    d="M 50 20 Q 165 5 280 20"
                                    stroke="#8b5cf6"
                                    strokeWidth="3"
                                    fill="none"
                                    markerEnd="url(#arrowhead-purple)"
                                    className="animate-pulse"
                                  />
                                  <text x="165" y="15" textAnchor="middle" className="text-xs fill-purple-600 font-bold">a √ó a = a¬≤</text>
                                </g>
                              )}
                              
                              {/* Fl√®che 2: a √ó 2 - niveau haut */}
                              {animationStep >= 2 && (
                                <g>
                                  <path
                                    d="M 50 20 Q 185 10 320 20"
                                    stroke="#059669"
                                    strokeWidth="3"
                                    fill="none"
                                    markerEnd="url(#arrowhead-green)"
                                    className="animate-pulse"
                                  />
                                  <text x="185" y="25" textAnchor="middle" className="text-xs fill-green-600 font-bold">a √ó 2 = 2a</text>
                                </g>
                              )}
                              
                              {/* Fl√®ches du niveau BAS (1 √ó a et 1 √ó 2) */}
                              {/* Fl√®che 3: 1 √ó a - niveau bas */}
                              {animationStep >= 3 && (
                                <g>
                                  <path
                                    d="M 90 35 Q 185 80 280 35"
                                    stroke="#dc2626"
                                    strokeWidth="3"
                                    fill="none"
                                    markerEnd="url(#arrowhead-red)"
                                    className="animate-pulse"
                                  />
                                  <text x="185" y="75" textAnchor="middle" className="text-xs fill-red-600 font-bold">1 √ó a = a</text>
                                </g>
                              )}
                              
                              {/* Fl√®che 4: 1 √ó 2 - niveau bas */}
                              {animationStep >= 4 && (
                                <g>
                                  <path
                                    d="M 90 35 Q 205 85 320 35"
                                    stroke="#ea580c"
                                    strokeWidth="3"
                                    fill="none"
                                    markerEnd="url(#arrowhead-orange)"
                                    className="animate-pulse"
                                  />
                                  <text x="205" y="90" textAnchor="middle" className="text-xs fill-orange-600 font-bold">1 √ó 2 = 2</text>
                                </g>
                              )}
                              
                              {/* Termes visuels pour r√©f√©rence */}
                              <text x="50" y="30" textAnchor="middle" className="text-sm fill-blue-600 font-bold">a</text>
                              <text x="90" y="45" textAnchor="middle" className="text-sm fill-blue-600 font-bold">1</text>
                              <text x="280" y="30" textAnchor="middle" className="text-sm fill-red-600 font-bold">a</text>
                              <text x="320" y="30" textAnchor="middle" className="text-sm fill-red-600 font-bold">2</text>
                              
                              {/* D√©finitions des pointes de fl√®ches */}
                              <defs>
                                <marker id="arrowhead-purple" markerWidth="10" markerHeight="8" refX="10" refY="4" orient="auto">
                                  <polygon points="0 0, 10 4, 0 8" fill="#8b5cf6" />
                                </marker>
                                <marker id="arrowhead-green" markerWidth="10" markerHeight="8" refX="10" refY="4" orient="auto">
                                  <polygon points="0 0, 10 4, 0 8" fill="#059669" />
                                </marker>
                                <marker id="arrowhead-red" markerWidth="10" markerHeight="8" refX="10" refY="4" orient="auto">
                                  <polygon points="0 0, 10 4, 0 8" fill="#dc2626" />
                                </marker>
                                <marker id="arrowhead-orange" markerWidth="10" markerHeight="8" refX="10" refY="4" orient="auto">
                                  <polygon points="0 0, 10 4, 0 8" fill="#ea580c" />
                                </marker>
                              </defs>
                            </svg>
                          </div>
                        )}
                        
                        <p className="text-gray-600">Expression de d√©part</p>
                      </div>
                      
                      {/* √âtape 1: Fl√®che a √ó a */}
                      {animationStep >= 1 && (
                        <div className="p-4 bg-purple-50 rounded-lg border-l-4 border-purple-500">
                          <div className="flex items-center justify-between">
                            <div className="text-xl font-mono font-bold">
                              <span className="text-blue-600 bg-blue-200 px-2 rounded">a</span>
                              <span className="text-gray-600"> √ó </span>
                              <span className="text-red-600 bg-red-200 px-2 rounded">a</span>
                              <span className="text-gray-600"> = </span>
                              <span className="text-purple-600 font-extrabold">a¬≤</span>
                            </div>
                            <div className="text-sm text-gray-600">Premi√®re fl√®che</div>
                          </div>
                        </div>
                      )}
                      
                      {/* √âtape 2: Fl√®che a √ó 2 */}
                      {animationStep >= 2 && (
                        <div className="p-4 bg-green-50 rounded-lg border-l-4 border-green-500">
                          <div className="flex items-center justify-between">
                            <div className="text-xl font-mono font-bold">
                              <span className="text-blue-600 bg-blue-200 px-2 rounded">a</span>
                              <span className="text-gray-600"> √ó </span>
                              <span className="text-red-600 bg-red-200 px-2 rounded">2</span>
                              <span className="text-gray-600"> = </span>
                              <span className="text-green-600 font-extrabold">2a</span>
                            </div>
                            <div className="text-sm text-gray-600">Deuxi√®me fl√®che</div>
                          </div>
                        </div>
                      )}
                      
                      {/* √âtape 3: Fl√®che 1 √ó a */}
                      {animationStep >= 3 && (
                        <div className="p-4 bg-red-50 rounded-lg border-l-4 border-red-500">
                          <div className="flex items-center justify-between">
                            <div className="text-xl font-mono font-bold">
                              <span className="text-blue-600 bg-blue-200 px-2 rounded">1</span>
                              <span className="text-gray-600"> √ó </span>
                              <span className="text-red-600 bg-red-200 px-2 rounded">a</span>
                              <span className="text-gray-600"> = </span>
                              <span className="text-red-600 font-extrabold">a</span>
                            </div>
                            <div className="text-sm text-gray-600">Troisi√®me fl√®che</div>
                          </div>
                        </div>
                      )}
                      
                      {/* √âtape 4: Fl√®che 1 √ó 2 */}
                      {animationStep >= 4 && (
                        <div className="p-4 bg-orange-50 rounded-lg border-l-4 border-orange-500">
                          <div className="flex items-center justify-between">
                            <div className="text-xl font-mono font-bold">
                              <span className="text-blue-600 bg-blue-200 px-2 rounded">1</span>
                              <span className="text-gray-600"> √ó </span>
                              <span className="text-red-600 bg-red-200 px-2 rounded">2</span>
                              <span className="text-gray-600"> = </span>
                              <span className="text-orange-600 font-extrabold">2</span>
                            </div>
                            <div className="text-sm text-gray-600">Quatri√®me fl√®che</div>
                          </div>
                        </div>
                      )}
                      
                      {/* √âtape 5: R√©capitulatif de tous les produits */}
                      {animationStep >= 5 && (
                        <div className="p-4 bg-yellow-50 rounded-lg border-l-4 border-yellow-500">
                          <div className="text-center">
                            <div className="text-2xl font-mono font-bold mb-2">
                              <span className="text-purple-600 font-extrabold">a¬≤</span>
                              <span className="text-gray-600"> + </span>
                              <span className="text-green-600 font-extrabold">2a</span>
                              <span className="text-gray-600"> + </span>
                              <span className="text-red-600 font-extrabold">a</span>
                              <span className="text-gray-600"> + </span>
                              <span className="text-orange-600 font-extrabold">2</span>
                            </div>
                            <p className="text-gray-600">R√©capitulatif de tous les produits</p>
                          </div>
                        </div>
                      )}
                      
                      {/* √âtape 6: D√©veloppement */}
                      {animationStep >= 6 && (
                        <div className="p-4 bg-indigo-50 rounded-lg border-l-4 border-indigo-500">
                          <div className="text-center">
                            <div className="text-2xl font-mono font-bold mb-2">
                              <span className="text-indigo-600">a¬≤ + 2a + a + 2</span>
                            </div>
                            <p className="text-gray-600">D√©veloppement complet</p>
                          </div>
                        </div>
                      )}
                      
                      {/* √âtape 7: R√©sultat final */}
                      {animationStep >= 7 && (
                        <div className="p-4 bg-green-100 rounded-lg border-l-4 border-green-600">
                          <div className="text-center">
                            <div className="text-3xl font-mono font-bold mb-2">
                              <span className="text-green-700 font-extrabold">a¬≤ + 3a + 2</span>
                            </div>
                            <p className="text-gray-600">R√©sultat final : regrouper les termes similaires</p>
                          </div>
                        </div>
                      )}
                    </div>
                  )}

                  {/* Description de l'√©tape */}
                  <div className={`text-lg font-medium transition-all duration-800 ease-in-out ${
                    animationPlaying ? 'text-blue-600' : 'text-gray-600'
                  }`}>
                    {currentAnim.steps[animationStep]?.description || 'Cliquez sur "Jouer" pour voir la distributivit√© √©tape par √©tape !'}
                  </div>

                  {/* Indicateur de progression */}
                  <div className="flex justify-center space-x-2">
                    {currentAnim.steps.map((_, index) => (
                      <div
                        key={index}
                        className={`w-3 h-3 rounded-full transition-all duration-500 ${
                          index <= animationStep
                            ? 'bg-blue-500 scale-125'
                            : 'bg-gray-300'
                        }`}
                      />
                    ))}
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Exercices */}
        {activeTab === 'exercices' && (
          <div className="space-y-8">
            {/* S√©lecteur de mode */}
            <div className="bg-white rounded-xl p-6 shadow-lg border border-gray-200">
              <div className="flex flex-col sm:flex-row gap-4 items-center justify-between mb-6">
                <h2 className="text-2xl font-bold text-gray-800">üéØ Exercices de d√©veloppement</h2>
                
                <div className="flex gap-3 items-center">
                  <button
                    onClick={() => {
                      setExerciseLevel('normal')
                      setCurrentExercise(0)
                      resetExercise()
                    }}
                    className={`flex items-center gap-2 px-4 py-2 rounded-lg text-base font-bold shadow-md transition-colors ${
                      exerciseLevel === 'normal' 
                        ? 'bg-blue-600 text-white' 
                        : 'bg-blue-500 text-white hover:bg-blue-600'
                    }`}
                  >
                    <span className="text-xl">üìù</span>
                    Normal: {correctAnswersNormal}/{normalExercises.length}
                  </button>
                  <button
                    onClick={() => {
                      setExerciseLevel('beast')
                      setCurrentExercise(0)
                      resetExercise()
                    }}
                    className={`flex items-center gap-2 px-4 py-2 rounded-lg text-base font-bold shadow-md transition-colors ${
                      exerciseLevel === 'beast' 
                        ? 'bg-red-600 text-white' 
                        : 'bg-red-500 text-white hover:bg-red-600'
                    }`}
                  >
                    <span className="text-xl">üî•</span>
                    Beast: {correctAnswersBeast}/{beastExercises.length}
                  </button>
                  <button
                    onClick={() => {
                      setExerciseLevel('hardcore')
                      setCurrentExercise(0)
                      resetExercise()
                    }}
                    className={`flex items-center gap-2 px-4 py-2 rounded-lg text-base font-bold shadow-md transition-colors ${
                      exerciseLevel === 'hardcore' 
                        ? 'bg-purple-600 text-white' 
                        : 'bg-purple-500 text-white hover:bg-purple-600'
                    }`}
                  >
                    <span className="text-xl">üíÄ</span>
                    Hardcore: {correctAnswersHardcore}/{hardcoreExercises.length}
                  </button>
                  {showIncrement && (
                    <div className="flex items-center gap-2 px-3 py-1 bg-green-500 text-white rounded-lg text-sm font-bold animate-pulse">
                      <span className="text-lg">‚úÖ</span>
                      +1 !
                    </div>
                  )}
                  
                  {/* Bouton de r√©initialisation des compteurs */}
                  <button
                    onClick={resetCounters}
                    className="px-3 py-2 rounded-lg font-medium transition-colors bg-gray-500 text-white hover:bg-gray-600"
                    title="R√©initialiser les compteurs"
                  >
                    üîÑ
                  </button>
                </div>
              </div>
            </div>

            {/* Exercices Normaux */}
            {exerciseLevel === 'normal' && (
              <div className="bg-white rounded-xl p-6 shadow-lg border border-blue-200">
                <div className="flex flex-col sm:flex-row gap-4 items-center justify-between mb-6">
                  <div className="flex items-center gap-4">
                    <h3 className="text-lg font-semibold text-blue-800 flex items-center gap-2">
                      <span className="text-2xl">üìù</span>
                      Mode Normal - Exercice {currentExercise + 1} / {normalExercises.length}
                </h3>
                    {/* Barre de progression Mode Normal */}
                    <div className="flex items-center gap-2">
                      <div className="w-32 bg-gray-200 rounded-full h-2">
                        <div 
                          className="bg-blue-500 h-2 rounded-full transition-all duration-300"
                          style={{ width: `${((currentExercise + 1) / normalExercises.length) * 100}%` }}
                        />
                      </div>
                      <span className="text-sm text-gray-600 font-medium">
                        {Math.round(((currentExercise + 1) / normalExercises.length) * 100)}%
                      </span>
                    </div>
                </div>
              </div>

                <div className="space-y-4">
                  {/* Question Mode Normal avec score int√©gr√© */}
                  <div className="bg-blue-50 rounded-lg p-4 border border-blue-200">
                    <div className="flex items-center justify-between mb-3">
                      <h4 className="font-semibold text-blue-800">üìù D√©veloppez l'expression :</h4>
                      <span className="inline-flex items-center gap-1 px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm font-semibold">
                        üìù {correctAnswersNormal}/{normalExercises.length}
                      </span>
                    </div>
                    <div className="text-xl font-mono text-blue-900 text-center">
                  {currentEx.question}
                    </div>
                  </div>

                  {/* √âditeur math√©matique */}
                  <div className="mb-4 space-y-4">
                    <h4 className="font-semibold text-blue-800 mb-3">üìù Votre r√©ponse :</h4>
                    <MathEditor
                    value={userAnswer}
                      onChange={setUserAnswer}
                      placeholder="D√©veloppez l'expression... (ex: 3x + 6)"
                      onSubmit={checkAnswer}
                      theme="blue"
                    disabled={showAnswer}
                  />
                    
                    {/* Reconnaissance vocale */}
                    <div className="border-t border-blue-200 pt-3">
                      <VoiceInput
                        onTranscript={(transcript) => setUserAnswer(transcript)}
                        placeholder="Ou dites votre r√©ponse √† voix haute (ex: 'trois x plus six')..."
                        className="justify-center"
                      />
                    </div>
                  </div>
                  
                  {/* Feedback de r√©ponse */}
                  {showAnswer && (
                    <div className={`p-4 rounded-lg border transition-all duration-500 ${
                      answerFeedback === 'correct'
                        ? 'bg-green-50 border-green-200'
                        : 'bg-red-50 border-red-200'
                    }`}>
                      <div className="flex items-center gap-2 mb-2">
                        <span className="text-2xl">
                          {answerFeedback === 'correct' ? 'üéâ' : 'üí°'}
                        </span>
                        <p className={`font-semibold ${
                          answerFeedback === 'correct'
                            ? 'text-green-800'
                            : 'text-red-800'
                        }`}>
                          {answerFeedback === 'correct' ? 'Excellent !' : 'Presque !'}
                        </p>
                      </div>
                      <p className="text-gray-700">
                        La bonne r√©ponse est : <span className="font-mono font-bold text-blue-700">{currentEx.steps[currentEx.steps.length - 1].expr}</span>
                      </p>
                      
                      {/* Bouton pour voir la solution d√©taill√©e */}
                  <button
                        onClick={() => setShowSolution(!showSolution)}
                        className="mt-3 px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors text-sm"
                  >
                        {showSolution ? 'Masquer' : 'Voir'} la solution d√©taill√©e
                  </button>
                </div>
                  )}

                  {/* Solution d√©taill√©e */}
                  {showSolution && (
                    <div className="bg-gray-50 rounded-lg p-6 border border-gray-200">
                      <h4 className="font-bold text-gray-800 mb-4">üìö Solution √©tape par √©tape :</h4>
                      
                      <div className="space-y-3">
                        {currentEx.steps.map((step, index) => (
                          <div 
                            key={index}
                            className={`p-3 rounded-lg border transition-all duration-500 ${
                              index <= solutionStep ? 'opacity-100' : 'opacity-30'
                            }`}
                            style={{ backgroundColor: index === solutionStep ? '#eff6ff' : '#f9fafb' }}
                          >
                            <div className="flex items-center justify-between">
                              <span className="text-sm font-medium text-gray-600">{step.text}</span>
                              <span className={`font-mono text-lg ${step.color}`}>{step.expr}</span>
                            </div>
                          </div>
                        ))}
                      </div>
                      
                      {/* Navigation solution */}
                      <div className="flex justify-center gap-3 mt-4">
                        <button
                          onClick={prevSolutionStep}
                          disabled={solutionStep === 0}
                          className="px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 disabled:opacity-50 transition-colors"
                        >
                          ‚Üê Pr√©c√©dent
                        </button>
                        <button
                          onClick={nextSolutionStep}
                          disabled={solutionStep >= currentEx.steps.length - 1}
                          className="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:opacity-50 transition-colors"
                        >
                          Suivant ‚Üí
                        </button>
                        <button
                          onClick={resetSolutionStep}
                          className="px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors"
                        >
                          üîÑ Reset
                        </button>
                      </div>
                    </div>
                  )}

                  {/* Navigation exercices */}
                  <div className="flex justify-between pt-4">
                    <button
                      onClick={prevExercise}
                      disabled={currentExercise === 0}
                      className="px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 disabled:opacity-50 transition-colors"
                    >
                      ‚Üê Pr√©c√©dent
                    </button>
                    <button
                      onClick={nextExercise}
                      disabled={currentExercise === exercises.length - 1}
                      className="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:opacity-50 transition-colors"
                    >
                      Suivant ‚Üí
                    </button>
                  </div>
                </div>
              </div>
            )}

            {/* Exercices Beast Mode */}
            {exerciseLevel === 'beast' && (
              <div className="bg-white rounded-xl p-6 shadow-lg border border-red-200">
                <div className="flex flex-col sm:flex-row gap-4 items-center justify-between mb-6">
                  <div className="flex items-center gap-4">
                    <h3 className="text-lg font-semibold text-red-800 flex items-center gap-2">
                      <span className="text-2xl">üî•</span>
                      Beast Mode - Exercice {currentExercise + 1} / {beastExercises.length}
                      <span className="text-2xl">üî•</span>
                    </h3>
                    {/* Barre de progression Beast Mode */}
                    <div className="flex items-center gap-2">
                      <div className="w-32 bg-gray-200 rounded-full h-2">
                        <div 
                          className="bg-red-500 h-2 rounded-full transition-all duration-300"
                          style={{ width: `${((currentExercise + 1) / beastExercises.length) * 100}%` }}
                        />
                      </div>
                      <span className="text-sm text-gray-600 font-medium">
                        {Math.round(((currentExercise + 1) / beastExercises.length) * 100)}%
                      </span>
                    </div>
                  </div>
                </div>

                  <div className="space-y-4">
                  {/* Question Beast Mode avec score int√©gr√© */}
                  <div className="bg-red-50 rounded-lg p-4 border border-red-200">
                    <div className="flex items-center justify-between mb-3">
                      <h4 className="font-semibold text-red-800">üî• D√©fi Beast Mode :</h4>
                      <span className="inline-flex items-center gap-1 px-3 py-1 bg-orange-100 text-orange-700 rounded-full text-sm font-semibold">
                        üî• {correctAnswersBeast}/{beastExercises.length}
                      </span>
                    </div>
                    <div className="text-xl font-mono text-red-900 text-center">
                      {currentEx.question}
                    </div>
                  </div>

                  {/* √âditeur math√©matique Beast */}
                  <div className="mb-4 space-y-4">
                    <h4 className="font-semibold text-red-800 mb-3">üî• Votre r√©ponse Beast :</h4>
                    <MathEditor
                      value={userAnswer}
                      onChange={setUserAnswer}
                      placeholder="D√©fi Beast ! D√©veloppez cette expression complexe..."
                      onSubmit={checkAnswer}
                      theme="red"
                      disabled={showAnswer}
                    />
                    
                    {/* Reconnaissance vocale Beast */}
                    <div className="border-t border-red-200 pt-3">
                      <VoiceInput
                        onTranscript={(transcript) => setUserAnswer(transcript)}
                        placeholder="Mode Beast : dites votre r√©ponse (ex: 'six x carr√© plus cinq x moins quatre')..."
                        className="justify-center"
                      />
                    </div>
                  </div>
                  
                  {/* Feedback de r√©ponse Beast */}
                  {showAnswer && (
                    <div className={`p-4 rounded-lg border transition-all duration-500 ${
                      answerFeedback === 'correct'
                        ? 'bg-green-50 border-green-200'
                        : 'bg-red-50 border-red-200'
                    }`}>
                      <div className="flex items-center gap-2 mb-2">
                        <span className="text-2xl">
                          {answerFeedback === 'correct' ? 'üèÜ' : 'üí™'}
                        </span>
                      <p className={`font-semibold ${
                          answerFeedback === 'correct'
                          ? 'text-green-800'
                          : 'text-red-800'
                      }`}>
                          {answerFeedback === 'correct' ? 'BEAST CHAMPION !' : 'Beast en formation !'}
                        </p>
                      </div>
                      <p className="text-gray-700">
                        La r√©ponse beast : <span className="font-mono font-bold text-red-700">{currentEx.steps[currentEx.steps.length - 1].expr}</span>
                      </p>
                      
                      {/* Bouton pour voir la solution d√©taill√©e Beast */}
                      <button
                        onClick={() => setShowSolution(!showSolution)}
                        className="mt-3 px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors text-sm"
                      >
                        {showSolution ? 'Masquer' : 'Voir'} la solution beast
                      </button>
                    </div>
                  )}

                  {/* Solution d√©taill√©e Beast */}
                  {showSolution && (
                    <div className="bg-red-50 rounded-lg p-6 border border-red-200">
                      <h4 className="font-bold text-red-800 mb-4">üî• Solution Beast √©tape par √©tape :</h4>
                      
                      <div className="space-y-3">
                        {currentEx.steps.map((step, index) => (
                          <div 
                            key={index}
                            className={`p-3 rounded-lg border transition-all duration-500 ${
                              index <= solutionStep ? 'opacity-100' : 'opacity-30'
                            }`}
                            style={{ backgroundColor: index === solutionStep ? '#fef2f2' : '#fefefe' }}
                          >
                            <div className="flex items-center justify-between">
                              <span className="text-sm font-medium text-red-600">{step.text}</span>
                              <span className={`font-mono text-lg ${step.color}`}>{step.expr}</span>
                            </div>
                          </div>
                        ))}
                      </div>
                      
                      {/* Navigation solution Beast */}
                      <div className="flex justify-center gap-3 mt-4">
                        <button
                          onClick={prevSolutionStep}
                          disabled={solutionStep === 0}
                          className="px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 disabled:opacity-50 transition-colors"
                        >
                          ‚Üê Pr√©c√©dent
                        </button>
                        <button
                          onClick={nextSolutionStep}
                          disabled={solutionStep >= currentEx.steps.length - 1}
                          className="px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 disabled:opacity-50 transition-colors"
                        >
                          Suivant ‚Üí
                        </button>
                        <button
                          onClick={resetSolutionStep}
                          className="px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors"
                        >
                          üîÑ Reset
                        </button>
                    </div>
                  </div>
                )}

                  {/* Navigation exercices Beast */}
                  <div className="flex justify-between pt-4">
                    <button
                      onClick={prevExercise}
                      disabled={currentExercise === 0}
                      className="px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 disabled:opacity-50 transition-colors"
                    >
                      ‚Üê Pr√©c√©dent
                    </button>
                    <button
                      onClick={nextExercise}
                      disabled={currentExercise === exercises.length - 1}
                      className="px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 disabled:opacity-50 transition-colors"
                    >
                      Suivant ‚Üí
                    </button>
              </div>
                </div>
              </div>
            )}

            {/* Exercices Hardcore */}
            {exerciseLevel === 'hardcore' && (
              <div className="bg-white rounded-xl p-6 shadow-lg border border-purple-200">
                <div className="flex flex-col sm:flex-row gap-4 items-center justify-between mb-6">
                  <div className="flex items-center gap-4">
                    <h3 className="text-lg font-semibold text-purple-800 flex items-center gap-2">
                      <span className="text-2xl">üíÄ</span>
                      Mode Hardcore - Exercice {currentExercise + 1} / {hardcoreExercises.length}
                    </h3>
                    {/* Barre de progression Mode Hardcore */}
                    <div className="flex items-center gap-2">
                      <div className="w-32 bg-gray-200 rounded-full h-2">
                        <div 
                          className="bg-purple-500 h-2 rounded-full transition-all duration-300"
                          style={{ width: `${((currentExercise + 1) / hardcoreExercises.length) * 100}%` }}
                        />
                      </div>
                      <span className="text-sm text-gray-600 font-medium">
                        {Math.round(((currentExercise + 1) / hardcoreExercises.length) * 100)}%
                      </span>
                    </div>
                  </div>
                </div>

                <div className="space-y-4">
                  {/* Question Hardcore Mode avec score int√©gr√© */}
                  <div className="bg-purple-50 rounded-lg p-4 border border-purple-200">
                    <div className="flex items-center justify-between mb-3">
                      <h4 className="font-semibold text-purple-800">üíÄ D√©fi Hardcore - Fractions et LA TOTALE :</h4>
                      <span className="inline-flex items-center gap-1 px-3 py-1 bg-purple-100 text-purple-700 rounded-full text-sm font-semibold">
                        üíÄ {correctAnswersHardcore}/{hardcoreExercises.length}
                      </span>
                    </div>
                    <div className="text-xl font-mono text-purple-900 text-center">
                      <MathExpression expression={currentEx.question} />
                    </div>
                  </div>

                  {/* √âditeur math√©matique Hardcore */}
                  <div className="mb-4 space-y-4">
                    <h4 className="font-semibold text-purple-800 mb-3">üíÄ Votre r√©ponse Hardcore :</h4>
                    <MathEditor
                      value={userAnswer}
                      onChange={setUserAnswer}
                      placeholder="HARDCORE ! Fractions, puissances, tout est permis..."
                      onSubmit={checkAnswer}
                      theme="red"
                      disabled={showAnswer}
                    />
                    
                    {/* Reconnaissance vocale Hardcore */}
                    <div className="border-t border-purple-200 pt-3">
                      <VoiceInput
                        onTranscript={(transcript) => setUserAnswer(transcript)}
                        placeholder="Mode Hardcore : dites votre r√©ponse avec fractions (ex: 'un demi x carr√© plus trois quarts x')..."
                        className="justify-center"
                      />
                    </div>
                  </div>
                  
                  {/* Feedback de r√©ponse Hardcore */}
                  {showAnswer && (
                    <div className={`p-4 rounded-lg border transition-all duration-500 ${
                      answerFeedback === 'correct'
                        ? 'bg-green-50 border-green-200'
                        : 'bg-purple-50 border-purple-200'
                    }`}>
                      <div className="flex items-center gap-2 mb-2">
                        <span className="text-2xl">
                          {answerFeedback === 'correct' ? 'üëë' : 'üíÄ'}
                        </span>
                        <p className={`font-semibold ${
                          answerFeedback === 'correct'
                            ? 'text-green-800'
                            : 'text-purple-800'
                        }`}>
                          {answerFeedback === 'correct' ? 'HARDCORE LEGEND !' : 'Hardcore warrior en formation !'}
                        </p>
                      </div>
                      <p className="text-gray-700">
                        La r√©ponse hardcore : <span className="font-mono font-bold text-purple-700">
                          <MathExpression expression={currentEx.steps[currentEx.steps.length - 1].expr} />
                        </span>
                      </p>
                      
                      {/* Bouton pour voir la solution d√©taill√©e Hardcore */}
                      <button
                        onClick={() => setShowSolution(!showSolution)}
                        className="mt-3 px-4 py-2 bg-purple-500 text-white rounded-lg hover:bg-purple-600 transition-colors text-sm"
                      >
                        {showSolution ? 'Masquer' : 'Voir'} la solution hardcore
                      </button>
                    </div>
                  )}

                  {/* Solution d√©taill√©e Hardcore */}
                  {showSolution && (
                    <div className="bg-purple-50 rounded-lg p-6 border border-purple-200">
                      <h4 className="font-bold text-purple-800 mb-4">üíÄ Solution Hardcore √©tape par √©tape :</h4>
                      
                      <div className="space-y-3">
                        {currentEx.steps.map((step, index) => (
                          <div 
                            key={index}
                            className={`p-3 rounded-lg border transition-all duration-500 ${
                              index <= solutionStep ? 'opacity-100' : 'opacity-30'
                            }`}
                            style={{ backgroundColor: index === solutionStep ? '#faf5ff' : '#fefefe' }}
                          >
                            <div className="flex items-center justify-between">
                              <span className="text-sm font-medium text-purple-600">{step.text}</span>
                              <span className={`font-mono text-lg ${step.color}`}>
                                <MathExpression expression={step.expr} />
                              </span>
                            </div>
                          </div>
                        ))}
                      </div>
                      
                      {/* Navigation solution Hardcore */}
                      <div className="flex justify-center gap-3 mt-4">
                        <button
                          onClick={prevSolutionStep}
                          disabled={solutionStep === 0}
                          className="px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 disabled:opacity-50 transition-colors"
                        >
                          ‚Üê Pr√©c√©dent
                        </button>
                        <button
                          onClick={nextSolutionStep}
                          disabled={solutionStep >= currentEx.steps.length - 1}
                          className="px-4 py-2 bg-purple-500 text-white rounded-lg hover:bg-purple-600 disabled:opacity-50 transition-colors"
                        >
                          Suivant ‚Üí
                        </button>
                        <button
                          onClick={resetSolutionStep}
                          className="px-4 py-2 bg-indigo-500 text-white rounded-lg hover:bg-indigo-600 transition-colors"
                        >
                          üîÑ Reset
                        </button>
                      </div>
                    </div>
                  )}

                  {/* Navigation exercices Hardcore */}
                  <div className="flex justify-between pt-4">
                <button
                  onClick={prevExercise}
                  disabled={currentExercise === 0}
                      className="px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 disabled:opacity-50 transition-colors"
                >
                      ‚Üê Pr√©c√©dent
                </button>
                <button
                  onClick={nextExercise}
                  disabled={currentExercise === exercises.length - 1}
                      className="px-4 py-2 bg-purple-500 text-white rounded-lg hover:bg-purple-600 disabled:opacity-50 transition-colors"
                >
                      Suivant ‚Üí
                </button>
              </div>
            </div>
              </div>
            )}
          </div>
        )}
      </div>
    </div>
  )
} 