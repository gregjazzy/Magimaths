'use client'

import { useState, useEffect } from 'react'
import { ArrowLeft, BookOpen, Target, Zap, Play, Pause, RotateCcw } from 'lucide-react'
import Link from 'next/link'
import MathEditor from '@/components/MathEditor'
import { VoiceInput } from '../../../components/VoiceInput'

// Composant pour afficher les fractions avec de vraies barres
const Fraction = ({ numerator, denominator }: { numerator: string, denominator: string }) => (
  <span className="inline-block mx-1 align-middle">
    <span className="inline-flex flex-col items-center justify-center">
      <span className="text-sm leading-tight px-1">{numerator}</span>
      <span className="w-full h-0.5 bg-current my-1 min-w-[20px]"></span>
      <span className="text-sm leading-tight px-1">{denominator}</span>
    </span>
  </span>
)

// Composant pour parser et afficher les expressions math√©matiques avec fractions
const MathExpression = ({ expression, className = "" }: { expression: string, className?: string }) => {
  const parts = []
  let remaining = expression
  let key = 0

  while (remaining.length > 0) {
    // Cherche les fractions du type (num/den) avec possibles variables, coefficients et expressions
    const fractionMatch = remaining.match(/\(([^\/\)]+)\/([^\/\)]+)\)/)
    
    if (fractionMatch) {
      const beforeFraction = remaining.substring(0, fractionMatch.index!)
      if (beforeFraction) {
        // Parse les puissances dans le texte avant la fraction
        const processedBefore = beforeFraction.replace(/([a-zA-Z])(\d+)/g, (match, variable, exponent) => {
          // Ne pas traiter si c'est d√©j√† format√© ou si c'est un nombre complet
          if (match.includes('‚Å∞') || match.includes('¬π') || match.includes('¬≤') || match.includes('¬≥')) {
            return match
          }
          return variable + convertToSuperscript(exponent)
        })
        parts.push(<span key={key++}>{processedBefore}</span>)
      }
      
      // Traite les puissances dans le num√©rateur et d√©nominateur
      const numerator = fractionMatch[1].replace(/([a-zA-Z])(\d+)/g, (match, variable, exponent) => {
        return variable + convertToSuperscript(exponent)
      })
      const denominator = fractionMatch[2].replace(/([a-zA-Z])(\d+)/g, (match, variable, exponent) => {
        return variable + convertToSuperscript(exponent)
      })
      
      parts.push(
        <Fraction 
          key={key++} 
          numerator={numerator} 
          denominator={denominator} 
        />
      )
      
      remaining = remaining.substring(fractionMatch.index! + fractionMatch[0].length)
    } else {
      // Pas d'autres fractions, traiter les puissances dans le reste
      const processedRemaining = remaining.replace(/([a-zA-Z])(\d+)/g, (match, variable, exponent) => {
        // Ne pas traiter si c'est d√©j√† format√©
        if (match.includes('‚Å∞') || match.includes('¬π') || match.includes('¬≤') || match.includes('¬≥')) {
          return match
        }
        return variable + convertToSuperscript(exponent)
      })
      parts.push(<span key={key++}>{processedRemaining}</span>)
      break
    }
  }

  return <span className={className}>{parts}</span>
}

// Fonction pour convertir les nombres en exposants
const convertToSuperscript = (num: string): string => {
  const superscriptMap: { [key: string]: string } = {
    '0': '‚Å∞', '1': '¬π', '2': '¬≤', '3': '¬≥', '4': '‚Å¥',
    '5': '‚Åµ', '6': '‚Å∂', '7': '‚Å∑', '8': '‚Å∏', '9': '‚Åπ'
  }
  return num.split('').map(digit => superscriptMap[digit] || digit).join('')
}

export default function DeveloppementPage() {
  const [activeTab, setActiveTab] = useState<'cours' | 'exercices'>('cours')
  const [exerciseLevel, setExerciseLevel] = useState<'normal' | 'beast' | 'hardcore'>('normal')
  const [currentExercise, setCurrentExercise] = useState(0)
  const [userAnswer, setUserAnswer] = useState('')
  const [showAnswer, setShowAnswer] = useState(false)
  const [answerFeedback, setAnswerFeedback] = useState<'correct' | 'incorrect' | null>(null)
  
  // Compteurs de bonnes r√©ponses
  const [correctAnswersNormal, setCorrectAnswersNormal] = useState(0)
  const [correctAnswersBeast, setCorrectAnswersBeast] = useState(0)
  const [correctAnswersHardcore, setCorrectAnswersHardcore] = useState(0)
  const [showIncrement, setShowIncrement] = useState(false)
  
  // √âtats pour la solution d√©taill√©e
  const [showSolution, setShowSolution] = useState(false)
  const [solutionStep, setSolutionStep] = useState(0)
  
  const [animationPlaying, setAnimationPlaying] = useState(false)
  const [animationStep, setAnimationStep] = useState(0)
  const [selectedAnimation, setSelectedAnimation] = useState(0)

  // Animations pour expliquer la distributivit√©
  const distributivityAnimations = [
    {
      id: 'basic',
      title: 'üéØ Distributivit√© Simple',
      expression: '3(x + 2)',
      steps: [
        { phase: 'initial', content: '3(x + 2)', description: 'Expression de d√©part' },
        { phase: 'highlight', content: '3(x + 2)', description: 'Le 3 va se distribuer sur chaque terme' },
        { phase: 'distribute', content: '3 √ó x + 3 √ó 2', description: 'Distribution du 3 sur chaque terme' },
        { phase: 'calculate', content: '3x + 6', description: 'R√©sultat final' }
      ]
    },
    {
      id: 'negative',
      title: '‚ö° Avec Signe N√©gatif',
      expression: '-2(x + 3)',
      steps: [
        { phase: 'initial', content: '-2(x + 3)', description: 'Expression avec signe n√©gatif' },
        { phase: 'highlight', content: '-2(x + 3)', description: 'Le -2 va se distribuer' },
        { phase: 'distribute', content: '(-2) √ó x + (-2) √ó 3', description: 'Distribution du -2' },
        { phase: 'calculate', content: '-2x - 6', description: 'Attention aux signes !' }
      ]
    },
    {
      id: 'double',
      title: 'üöÄ Double Distributivit√©',
      expression: '(a + 1)(b + 2)',
      steps: [
        { phase: 'initial', content: '(a + 1)(b + 2)', description: 'Deux parenth√®ses √† multiplier' },
        { phase: 'arrow1', content: '(a + 1)(b + 2)', description: 'Premi√®re fl√®che : a √ó b' },
        { phase: 'arrow2', content: '(a + 1)(b + 2)', description: 'Deuxi√®me fl√®che : a √ó 2' },
        { phase: 'arrow3', content: '(a + 1)(b + 2)', description: 'Troisi√®me fl√®che : 1 √ó b' },
        { phase: 'arrow4', content: '(a + 1)(b + 2)', description: 'Quatri√®me fl√®che : 1 √ó 2' },
        { phase: 'distribute', content: 'a√ób + a√ó2 + 1√ób + 1√ó2', description: 'R√©capitulatif de tous les produits' },
        { phase: 'expand', content: 'ab + 2a + b + 2', description: 'D√©veloppement complet' },
        { phase: 'calculate', content: 'ab + 2a + b + 2', description: 'R√©sultat final : impossible de regrouper davantage' }
      ]
    }
  ]

  // EXERCICES MODE NORMAL - Progression enrichie avec PUISSANCES et MOINS √ó MOINS
  const normalExercises = [
    // Niveau 1 : Distributivit√© simple - Bases
    {
      id: 1,
      question: "2(x + 3)",
      steps: [
        { text: "Expression de d√©part", expr: "2(x + 3)", color: "text-blue-600" },
        { text: "Distribution", expr: "2 √ó x + 2 √ó 3", color: "text-green-600" },
        { text: "R√©sultat", expr: "2x + 6", color: "text-purple-600" }
      ]
    },
    {
      id: 2,
      question: "-5(-x - 2)",
      steps: [
        { text: "Expression de d√©part", expr: "-5(-x - 2)", color: "text-blue-600" },
        { text: "Distribution", expr: "(-5) √ó (-x) + (-5) √ó (-2)", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+5x + 10", color: "text-orange-600" },
        { text: "R√©sultat", expr: "5x + 10", color: "text-purple-600" }
      ]
    },
    {
      id: 3,
      question: "3x¬≤(x - 4)",
      steps: [
        { text: "Expression de d√©part", expr: "3x¬≤(x - 4)", color: "text-blue-600" },
        { text: "Distribution avec puissances", expr: "3x¬≤ √ó x + 3x¬≤ √ó (-4)", color: "text-green-600" },
        { text: "Calcul des puissances", expr: "3x¬≥ - 12x¬≤", color: "text-orange-600" },
        { text: "R√©sultat", expr: "3x¬≥ - 12x¬≤", color: "text-purple-600" }
      ]
    },
    {
      id: 4,
      question: "-2x(-x¬≤ + 5)",
      steps: [
        { text: "Expression de d√©part", expr: "-2x(-x¬≤ + 5)", color: "text-blue-600" },
        { text: "Distribution", expr: "(-2x) √ó (-x¬≤) + (-2x) √ó 5", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+2x¬≥ - 10x", color: "text-orange-600" },
        { text: "R√©sultat", expr: "2x¬≥ - 10x", color: "text-purple-600" }
      ]
    },
    {
      id: 5,
      question: "-3(-y¬≥ - 2y)",
      steps: [
        { text: "Expression de d√©part", expr: "-3(-y¬≥ - 2y)", color: "text-blue-600" },
        { text: "Distribution", expr: "(-3) √ó (-y¬≥) + (-3) √ó (-2y)", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+3y¬≥ + 6y", color: "text-orange-600" },
        { text: "R√©sultat", expr: "3y¬≥ + 6y", color: "text-purple-600" }
      ]
    },
    {
      id: 6,
      question: "x¬≥(2x¬≤ - 3x)",
      steps: [
        { text: "Expression de d√©part", expr: "x¬≥(2x¬≤ - 3x)", color: "text-blue-600" },
        { text: "Distribution avec puissances", expr: "x¬≥ √ó 2x¬≤ + x¬≥ √ó (-3x)", color: "text-green-600" },
        { text: "Calcul des puissances", expr: "2x‚Åµ - 3x‚Å¥", color: "text-orange-600" },
        { text: "R√©sultat", expr: "2x‚Åµ - 3x‚Å¥", color: "text-purple-600" }
      ]
    },
    {
      id: 7,
      question: "-4a¬≤(-a¬≤ - 3a)",
      steps: [
        { text: "Expression de d√©part", expr: "-4a¬≤(-a¬≤ - 3a)", color: "text-blue-600" },
        { text: "Distribution", expr: "(-4a¬≤) √ó (-a¬≤) + (-4a¬≤) √ó (-3a)", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+4a‚Å¥ + 12a¬≥", color: "text-orange-600" },
        { text: "R√©sultat", expr: "4a‚Å¥ + 12a¬≥", color: "text-purple-600" }
      ]
    },
    {
      id: 8,
      question: "-x‚Å¥(-2x - 7)",
      steps: [
        { text: "Expression de d√©part", expr: "-x‚Å¥(-2x - 7)", color: "text-blue-600" },
        { text: "Distribution", expr: "(-x‚Å¥) √ó (-2x) + (-x‚Å¥) √ó (-7)", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+2x‚Åµ + 7x‚Å¥", color: "text-orange-600" },
        { text: "R√©sultat", expr: "2x‚Åµ + 7x‚Å¥", color: "text-purple-600" }
      ]
    },
    
    // Niveau 3 : Double distributivit√© avec puissances et signes n√©gatifs
    {
      id: 9,
      question: "(x¬≤ - 3)(-x + 2)",
      steps: [
        { text: "Expression de d√©part", expr: "(x¬≤ - 3)(-x + 2)", color: "text-blue-600" },
        { text: "Tous les produits", expr: "x¬≤√ó(-x) + x¬≤√ó2 + (-3)√ó(-x) + (-3)√ó2", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "-x¬≥ + 2x¬≤ + 3x - 6", color: "text-orange-600" },
        { text: "R√©sultat", expr: "-x¬≥ + 2x¬≤ + 3x - 6", color: "text-purple-600" }
      ]
    },
    {
      id: 10,
      question: "(-x¬≤ - 1)(-x - 4)",
      steps: [
        { text: "Expression de d√©part", expr: "(-x¬≤ - 1)(-x - 4)", color: "text-blue-600" },
        { text: "Tous les produits", expr: "(-x¬≤)√ó(-x) + (-x¬≤)√ó(-4) + (-1)√ó(-x) + (-1)√ó(-4)", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+x¬≥ + 4x¬≤ + x + 4", color: "text-orange-600" },
        { text: "R√©sultat", expr: "x¬≥ + 4x¬≤ + x + 4", color: "text-purple-600" }
      ]
    },
    {
      id: 11,
      question: "(2x¬≥ - 5)(-x¬≤ + 3)",
      steps: [
        { text: "Expression de d√©part", expr: "(2x¬≥ - 5)(-x¬≤ + 3)", color: "text-blue-600" },
        { text: "Tous les produits", expr: "2x¬≥√ó(-x¬≤) + 2x¬≥√ó3 + (-5)√ó(-x¬≤) + (-5)√ó3", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "-2x‚Åµ + 6x¬≥ + 5x¬≤ - 15", color: "text-orange-600" },
        { text: "R√©sultat", expr: "-2x‚Åµ + 6x¬≥ + 5x¬≤ - 15", color: "text-purple-600" }
      ]
    },
    {
      id: 12,
      question: "(-x‚Å¥ - 2x)(-3x - 1)",
      steps: [
        { text: "Expression de d√©part", expr: "(-x‚Å¥ - 2x)(-3x - 1)", color: "text-blue-600" },
        { text: "Tous les produits", expr: "(-x‚Å¥)√ó(-3x) + (-x‚Å¥)√ó(-1) + (-2x)√ó(-3x) + (-2x)√ó(-1)", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+3x‚Åµ + x‚Å¥ + 6x¬≤ + 2x", color: "text-orange-600" },
        { text: "R√©sultat", expr: "3x‚Åµ + x‚Å¥ + 6x¬≤ + 2x", color: "text-purple-600" }
      ]
    },
    
    // Niveau 4 : Coefficients avec puissances et signes n√©gatifs intensifs
    {
      id: 13,
      question: "(-3x¬≤ + 4)(-2x¬≥ - 5)",
      steps: [
        { text: "Expression de d√©part", expr: "(-3x¬≤ + 4)(-2x¬≥ - 5)", color: "text-blue-600" },
        { text: "Tous les produits", expr: "(-3x¬≤)√ó(-2x¬≥) + (-3x¬≤)√ó(-5) + 4√ó(-2x¬≥) + 4√ó(-5)", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+6x‚Åµ + 15x¬≤ - 8x¬≥ - 20", color: "text-orange-600" },
        { text: "R√©sultat", expr: "6x‚Åµ - 8x¬≥ + 15x¬≤ - 20", color: "text-purple-600" }
      ]
    },
    {
      id: 14,
      question: "(-4a¬≥ - 3a)(-a¬≤ + 2)",
      steps: [
        { text: "Expression de d√©part", expr: "(-4a¬≥ - 3a)(-a¬≤ + 2)", color: "text-blue-600" },
        { text: "Tous les produits", expr: "(-4a¬≥)√ó(-a¬≤) + (-4a¬≥)√ó2 + (-3a)√ó(-a¬≤) + (-3a)√ó2", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+4a‚Åµ - 8a¬≥ + 3a¬≥ - 6a", color: "text-orange-600" },
        { text: "R√©sultat", expr: "4a‚Åµ - 5a¬≥ - 6a", color: "text-purple-600" }
      ]
    },
    {
      id: 15,
      question: "(-2x‚Å¥ + x¬≤)(-3x¬≤ - 7)",
      steps: [
        { text: "Expression de d√©part", expr: "(-2x‚Å¥ + x¬≤)(-3x¬≤ - 7)", color: "text-blue-600" },
        { text: "Tous les produits", expr: "(-2x‚Å¥)√ó(-3x¬≤) + (-2x‚Å¥)√ó(-7) + x¬≤√ó(-3x¬≤) + x¬≤√ó(-7)", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+6x‚Å∂ + 14x‚Å¥ - 3x‚Å¥ - 7x¬≤", color: "text-orange-600" },
        { text: "R√©sultat", expr: "6x‚Å∂ + 11x‚Å¥ - 7x¬≤", color: "text-purple-600" }
      ]
    },
    
    // Niveau 5 : Puissances √©lev√©es avec signes n√©gatifs
    {
      id: 16,
      question: "-5x¬≥(-x‚Å¥ - 2x¬≤)",
      steps: [
        { text: "Expression de d√©part", expr: "-5x¬≥(-x‚Å¥ - 2x¬≤)", color: "text-blue-600" },
        { text: "Distribution", expr: "(-5x¬≥) √ó (-x‚Å¥) + (-5x¬≥) √ó (-2x¬≤)", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+5x‚Å∑ + 10x‚Åµ", color: "text-orange-600" },
        { text: "R√©sultat", expr: "5x‚Å∑ + 10x‚Åµ", color: "text-purple-600" }
      ]
    },
    {
      id: 17,
      question: "(-x‚Åµ - 4x¬≤)(-2x + 3)",
      steps: [
        { text: "Expression de d√©part", expr: "(-x‚Åµ - 4x¬≤)(-2x + 3)", color: "text-blue-600" },
        { text: "Tous les produits", expr: "(-x‚Åµ)√ó(-2x) + (-x‚Åµ)√ó3 + (-4x¬≤)√ó(-2x) + (-4x¬≤)√ó3", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+2x‚Å∂ - 3x‚Åµ + 8x¬≥ - 12x¬≤", color: "text-orange-600" },
        { text: "R√©sultat", expr: "2x‚Å∂ - 3x‚Åµ + 8x¬≥ - 12x¬≤", color: "text-purple-600" }
      ]
    },
    {
      id: 18,
      question: "(-3y‚Å¥ + 2y)(-y¬≥ - 5y)",
      steps: [
        { text: "Expression de d√©part", expr: "(-3y‚Å¥ + 2y)(-y¬≥ - 5y)", color: "text-blue-600" },
        { text: "Tous les produits", expr: "(-3y‚Å¥)√ó(-y¬≥) + (-3y‚Å¥)√ó(-5y) + 2y√ó(-y¬≥) + 2y√ó(-5y)", color: "text-green-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+3y‚Å∑ + 15y‚Åµ - 2y‚Å¥ - 10y¬≤", color: "text-orange-600" },
        { text: "R√©sultat", expr: "3y‚Å∑ + 15y‚Åµ - 2y‚Å¥ - 10y¬≤", color: "text-purple-600" }
      ]
    },
    
    // Niveau 6 : Introduction aux priorit√©s op√©ratoires
    {
      id: 19,
      question: "x¬≤ + 2x(x - 3)",
      steps: [
        { text: "Expression de d√©part", expr: "x¬≤ + 2x(x - 3)", color: "text-blue-600" },
        { text: "üìö Priorit√©s : d'abord la parenth√®se", expr: "D'abord d√©velopper 2x(x - 3)", color: "text-green-600" },
        { text: "D√©veloppement", expr: "2x √ó x + 2x √ó (-3) = 2x¬≤ - 6x", color: "text-orange-600" },
        { text: "Substitution", expr: "x¬≤ + (2x¬≤ - 6x)", color: "text-red-600" },
        { text: "R√©sultat", expr: "3x¬≤ - 6x", color: "text-purple-600" }
      ]
    },
    {
      id: 20,
      question: "3x - (x + 2)(x - 1)",
      steps: [
        { text: "Expression de d√©part", expr: "3x - (x + 2)(x - 1)", color: "text-blue-600" },
        { text: "üìö Priorit√©s : d√©velopper la double distributivit√©", expr: "D'abord (x + 2)(x - 1)", color: "text-green-600" },
        { text: "D√©veloppement", expr: "x¬≤ - x + 2x - 2 = x¬≤ + x - 2", color: "text-orange-600" },
        { text: "Substitution", expr: "3x - (x¬≤ + x - 2)", color: "text-red-600" },
        { text: "R√©sultat", expr: "3x - x¬≤ - x + 2 = -x¬≤ + 2x + 2", color: "text-purple-600" }
      ]
    },
    
    // Niveau 7 : Priorit√©s avec multiplication
    {
      id: 21,
      question: "2x¬≤ + x(x + 3) - 4",
      steps: [
        { text: "Expression de d√©part", expr: "2x¬≤ + x(x + 3) - 4", color: "text-blue-600" },
        { text: "üìö D√©velopper x(x + 3)", expr: "x √ó x + x √ó 3 = x¬≤ + 3x", color: "text-green-600" },
        { text: "Substitution", expr: "2x¬≤ + (x¬≤ + 3x) - 4", color: "text-orange-600" },
        { text: "R√©sultat", expr: "3x¬≤ + 3x - 4", color: "text-purple-600" }
      ]
    },
    {
      id: 22,
      question: "5x - 2x(x - 2) + x¬≤",
      steps: [
        { text: "Expression de d√©part", expr: "5x - 2x(x - 2) + x¬≤", color: "text-blue-600" },
        { text: "üìö D√©velopper 2x(x - 2)", expr: "2x √ó x + 2x √ó (-2) = 2x¬≤ - 4x", color: "text-green-600" },
        { text: "Substitution", expr: "5x - (2x¬≤ - 4x) + x¬≤", color: "text-orange-600" },
        { text: "Calcul", expr: "5x - 2x¬≤ + 4x + x¬≤", color: "text-red-600" },
        { text: "R√©sultat", expr: "-x¬≤ + 9x", color: "text-purple-600" }
      ]
    },
    {
      id: 23,
      question: "(x + 1)(x - 2) + 3x",
      steps: [
        { text: "Expression de d√©part", expr: "(x + 1)(x - 2) + 3x", color: "text-blue-600" },
        { text: "üìö D√©velopper (x + 1)(x - 2)", expr: "x¬≤ - 2x + x - 2 = x¬≤ - x - 2", color: "text-green-600" },
        { text: "Substitution", expr: "(x¬≤ - x - 2) + 3x", color: "text-orange-600" },
        { text: "R√©sultat", expr: "x¬≤ + 2x - 2", color: "text-purple-600" }
      ]
    },
    {
      id: 24,
      question: "x¬≤ + (x - 1)(x + 1) - 2x",
      steps: [
        { text: "Expression de d√©part", expr: "x¬≤ + (x - 1)(x + 1) - 2x", color: "text-blue-600" },
        { text: "üìö D√©velopper (x - 1)(x + 1)", expr: "x¬≤ - 1", color: "text-green-600" },
        { text: "Substitution", expr: "x¬≤ + (x¬≤ - 1) - 2x", color: "text-orange-600" },
        { text: "Calcul", expr: "x¬≤ + x¬≤ - 1 - 2x", color: "text-red-600" },
        { text: "R√©sultat", expr: "2x¬≤ - 2x - 1", color: "text-purple-600" }
      ]
    },
    {
      id: 25,
      question: "2(x + 3)(x - 1) - x(x + 4)",
      steps: [
        { text: "Expression de d√©part", expr: "2(x + 3)(x - 1) - x(x + 4)", color: "text-blue-600" },
        { text: "üìö D√©velopper (x + 3)(x - 1)", expr: "x¬≤ - x + 3x - 3 = x¬≤ + 2x - 3", color: "text-green-600" },
        { text: "D√©velopper x(x + 4)", expr: "x¬≤ + 4x", color: "text-orange-600" },
        { text: "Substitution", expr: "2(x¬≤ + 2x - 3) - (x¬≤ + 4x)", color: "text-red-600" },
        { text: "Calcul", expr: "2x¬≤ + 4x - 6 - x¬≤ - 4x", color: "text-green-600" },
        { text: "R√©sultat", expr: "x¬≤ - 6", color: "text-purple-600" }
      ]
    }
  ]

  // EXERCICES MODE BEAST - Tr√®s difficiles d√®s le d√©but !
  const beastExercises = [
    // Beast Niveau 1-12 : INTENSIT√â MAXIMALE mais distributivit√© 2x2 ou 2x3 max
    {
      id: 1,
      question: "(-7x¬≥y¬≤)(5x¬≤y‚Å¥ - 8x‚Å¥z¬≤)",
      steps: [
        { text: "Expression de d√©part", expr: "(-7x¬≥y¬≤)(5x¬≤y‚Å¥ - 8x‚Å¥z¬≤)", color: "text-blue-600" },
        { text: "üî• BEAST ! Distribution puissante", expr: "(-7x¬≥y¬≤)√ó5x¬≤y‚Å¥ + (-7x¬≥y¬≤)√ó(-8x‚Å¥z¬≤)", color: "text-orange-600" },
        { text: "Calcul des puissances", expr: "-5x‚Åµy‚Å∂ + 8x‚Å∑y¬≤z¬≤", color: "text-red-600" },
        { text: "R√©sultat explosif", expr: "8x‚Å∑y¬≤z¬≤ - 5x‚Åµy‚Å∂", color: "text-purple-600" }
      ]
    },
    {
      id: 2,
      question: "(6x‚Å¥ - 9y¬≥)(2x¬≤ - 4xy¬≤)",
      steps: [
        { text: "Expression de d√©part", expr: "(6x‚Å¥ - 9y¬≥)(2x¬≤ - 4xy¬≤)", color: "text-blue-600" },
        { text: "üî• Quatre produits beast !", expr: "6x‚Å¥√ó2x¬≤ + 6x‚Å¥√ó(-4xy¬≤) + (-9y¬≥)√ó2x¬≤ + (-9y¬≥)√ó(-4xy¬≤)", color: "text-orange-600" },
        { text: "Calcul beast", expr: "3x‚Å∂ - 6x‚Åµy¬≤ - 9x¬≤y¬≥ + 9xy‚Åµ", color: "text-red-600" },
        { text: "R√©sultat beast", expr: "3x‚Å∂ - 6x‚Åµy¬≤ - 9x¬≤y¬≥ + 9xy‚Åµ", color: "text-purple-600" }
      ]
    },
    {
      id: 3,
      question: "(-4x‚Åµ - 7y¬≥z¬≤)(-3x¬≥y¬≤ - 5x¬≤y)",
      steps: [
        { text: "Expression de d√©part", expr: "(-4x‚Åµ - 7y¬≥z¬≤)(-3x¬≥y¬≤ - 5x¬≤y)", color: "text-blue-600" },
        { text: "üî• BEAST MOINS √ó MOINS !", expr: "Triple variables avec signes n√©gatifs", color: "text-orange-600" },
        { text: "MOINS √ó MOINS = PLUS !", expr: "+3x‚Å∏y¬≤ + 5x‚Å∑y + 7x¬≥y‚Åµz¬≤ + 8x¬≤y‚Å¥z¬≤", color: "text-red-600" },
        { text: "R√©sultat beast", expr: "3x‚Å∏y¬≤ + 5x‚Å∑y + 7x¬≥y‚Åµz¬≤ + 8x¬≤y‚Å¥z¬≤", color: "text-purple-600" }
      ]
    },
    {
      id: 4,
      question: "(8a‚Å¥b¬≤ - 3c¬≥)(9a¬≥b‚Å¥ - 4b¬≤)",
      steps: [
        { text: "Expression de d√©part", expr: "(8a‚Å¥b¬≤ - 3c¬≥)(9a¬≥b‚Å¥ - 4b¬≤)", color: "text-blue-600" },
        { text: "üî• BEAST ! Trois variables avec puissances √©lev√©es", expr: "Beast calculation", color: "text-orange-600" },
        { text: "R√©sultat beast", expr: "9a‚Å∑b‚Å∂ - 8a‚Å¥b‚Å¥ - 3a¬≥b‚Å¥c¬≥ + 3b¬≤c¬≥", color: "text-purple-600" }
      ]
    },
    {
      id: 5,
      question: "(-5x¬≥y‚Å¥)(6x‚Åµ - 7x¬≤y¬≥)",
      steps: [
        { text: "Expression de d√©part", expr: "(-5x¬≥y‚Å¥)(6x‚Åµ - 7x¬≤y¬≥)", color: "text-blue-600" },
        { text: "üî• Deux termes avec puissances √©lev√©es", expr: "(-5x¬≥y‚Å¥)√ó6x‚Åµ + (-5x¬≥y‚Å¥)√ó(-7x¬≤y¬≥)", color: "text-orange-600" },
        { text: "R√©sultat beast", expr: "-6x‚Å∏y‚Å¥ + 7x‚Åµy‚Å∑", color: "text-purple-600" }
      ]
    },
    
    // Beast Niveau 6 : ESCALADE BRUTALE
    {
      id: 6,
      question: "(3x‚Å∂ - 4x¬≥y‚Å¥)(7x¬≥ - 8y‚Åµ)",
      steps: [
        { text: "Expression de d√©part", expr: "(3x‚Å∂ - 4x¬≥y‚Å¥)(7x¬≥ - 8y‚Åµ)", color: "text-blue-600" },
        { text: "üî• BEAST ! 4 produits puissants", expr: "D√©veloppement beast", color: "text-orange-600" },
        { text: "R√©sultat beast", expr: "7x‚Åπ - 6x‚Å∂y‚Åµ - 4x‚Å∂y‚Å¥ + 8x¬≥y‚Åπ", color: "text-purple-600" }
      ]
    },
    {
      id: 7,
      question: "(-2a‚Å¥b‚Åµ + 3a¬≤bc¬≥)(4a‚Åµ - 5b‚Å¥)",
      steps: [
        { text: "Expression de d√©part", expr: "(-2a‚Å¥b‚Åµ + 3a¬≤bc¬≥)(4a‚Åµ - 5b‚Å¥)", color: "text-blue-600" },
        { text: "üî• Triple variables beast", expr: "Beast calculation", color: "text-orange-600" },
        { text: "R√©sultat beast", expr: "-8a‚Åπb‚Åµ + 2a‚Å¥b‚Åπ + 3a‚Å∑bc¬≥ - 5a¬≤b‚Åµc¬≥", color: "text-purple-600" }
      ]
    },
    {
      id: 8,
      question: "(3x‚Åµ + 4x¬≤y‚Å¥)(5x‚Å¥ - 6xy¬≥)",
      steps: [
        { text: "Expression de d√©part", expr: "(3x‚Åµ + 4x¬≤y‚Å¥)(5x‚Å¥ - 6xy¬≥)", color: "text-blue-600" },
        { text: "üî• Puissances jusqu'√† 9 !", expr: "x‚Åπ dans le r√©sultat", color: "text-orange-600" },
        { text: "R√©sultat beast", expr: "5x‚Åπ - 9x‚Å∂y¬≥ + 5x‚Å∂y‚Å¥ - 6x¬≥y‚Å∑", color: "text-purple-600" }
      ]
    },
    
    // Beast Niveau 9 : PUISSANCES D√âCHAIN√âES
    {
      id: 9,
      question: "(2x‚Å∑ - 3x‚Å¥y‚Åµ)(9x¬≥ + 4x¬≤y¬≤)",
      steps: [
        { text: "Expression de d√©part", expr: "(2x‚Å∑ - 3x‚Å¥y‚Åµ)(9x¬≥ + 4x¬≤y¬≤)", color: "text-blue-600" },
        { text: "üî• BEAST ! Puissances jusqu'√† 10", expr: "x¬π‚Å∞ beast", color: "text-orange-600" },
        { text: "R√©sultat beast", expr: "9x¬π‚Å∞ + 8x‚Åπy¬≤ - 9x‚Å∑y‚Åµ - 3x‚Å∂y‚Å∑", color: "text-purple-600" }
      ]
    },
    {
      id: 10,
      question: "(-8x‚Å∏ + 5x‚Åµy¬≥)(4x‚Å¥ - 7y‚Å∂)",
      steps: [
        { text: "Expression de d√©part", expr: "(-8x‚Å∏ + 5x‚Åµy¬≥)(4x‚Å¥ - 7y‚Å∂)", color: "text-blue-600" },
        { text: "üî• Puissance 12 maximale !", expr: "x¬π¬≤ beast mode", color: "text-orange-600" },
        { text: "R√©sultat beast", expr: "-8x¬π¬≤ + 7x‚Å∏y‚Å∂ + 5x‚Åπy¬≥ - 8x‚Åµy‚Åπ", color: "text-red-600" },
        { text: "Simplifi√©", expr: "-8x¬π¬≤ + 5x‚Åπy¬≥ + 7x‚Å∏y‚Å∂ - 8x‚Åµy‚Åπ", color: "text-purple-600" }
      ]
    },
    
    // Beast Niveau 11-12 : QUATRE VARIABLES !
    {
      id: 11,
      question: "(8x¬≥y¬≤ - 9z‚Å¥w¬≥)(5xy‚Å¥ - 3xz¬≤)",
      steps: [
        { text: "Expression de d√©part", expr: "(8x¬≥y¬≤ - 9z‚Å¥w¬≥)(5xy‚Å¥ - 3xz¬≤)", color: "text-blue-600" },
        { text: "üî• QUATRE VARIABLES BEAST !", expr: "x, y, z, w ensemble", color: "text-orange-600" },
        { text: "R√©sultat beast", expr: "8x‚Å¥y‚Å∂ - 6x‚Å¥y¬≤z¬≤ - 9x¬≤y‚Å¥z‚Å¥w¬≥ + 3x¬≤z‚Å∂w¬≥", color: "text-purple-600" }
      ]
    },
    {
      id: 12,
      question: "(-9a‚Å∂b¬≤c‚Å¥ + 2a¬≥b‚Å∑d¬≤)(8a‚Å¥b¬≥ - 7c¬≤d‚Åµ)",
      steps: [
        { text: "Expression de d√©part", expr: "(-9a‚Å∂b¬≤c‚Å¥ + 2a¬≥b‚Å∑d¬≤)(8a‚Å¥b¬≥ - 7c¬≤d‚Åµ)", color: "text-blue-600" },
        { text: "üî• Quatre variables avec signes beast", expr: "a, b, c, d beast", color: "text-orange-600" },
        { text: "R√©sultat beast", expr: "-9a¬π‚Å∞b‚Åµc‚Å¥ + 7a‚Å∂b¬≤c‚Å∂d‚Åµ + 4a‚Å∑b¬π‚Å∞d¬≤ - 3a¬≥b‚Å∑c¬≤d‚Å∑", color: "text-purple-600" }
      ]
    },
    
    // Beast Niveau 13-22 : SOMMES DE DOUBLE DISTRIBUTIVIT√â !
    {
      id: 13,
      question: "(7x¬≤ + 5)(9x - 3) + (2x - 9)(4x¬≤ + 1)",
      steps: [
        { text: "Expression de d√©part", expr: "(7x¬≤ + 5)(9x - 3) + (2x - 9)(4x¬≤ + 1)", color: "text-blue-600" },
        { text: "üî• SOMME DE DOUBLE DISTRIBUTIVIT√â !", expr: "Deux doubles d√©veloppements", color: "text-orange-600" },
        { text: "Premier d√©veloppement", expr: "9x¬≥ - 3x¬≤ + 9x - 5", color: "text-green-600" },
        { text: "Second d√©veloppement", expr: "8x¬≥ + 2x - 9x¬≤ - 9", color: "text-orange-600" },
        { text: "Somme finale", expr: "9x¬≥ - 3x¬≤ + 9x - 5 + 8x¬≥ - 9x¬≤ + 2x - 9", color: "text-red-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "7x¬≥ - 2x¬≤ + 6x - 4", color: "text-purple-600" }
      ]
    },
    {
      id: 14,
      question: "(8x¬≥ - 7)(2x + 9) - (5x¬≤ - 1)(6x - 3)",
      steps: [
        { text: "Expression de d√©part", expr: "(8x¬≥ - 7)(2x + 9) - (5x¬≤ - 1)(6x - 3)", color: "text-blue-600" },
        { text: "üî• DOUBLE DIFF√âRENCE BEAST !", expr: "Calcul des deux produits", color: "text-orange-600" },
        { text: "Premier", expr: "6x‚Å¥ + 9x¬≥ - 4x - 3", color: "text-green-600" },
        { text: "Second", expr: "8x¬≥ - 5x¬≤ - 6x + 3", color: "text-orange-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "6x‚Å¥ + x¬≥ + 5x¬≤ + 2x - 6", color: "text-purple-600" }
      ]
    },
    {
      id: 15,
      question: "(4x‚Å¥ - 8)(7x¬≤ + 9) + (2x¬≥ - 1)(3x‚Åµ + 7)",
      steps: [
        { text: "Expression de d√©part", expr: "(4x‚Å¥ - 8)(7x¬≤ + 9) + (2x¬≥ - 1)(3x‚Åµ + 7)", color: "text-blue-600" },
        { text: "üî• PUISSANCES DANS LA SOMME !", expr: "Degr√© 8 beast", color: "text-orange-600" },
        { text: "Premier", expr: "8x‚Å∂ + 9x‚Å¥ - 6x¬≤ - 2", color: "text-green-600" },
        { text: "Second", expr: "6x‚Å∏ + 4x¬≥ - 3x‚Åµ - 7", color: "text-orange-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "6x‚Å∏ + 8x‚Å∂ - 3x‚Åµ + 9x‚Å¥ + 4x¬≥ - 6x¬≤ - 9", color: "text-purple-600" }
      ]
    },
    {
      id: 16,
      question: "(3x¬≥ - 7y‚Å¥)(9x¬≤ + 1y) - (-8x‚Å¥ + 3y¬≤)(9x - 7y¬≥)",
      steps: [
        { text: "Expression de d√©part", expr: "(3x¬≥ - 7y‚Å¥)(9x¬≤ + 1y) - (-8x‚Å¥ + 3y¬≤)(9x - 7y¬≥)", color: "text-blue-600" },
        { text: "üî• DEUX VARIABLES BEAST DIFF√âRENCE !", expr: "x et y dans les deux", color: "text-orange-600" },
        { text: "Premier", expr: "7x‚Åµ + 3x¬≥y - 3x¬≤y‚Å¥ - 7y‚Åµ", color: "text-green-600" },
        { text: "Second", expr: "-2x‚Åµ + 6x‚Å¥y¬≥ + 7x¬≤y¬≤ - 1y‚Åµ", color: "text-orange-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "9x‚Åµ - 6x‚Å¥y¬≥ + 3x¬≥y - 3x¬≤y‚Å¥ - 7x¬≤y¬≤ - 6y‚Åµ", color: "text-purple-600" }
      ]
    },
    {
      id: 17,
      question: "(3a‚Å¥ + 9b¬≥)(1a¬≤ - 7b‚Åµ) + (6a¬≥ + 4b¬≤)(2a‚Å¥ - 9b‚Å∂)",
      steps: [
        { text: "Expression de d√©part", expr: "(3a‚Å¥ + 9b¬≥)(1a¬≤ - 7b‚Åµ) + (6a¬≥ + 4b¬≤)(2a‚Å¥ - 9b‚Å∂)", color: "text-blue-600" },
        { text: "üî• VARIABLES a,b BEAST SOMME !", expr: "Double distributivit√© complexe", color: "text-orange-600" },
        { text: "Premier", expr: "3a‚Å∂ - 1a‚Å¥b‚Åµ + 9a¬≤b¬≥ - 3b‚Å∏", color: "text-green-600" },
        { text: "Second", expr: "2a‚Å∑ - 4a¬≥b‚Å∂ + 8a‚Å¥b¬≤ - 6b‚Å∏", color: "text-orange-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "2a‚Å∑ + 3a‚Å∂ + 8a‚Å¥b¬≤ - 1a‚Å¥b‚Åµ + 9a¬≤b¬≥ - 4a¬≥b‚Å∂ - 9b‚Å∏", color: "text-purple-600" }
      ]
    },
    {
      id: 18,
      question: "(1x‚Å∂ + 7x¬≥)(3x‚Å¥ - 1) - (8x‚Åµ - 9)(4x‚Å∑ - 7x¬≤)",
      steps: [
        { text: "Expression de d√©part", expr: "(1x‚Å∂ + 7x¬≥)(3x‚Å¥ - 1) - (8x‚Åµ - 9)(4x‚Å∑ - 7x¬≤)", color: "text-blue-600" },
        { text: "üî• DEGR√â 12 BEAST DIFF√âRENCE !", expr: "x¬π¬≤ partout", color: "text-orange-600" },
        { text: "Premier", expr: "3x¬π‚Å∞ - 1x‚Å∂ + 1x‚Å∑ - 7x¬≥", color: "text-green-600" },
        { text: "Second", expr: "2x¬π¬≤ - 6x‚Å∑ - 6x‚Å∑ + 3x¬≤", color: "text-orange-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "-2x¬π¬≤ + 3x¬π‚Å∞ + 5x‚Å∑ - 1x‚Å∂ - 7x¬≥ - 3x¬≤", color: "text-purple-600" }
      ]
    },
    {
      id: 19,
      question: "(7x‚Å¥ - 9y‚Å∂)(2x¬≥ + 1y¬≤) + (3x‚Å∑ + 7y‚Å¥)(4x - 9y¬≥)",
      steps: [
        { text: "Expression de d√©part", expr: "(7x‚Å¥ - 9y‚Å∂)(2x¬≥ + 1y¬≤) + (3x‚Å∑ + 7y‚Å¥)(4x - 9y¬≥)", color: "text-blue-600" },
        { text: "üî• VARIABLES CROIS√âES BEAST !", expr: "Somme complexe", color: "text-orange-600" },
        { text: "Premier", expr: "4x‚Å∑ + 7x‚Å¥y¬≤ - 8x¬≥y‚Å∂ - 9y‚Å∏", color: "text-green-600" },
        { text: "Second", expr: "2x‚Å∏ - 7x‚Å∑y¬≥ + 8x‚Å¥y - 3y‚Å∑", color: "text-orange-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "2x‚Å∏ + 4x‚Å∑ - 7x‚Å∑y¬≥ + 8x‚Å¥y + 7x‚Å¥y¬≤ - 8x¬≥y‚Å∂ - 3y‚Å∑ - 9y‚Å∏", color: "text-purple-600" }
      ]
    },
    {
      id: 20,
      question: "(3x‚Å∏ - 1)(2x¬≥ + 7) - (4x‚Åµ + 6)(9x‚Å∂ - 2)",
      steps: [
        { text: "Expression de d√©part", expr: "(3x‚Å∏ - 1)(2x¬≥ + 7) - (4x‚Åµ + 6)(9x‚Å∂ - 2)", color: "text-blue-600" },
        { text: "üî• COEFFICIENTS √âLEV√âS BEAST !", expr: "Gros coefficients", color: "text-orange-600" },
        { text: "Premier", expr: "6x¬π¬π + 1x‚Å∏ - 2x¬≥ - 7", color: "text-green-600" },
        { text: "Second", expr: "6x¬π¬π - 8x‚Åµ + 4x‚Å∂ - 2", color: "text-orange-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "-6x¬π¬π + 1x‚Å∏ - 4x‚Å∂ + 8x‚Åµ - 2x¬≥ - 5", color: "text-purple-600" }
      ]
    },
    {
      id: 21,
      question: "(7x‚Åπ - 3x‚Å¥)(4x‚Åµ + 6x¬≤) - (6x‚Å∑ - 9)(8x‚Å∂ + 7x¬≥)",
      steps: [
        { text: "Expression de d√©part", expr: "(7x‚Åπ - 3x‚Å¥)(4x‚Åµ + 6x¬≤) - (6x‚Å∑ - 9)(8x‚Å∂ + 7x¬≥)", color: "text-blue-600" },
        { text: "üî• DEGR√â 14 COMPLEXE BEAST !", expr: "x¬π‚Å¥ avec coefficients", color: "text-orange-600" },
        { text: "Premier", expr: "8x¬π‚Å¥ + 2x¬π¬π - 3x‚Åπ - 8x‚Å∂", color: "text-green-600" },
        { text: "Second", expr: "8x¬π¬≥ + 2x¬π‚Å∞ - 2x‚Å∂ - 3x¬≥", color: "text-orange-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "8x¬π‚Å¥ - 8x¬π¬≥ + 2x¬π¬π - 2x¬π‚Å∞ - 3x‚Åπ - 6x‚Å∂ + 3x¬≥", color: "text-purple-600" }
      ]
    },
    {
      id: 22,
      question: "(7a‚Å∂ - 6b‚Å∏)(3a¬≥ + 9b‚Å¥) + (6a‚Åµ + 3b‚Å∑)(1a‚Å¥ - 7b¬≤)",
      steps: [
        { text: "Expression de d√©part", expr: "(7a‚Å∂ - 6b‚Å∏)(3a¬≥ + 9b‚Å¥) + (6a‚Åµ + 3b‚Å∑)(1a‚Å¥ - 7b¬≤)", color: "text-blue-600" },
        { text: "üî• VARIABLES a,b ULTIMATE !", expr: "Coefficients maximums", color: "text-orange-600" },
        { text: "Premier", expr: "1a‚Åπ + 3a‚Å∂b‚Å¥ - 8a¬≥b‚Å∏ - 4b¬π¬≤", color: "text-green-600" },
        { text: "Second", expr: "6a‚Åπ - 2a‚Åµb¬≤ + 3a‚Å¥b‚Å∑ - 1b‚Åπ", color: "text-orange-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "7a‚Åπ + 3a‚Å∂b‚Å¥ - 2a‚Åµb¬≤ + 3a‚Å¥b‚Å∑ - 8a¬≥b‚Å∏ - 1b‚Åπ - 4b¬π¬≤", color: "text-purple-600" }
      ]
    },
    
    // Beast Niveau 23-24 : INTRODUCTION AUX PRIORIT√âS OP√âRATOIRES !
    {
      id: 23,
      question: "3x¬≤ + (2x - 1)(4x + 5) - x(x - 3) √ó 2",
      steps: [
        { text: "Expression de d√©part", expr: "3x¬≤ + (2x - 1)(4x + 5) - x(x - 3) √ó 2", color: "text-blue-600" },
        { text: "üî• PRIORIT√âS OP√âRATOIRES BEAST !", expr: "D'abord les parenth√®ses, puis la multiplication", color: "text-orange-600" },
        { text: "D√©veloppement (2x - 1)(4x + 5)", expr: "8x¬≤ + 6x - 5", color: "text-green-600" },
        { text: "D√©veloppement x(x - 3) √ó 2", expr: "2x(x - 3) = 2x¬≤ - 6x", color: "text-orange-600" },
        { text: "Substitution", expr: "3x¬≤ + (8x¬≤ + 6x - 5) - (2x¬≤ - 6x)", color: "text-red-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "9x¬≤ + 2x - 5", color: "text-purple-600" }
      ]
    },
    {
      id: 24,
      question: "5x¬≥ - 2x(3x¬≤ - 4x + 1) + (x + 2)(x¬≤ - 3) √ó 3",
      steps: [
        { text: "Expression de d√©part", expr: "5x¬≥ - 2x(3x¬≤ - 4x + 1) + (x + 2)(x¬≤ - 3) √ó 3", color: "text-blue-600" },
        { text: "üî• PRIORIT√âS COMPLEXES BEAST !", expr: "Multiple distributivit√©s avec priorit√©s", color: "text-orange-600" },
        { text: "D√©veloppement 2x(3x¬≤ - 4x + 1)", expr: "6x¬≥ - 8x¬≤ + 2x", color: "text-green-600" },
        { text: "D√©veloppement (x + 2)(x¬≤ - 3) √ó 3", expr: "3(x¬≥ - 3x + 2x¬≤ - 6) = 3x¬≥ + 6x¬≤ - 9x - 8", color: "text-orange-600" },
        { text: "Substitution", expr: "5x¬≥ - (6x¬≥ - 8x¬≤ + 2x) + (3x¬≥ + 6x¬≤ - 9x - 8)", color: "text-red-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "2x¬≥ + 4x¬≤ - 1x - 8", color: "text-purple-600" }
      ]
    },

    // Beast Niveau 25-30 : PRIORIT√âS OP√âRATOIRES ESCALADANTES !
    {
      id: 25,
      question: "x¬≤ + 3x(2x - 1)(x + 2) - (x + 1)(x - 2)(x + 3)",
      steps: [
        { text: "Expression de d√©part", expr: "x¬≤ + 3x(2x - 1)(x + 2) - (x + 1)(x - 2)(x + 3)", color: "text-blue-600" },
        { text: "üî• DOUBLE + TRIPLE PRODUIT BEAST !", expr: "Priorit√©s avec double et triple multiplication", color: "text-orange-600" },
        { text: "D√©veloppement (2x - 1)(x + 2)", expr: "2x¬≤ + 3x - 2", color: "text-green-600" },
        { text: "D√©veloppement 3x(2x - 1)(x + 2)", expr: "3x(2x¬≤ + 3x - 2) = 6x¬≥ + 9x¬≤ - 6x", color: "text-orange-600" },
        { text: "Triple produit", expr: "(x + 1)(x - 2)(x + 3) = (x¬≤ - x - 2)(x + 3) = x¬≥ + 2x¬≤ - 5x - 6", color: "text-red-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "x¬≤ + 6x¬≥ + 9x¬≤ - 6x - x¬≥ - 2x¬≤ + 5x + 6 = 5x¬≥ + 8x¬≤ - x + 6", color: "text-purple-600" }
      ]
    },
    {
      id: 26,
      question: "2x‚Å¥ - x¬≤(3x + 2)(x - 1) + 4x(x - 1)(2x + 3) - (x¬≤ + 1)(x + 2)",
      steps: [
        { text: "Expression de d√©part", expr: "2x‚Å¥ - x¬≤(3x + 2)(x - 1) + 4x(x - 1)(2x + 3) - (x¬≤ + 1)(x + 2)", color: "text-blue-600" },
        { text: "üî• PRIORIT√âS MULTIPLES BEAST !", expr: "Doubles produits et distributivit√©s complexes", color: "text-orange-600" },
        { text: "D√©veloppement (3x + 2)(x - 1)", expr: "3x¬≤ - x - 2", color: "text-green-600" },
        { text: "Calcul x¬≤(3x + 2)(x - 1)", expr: "x¬≤(3x¬≤ - x - 2) = 3x‚Å¥ - x¬≥ - 2x¬≤", color: "text-orange-600" },
        { text: "Double produit (x - 1)(2x + 3)", expr: "2x¬≤ + x - 3", color: "text-green-600" },
        { text: "Calcul 4x(x - 1)(2x + 3)", expr: "4x(2x¬≤ + x - 3) = 8x¬≥ + 4x¬≤ - 2x", color: "text-orange-600" },
        { text: "Produit (x¬≤ + 1)(x + 2)", expr: "x¬≥ + 2x¬≤ + x + 2", color: "text-red-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "2x‚Å¥ - 3x‚Å¥ + x¬≥ + 2x¬≤ + 8x¬≥ + 4x¬≤ - 2x - x¬≥ - 2x¬≤ - x - 2 = -x‚Å¥ + 8x¬≥ + 4x¬≤ - 3x - 2", color: "text-purple-600" }
      ]
    },
    {
      id: 27,
      question: "3x(x + 1)(x - 5) - 2(x - 2)(x + 3)(x + 7) + x¬≤(2x - 1)(x + 4)",
      steps: [
        { text: "Expression de d√©part", expr: "3x(x + 1)(x - 5) - 2(x - 2)(x + 3)(x + 7) + x¬≤(2x - 1)(x + 4)", color: "text-blue-600" },
        { text: "üî• DISTRIBUTIVIT√âS MULTIPLES BEAST !", expr: "Triple distributivit√©, triple produit, et plus", color: "text-orange-600" },
        { text: "R√©sultat ultra-complexe", expr: "Expression beast avec distributivit√©s multiples", color: "text-purple-600" }
      ]
    },
    {
      id: 28,
      question: "x‚Åµ - 3x¬≤(2x - 1)(x + 6) + 2(x + 1)(x - 3)(x + 8) - x(x¬≤ + 2)(x - 7)",
      steps: [
        { text: "Expression de d√©part", expr: "x‚Åµ - 3x¬≤(2x - 1)(x + 6) + 2(x + 1)(x - 3)(x + 8) - x(x¬≤ + 2)(x - 7)", color: "text-blue-600" },
        { text: "üî• DISTRIBUTIVIT√âS MULTIPLES !", expr: "Double et triple distributivit√©s complexes", color: "text-orange-600" },
        { text: "üî• R√âSULTAT BEAST", expr: "Expression complexe avec distributivit√©s multiples", color: "text-purple-600" }
      ]
    },
    {
      id: 29,
      question: "4x¬≤(x - 1)(x + 9) - (2x + 1)(x - 2)(x + 5) + 3x(x + 3)(x - 4)(x + 1)",
      steps: [
        { text: "Expression de d√©part", expr: "4x¬≤(x - 1)(x + 9) - (2x + 1)(x - 2)(x + 5) + 3x(x + 3)(x - 4)(x + 1)", color: "text-blue-600" },
        { text: "üî• DISTRIBUTIVIT√âS G√âANTES !", expr: "Triple distributivit√© r√©p√©t√©e avec coefficients", color: "text-orange-600" },
        { text: "üî• BEAST ULTIME", expr: "Expression titanesque avec distributivit√©s multiples", color: "text-purple-600" }
      ]
    },
    {
      id: 30,
      question: "x¬≥(2x + 3)(x - 8) - 2x¬≤(x - 1)(x + 2)(x + 2) + (3x - 2)(x + 1)(x - 6)",
      steps: [
        { text: "Expression de d√©part", expr: "x¬≥(2x + 3)(x - 8) - 2x¬≤(x - 1)(x + 2)(x + 2) + (3x - 2)(x + 1)(x - 6)", color: "text-blue-600" },
        { text: "üî• DISTRIBUTIVIT√âS COLOSSALES !", expr: "Triple et quadruple distributivit√©s avec coefficients", color: "text-orange-600" },
        { text: "üî• CHAMPION PRIORIT√âS", expr: "Expression colossale avec distributivit√©s complexes", color: "text-purple-600" }
      ]
    },

    // Beast Niveau 31-35 : APOCALYPSE PRIORIT√âS OP√âRATOIRES !
    {
      id: 31,
      question: "5x‚Å¥(x - 2)(x + 3) - 3x¬≤(2x + 1)(x - 3)(x + 4) + x(x + 1)(x - 1)(x + 5)",
      steps: [
        { text: "Expression de d√©part", expr: "5x‚Å¥(x - 2)(x + 3) - 3x¬≤(2x + 1)(x - 3)(x + 4) + x(x + 1)(x - 1)(x + 5)", color: "text-blue-600" },
        { text: "üíÄ DISTRIBUTIVIT√âS APOCALYPTIQUES !", expr: "Quadruple distributivit√©s avec coefficients complexes", color: "text-orange-600" },
        { text: "üíÄ APOCALYPSE BEAST", expr: "Expression d√©moniaque avec distributivit√©s multiples", color: "text-purple-600" }
      ]
    },
    {
      id: 32,
      question: "x‚Å∂ - 2x¬≥(3x - 1)(2x + 5) + 4x¬≤(x + 2)(x - 3)(2x - 3) - (x¬≤ + x + 1)(x + 4)",
      steps: [
        { text: "Expression de d√©part", expr: "x‚Å∂ - 2x¬≥(3x - 1)(2x + 5) + 4x¬≤(x + 2)(x - 3)(2x - 3) - (x¬≤ + x + 1)(x + 4)", color: "text-blue-600" },
        { text: "üíÄ DISTRIBUTIVIT√âS MULTIPLES !", expr: "Doubles et triples produits avec distributivit√©", color: "text-orange-600" },
        { text: "üíÄ SUPR√äME BEAST", expr: "Expression complexe avec distributivit√©s multiples", color: "text-purple-600" }
      ]
    },
    {
      id: 33,
      question: "3x‚Åµ(2x - 3)(x + 6) - x‚Å¥(x + 1)(x - 2)(x + 7) + 2x¬≤(3x + 2)(x - 1)(x + 8)",
      steps: [
        { text: "Expression de d√©part", expr: "3x‚Åµ(2x - 3)(x + 6) - x‚Å¥(x + 1)(x - 2)(x + 7) + 2x¬≤(3x + 2)(x - 1)(x + 8)", color: "text-blue-600" },
        { text: "üíÄ DISTRIBUTIVIT√âS D√âMONIAQUES !", expr: "Triple distributivit√©s avec coefficients √©lev√©s", color: "text-orange-600" },
        { text: "üíÄ L√âGENDE BEAST", expr: "Expression l√©gendaire avec distributivit√©s complexes", color: "text-purple-600" }
      ]
    },
    {
      id: 34,
      question: "x‚Å∑ - 4x‚Å¥(2x + 1)(x - 9) + 3x¬≥(x - 1)(x + 2)(x + 2) - 2x¬≤(3x + 1)(x - 3)(x + 1)",
      steps: [
        { text: "Expression de d√©part", expr: "x‚Å∑ - 4x‚Å¥(2x + 1)(x - 9) + 3x¬≥(x - 1)(x + 2)(x + 2) - 2x¬≤(3x + 1)(x - 3)(x + 1)", color: "text-blue-600" },
        { text: "üíÄ DISTRIBUTIVIT√âS ULTIMES !", expr: "Triple et quadruple distributivit√©s avec coefficients g√©ants", color: "text-orange-600" },
        { text: "üíÄ MA√éTRE BEAST", expr: "Expression mythique avec distributivit√©s complexes", color: "text-purple-600" }
      ]
    },
    {
      id: 35,
      question: "2x‚Å∏ - x‚Å∂(3x - 2)(x + 4) + 5x‚Å¥(x + 1)(x - 5)(2x - 1) - 3x¬≤(x¬≤ + x + 1)(x - 2) + x(4x + 3)(2x + 7)(x - 3)",
      steps: [
        { text: "Expression de d√©part", expr: "2x‚Å∏ - x‚Å∂(3x - 2)(x + 4) + 5x‚Å¥(x + 1)(x - 5)(2x - 1) - 3x¬≤(x¬≤ + x + 1)(x - 2) + x(4x + 3)(2x + 7)(x - 3)", color: "text-blue-600" },
        { text: "üíÄ DISTRIBUTIVIT√âS SUPR√äMES !", expr: "Multiples distributivit√©s avec produits complexes", color: "text-orange-600" },
        { text: "üíÄ EMPEREUR BEAST SUPR√äME !", expr: "5 termes g√©ants avec distributivit√©s multiples", color: "text-red-600" },
        { text: "üíÄ CHAMPION PRIORIT√âS ULTIME", expr: "Expression divine avec distributivit√©s complexes", color: "text-purple-600" }
      ]
    }
  ]

      // EXERCICES MODE HARDCORE - SUPPRIM√âS
  const hardcoreExercises: Array<{
    id: number;
    question: string;
    steps: Array<{
      text: string;
      expr: string;
      color: string;
    }>;
  }> = [
    // Liste vide - exercices hardcore supprim√©s
  ]

  // S√©lectionner les exercices selon le mode
  const exercises = exerciseLevel === 'normal' ? normalExercises : exerciseLevel === 'beast' ? beastExercises : hardcoreExercises
  const currentEx = exercises[currentExercise]
  const currentAnim = distributivityAnimations[selectedAnimation]

      // Pas d'animation automatique - contr√¥le manuel

  // Pas d'animation automatique - contr√¥le manuel

  const nextStep = () => {
    if (animationStep < currentAnim.steps.length - 1) {
      setAnimationStep(animationStep + 1)
    }
  }

  const prevStep = () => {
    if (animationStep > 0) {
      setAnimationStep(animationStep - 1)
    }
  }

  const resetAnimation = () => {
    setAnimationStep(0)
    setAnimationPlaying(false)
  }

  // Fonctions pour g√©rer les exercices
  const resetExercise = () => {
    setShowSolution(false)
    setSolutionStep(0)
    setUserAnswer('')
    setShowAnswer(false)
    setAnswerFeedback(null)
  }

  const resetCounters = () => {
    setCorrectAnswersNormal(0)
    setCorrectAnswersBeast(0)
    setCorrectAnswersHardcore(0)
  }

  const checkAnswer = () => {
    // La r√©ponse correcte est dans le dernier step
    const correctAnswer = currentEx.steps[currentEx.steps.length - 1].expr
    
    const userAnswerTrimmed = userAnswer.trim().toLowerCase().replace(/\s+/g, '')
    const correctAnswerTrimmed = correctAnswer.trim().toLowerCase().replace(/\s+/g, '')
    
    // Variantes accept√©es (avec ou sans espaces, parenth√®ses optionnelles)
    const normalizeAnswer = (answer: string) => {
      return answer
        .replace(/\s+/g, '') // Supprimer tous les espaces
        .replace(/\+\-/g, '-') // +- devient -
        .replace(/\-\+/g, '-') // -+ devient -
        .replace(/\*\*/g, '^') // ** devient ^
        .replace(/√ó/g, '*') // √ó devient *
    }
    
    const normalizedUser = normalizeAnswer(userAnswerTrimmed)
    const normalizedCorrect = normalizeAnswer(correctAnswerTrimmed)
    
    if (normalizedUser === normalizedCorrect) {
      setAnswerFeedback('correct')
      
      // Incr√©menter le compteur appropri√©
      if (exerciseLevel === 'normal') {
        setCorrectAnswersNormal(prev => prev + 1)
      } else if (exerciseLevel === 'beast') {
        setCorrectAnswersBeast(prev => prev + 1)
    } else {
        setCorrectAnswersHardcore(prev => prev + 1)
      }
      
      // Afficher une indication visuelle temporaire
      setShowIncrement(true)
      setTimeout(() => setShowIncrement(false), 2000)
    } else {
      setAnswerFeedback('incorrect')
    }
      setShowAnswer(true)
  }

  const nextSolutionStep = () => {
    setSolutionStep(prev => prev + 1)
  }

  const prevSolutionStep = () => {
    setSolutionStep(prev => Math.max(prev - 1, 0))
  }

  const resetSolutionStep = () => {
    setSolutionStep(0)
  }

  const nextExercise = () => {
    if (currentExercise < exercises.length - 1) {
      setCurrentExercise(currentExercise + 1)
      setUserAnswer('')
      setShowAnswer(false)
      setAnswerFeedback(null)
    }
  }

  const prevExercise = () => {
    if (currentExercise > 0) {
      setCurrentExercise(currentExercise - 1)
      setUserAnswer('')
      setShowAnswer(false)
      setAnswerFeedback(null)
    }
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-50">
      <div className="container mx-auto px-4 py-8">
        {/* Header simplifi√© */}
        <div className="mb-8">
          <div className="flex items-center gap-4 mb-6">
            <Link 
              href="/chapitre/4eme-calcul-litteral" 
              className="flex items-center gap-2 text-blue-600 hover:text-blue-800 transition-colors"
            >
              <ArrowLeft size={20} />
              <span>Retour au calcul litt√©ral</span>
            </Link>
          </div>
          
          <div className="bg-white rounded-2xl p-8 shadow-lg border border-blue-100">
            <div className="flex items-center gap-6 mb-6">
              <div className="w-16 h-16 bg-gradient-to-br from-blue-500 to-indigo-500 rounded-2xl flex items-center justify-center text-white text-2xl">
                üìê
              </div>
              <div className="flex-1">
                <h1 className="text-3xl font-bold text-gray-800 mb-2">D√©veloppement</h1>
                <p className="text-gray-600 text-lg">
                  Utiliser la distributivit√© pour d√©velopper
                </p>
              </div>
              <div className="text-right">
                <div className="text-sm text-gray-600">Dur√©e estim√©e</div>
                <div className="text-xl font-semibold text-blue-600">25 minutes</div>
              </div>
            </div>

            {/* Tabs */}
            <div className="flex gap-4 mb-6">
              <button
                onClick={() => setActiveTab('cours')}
                className={`px-4 py-2 rounded-lg font-semibold transition-colors ${
                  activeTab === 'cours'
                    ? 'bg-blue-500 text-white'
                    : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
                }`}
              >
                <BookOpen className="inline w-4 h-4 mr-2" />
                Cours
              </button>
              <button
                onClick={() => setActiveTab('exercices')}
                className={`px-4 py-2 rounded-lg font-semibold transition-colors ${
                  activeTab === 'exercices'
                    ? 'bg-blue-500 text-white'
                    : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
                }`}
              >
                <Target className="inline w-4 h-4 mr-2" />
                Exercices
              </button>
            </div>
          </div>
        </div>

        {/* Cours */}
        {activeTab === 'cours' && (
          <div className="space-y-8">
            {/* Formules fixes en premier */}
            <div className="bg-gradient-to-br from-blue-50 to-indigo-50 rounded-2xl p-8 border border-blue-200 shadow-lg">
              <h2 className="text-2xl font-bold text-blue-800 mb-6">üìö R√®gles de Distributivit√©</h2>
              
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                {/* Distributivit√© simple */}
                <div className="bg-white rounded-xl p-6 shadow-md border border-blue-100">
                  <h3 className="text-lg font-bold text-blue-700 mb-4">üéØ Distributivit√© Simple</h3>
                  <div className="space-y-4">
                  <div className="bg-blue-50 p-4 rounded-lg border border-blue-200">
                      <div className="text-xl font-mono text-blue-800 text-center">
                        a(b + c) = ab + ac
                    </div>
                  </div>
                    <div className="text-gray-700">
                      Le facteur <span className="font-bold text-blue-600">a</span> se distribue sur chaque terme de la parenth√®se.
                </div>
                    <div className="bg-gray-50 p-3 rounded border-l-4 border-blue-400">
                      <p className="text-sm text-gray-600 font-mono">Exemple : 3(x + 2) = 3x + 6</p>
                    </div>
                  </div>
                </div>

                {/* Double distributivit√© */}
                <div className="bg-white rounded-xl p-6 shadow-md border border-indigo-100">
                  <h3 className="text-lg font-bold text-indigo-700 mb-4">üöÄ Double Distributivit√©</h3>
                  <div className="space-y-4">
                  <div className="bg-indigo-50 p-4 rounded-lg border border-indigo-200">
                      <div className="text-lg font-mono text-indigo-800 text-center">
                      (a + b)(c + d) = ac + ad + bc + bd
                  </div>
                </div>
                    <div className="text-gray-700">
                      Chaque terme de la premi√®re parenth√®se multiplie chaque terme de la seconde.
                    </div>
                    <div className="bg-gray-50 p-3 rounded border-l-4 border-indigo-400">
                      <p className="text-sm text-gray-600 font-mono">Exemple : (x + 1)(x + 2) = x¬≤ + 3x + 2</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* S√©lecteur d'animation */}
            <div className="bg-white rounded-2xl p-6 shadow-lg border border-gray-200">
              <h2 className="text-xl font-bold text-gray-800 mb-6">üé¨ Animations Explicatives</h2>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                {distributivityAnimations.map((anim, index) => (
                  <button
                    key={anim.id}
                    onClick={() => {
                      setSelectedAnimation(index)
                      resetAnimation()
                    }}
                    className={`p-4 rounded-lg border-2 transition-all duration-500 ${
                      selectedAnimation === index
                        ? 'border-blue-500 bg-blue-50 shadow-md'
                        : 'border-gray-200 bg-white hover:border-blue-300'
                    }`}
                  >
                    <div className="text-lg font-bold mb-2 text-gray-800">{anim.title}</div>
                    <div className="font-mono text-blue-700 text-lg">{anim.expression}</div>
                  </button>
                ))}
              </div>
            </div>

            {/* Zone d'animation principale */}
            <div className="bg-white rounded-2xl p-8 shadow-lg border border-gray-200">
              <div className="flex items-center justify-between mb-6">
                <h2 className="text-2xl font-bold text-gray-800">{currentAnim.title}</h2>
                <div className="flex gap-3">
                  <button
                    onClick={prevStep}
                    disabled={animationStep === 0}
                    className="flex items-center gap-2 px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:opacity-50 transition-colors"
                  >
                    <ArrowLeft size={16} />
                    Pr√©c√©dent
                  </button>
                  <button
                    onClick={nextStep}
                    disabled={animationStep >= currentAnim.steps.length - 1}
                    className="flex items-center gap-2 px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 disabled:opacity-50 transition-colors"
                  >
                    Suivant
                    <ArrowLeft size={16} className="rotate-180" />
                  </button>
                  <button
                    onClick={resetAnimation}
                    className="flex items-center gap-2 px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors"
                  >
                    <RotateCcw size={16} />
                    Reset
                  </button>
                </div>
              </div>

              {/* Affichage de l'animation avec vrais mouvements */}
              <div className="bg-gray-50 rounded-xl p-8 border border-gray-200 min-h-[600px] flex flex-col relative overflow-visible">
                <div className="text-center space-y-6">
                  
                  {/* Animation pour distributivit√© simple */}
                  {selectedAnimation === 0 && (
                    <div className="space-y-8">
                      {/* Expression de d√©part - TOUJOURS VISIBLE */}
                      <div className="text-center">
                        <div className="text-4xl font-mono font-bold text-gray-800 mb-6">
                          <span className={`${animationStep === 1 ? 'text-red-600 bg-yellow-200 px-2 rounded animate-pulse' : 'text-red-600 font-extrabold'}`}>3</span>
                          <span className="text-gray-800">(x + 2)</span>
                        </div>
                      </div>
                      
                      {/* √âtapes qui apparaissent progressivement et restent affich√©es */}
                      <div className="space-y-4">
                        {/* √âtape 1: Distribution - Reste visible */}
                        <div 
                          className="text-3xl font-mono font-bold transition-all duration-1000 ease-in-out text-center"
                          style={{ 
                            opacity: animationStep >= 2 ? 1 : 0,
                            transform: animationStep >= 2 ? 'translateY(0)' : 'translateY(20px)'
                          }}
                        >
                          <span className="text-red-600 font-extrabold">3</span>
                          <span className="text-blue-600"> √ó x + </span>
                          <span className="text-red-600 font-extrabold">3</span>
                          <span className="text-blue-600"> √ó 2</span>
                        </div>
                        
                        {/* √âtape 2: R√©sultat final - Reste visible */}
                        <div 
                          className="text-3xl font-mono font-bold transition-all duration-1000 ease-in-out text-center"
                          style={{ 
                            opacity: animationStep >= 3 ? 1 : 0,
                            transform: animationStep >= 3 ? 'translateY(0)' : 'translateY(20px)'
                          }}
                        >
                          <span className="text-green-600 font-extrabold">3x + 6</span>
                        </div>
                      </div>
                    </div>
                  )}

                  {/* Animation pour distributivit√© avec signe n√©gatif */}
                  {selectedAnimation === 1 && (
                    <div className="space-y-8">
                      {/* Expression de d√©part - TOUJOURS VISIBLE */}
                      <div className="relative">
                        <div className="text-4xl font-mono font-bold text-gray-800 relative">
                          {animationStep >= 1 ? (
                            <div className="flex items-center justify-center">
                              <span className={`${animationStep === 1 ? 'text-red-600 bg-red-100 px-2 rounded animate-pulse' : 'text-red-600 font-extrabold'}`}>-2</span>
                              <span className="text-gray-800">(x + 3)</span>
                            </div>
                          ) : (
                            <span>-2(x + 3)</span>
                          )}
                        </div>
                      </div>
                      
                      {/* √âtapes qui apparaissent progressivement */}
                      <div className="space-y-4 mt-8">
                        {/* √âtape 1: Distribution */}
                        {animationStep >= 2 && (
                          <div 
                            className="text-3xl font-mono font-bold transition-all duration-1000 ease-in-out"
                            style={{ 
                              opacity: animationStep >= 2 ? 1 : 0,
                              transform: animationStep >= 2 ? 'translateY(0)' : 'translateY(20px)'
                            }}
                          >
                            <span className="text-blue-600">(</span>
                            <span className="text-red-600 font-extrabold">-2</span>
                            <span className="text-blue-600">) √ó x + (</span>
                            <span className="text-red-600 font-extrabold">-2</span>
                            <span className="text-blue-600">) √ó 3</span>
                          </div>
                        )}
                        
                        {/* √âtape 2: R√©sultat final */}
                        {animationStep >= 3 && (
                          <div 
                            className="text-3xl font-mono font-bold transition-all duration-1000 ease-in-out"
                            style={{ 
                              opacity: animationStep >= 3 ? 1 : 0,
                              transform: animationStep >= 3 ? 'translateY(0)' : 'translateY(20px)'
                            }}
                          >
                            <span className="text-red-600 font-extrabold">-2</span>
                            <span className="text-green-600">x </span>
                            <span className="text-red-600 font-extrabold">- 6</span>
                          </div>
                        )}
                      </div>
                    </div>
                  )}

                  {/* Animation pour double distributivit√© */}
                  {selectedAnimation === 2 && (
                    <div className="space-y-8 relative" style={{ overflow: 'visible' }}>
                      {/* Expression de d√©part - TOUJOURS VISIBLE */}
                      <div className="text-center p-8 bg-white rounded-lg border-2 border-blue-200 min-h-[400px] relative z-10" style={{ overflow: 'visible' }}>
                        {/* Expression avec overlay pour les fl√®ches */}
                        <div className="relative h-full">
                          <div className="text-3xl sm:text-4xl font-mono font-bold text-gray-800 mb-4 text-center mt-8">
                            <span className="text-blue-600 font-extrabold" id="term-a">(a + 1)</span>
                            <span className="text-red-600 font-extrabold ml-2" id="term-b">(b + 2)</span>
                          </div>
                          
                          {/* Fl√®ches SVG superpos√©es */}
                          {animationStep >= 1 && (
                            <div className="absolute top-0 left-0 right-0 pointer-events-none z-50" style={{ height: '400px', zIndex: 9999, overflow: 'visible', transform: 'translateY(-120px)' }}>
                              <svg className="w-full h-full" viewBox="0 -80 500 200" style={{ overflow: 'visible' }}>
                                {/* Fl√®che 1: a √ó b - du premier 'a' au 'b' - belle parabole courb√©e */}
                                {animationStep >= 1 && (
                                  <g>
                                    <path
                                      d="M 189 -27 Q 252 -67 315 -27"
                                      stroke="#8b5cf6"
                                      strokeWidth="2"
                                      fill="none"
                                      markerEnd="url(#arrowhead-purple)"
                                      className="animate-pulse"
                                    />
                                    <text x="252" y="-57" textAnchor="middle" className="text-xs fill-purple-600 font-bold">a √ó b = ab</text>
                                  </g>
                                )}
                                
                                {/* Fl√®che 2: a √ó 2 - du premier 'a' au '2' */}
                                {animationStep >= 2 && (
                                  <g>
                                    <path
                                      d="M 189 5 Q 280 -10 371 5"
                                      stroke="#059669"
                                      strokeWidth="2"
                                      fill="none"
                                      markerEnd="url(#arrowhead-green)"
                                      className="animate-pulse"
                                    />
                                    <text x="280" y="0" textAnchor="middle" className="text-xs fill-green-600 font-bold">a √ó 2 = 2a</text>
                                  </g>
                                )}
                                
                                {/* Fl√®che 3: 1 √ó b - du '1' au 'b' */}
                                {animationStep >= 3 && (
                                  <g>
                                    <path
                                      d="M 220 15 Q 280 45 340 15"
                                      stroke="#dc2626"
                                      strokeWidth="2"
                                      fill="none"
                                      markerEnd="url(#arrowhead-red)"
                                      className="animate-pulse"
                                    />
                                    <text x="280" y="40" textAnchor="middle" className="text-xs fill-red-600 font-bold">1 √ó b = b</text>
                                  </g>
                                )}
                                
                                {/* Fl√®che 4: 1 √ó 2 - du '1' au '2' */}
                                {animationStep >= 4 && (
                                  <g>
                                    <path
                                      d="M 220 25 Q 295 55 371 25"
                                      stroke="#ea580c"
                                      strokeWidth="2"
                                      fill="none"
                                      markerEnd="url(#arrowhead-orange)"
                                      className="animate-pulse"
                                    />
                                    <text x="295" y="50" textAnchor="middle" className="text-xs fill-orange-600 font-bold">1 √ó 2 = 2</text>
                                  </g>
                                )}
                                
                                {/* D√©finitions des pointes de fl√®ches */}
                                <defs>
                                  <marker id="arrowhead-purple" markerWidth="10" markerHeight="8" refX="10" refY="4" orient="auto">
                                    <polygon points="0 0, 10 4, 0 8" fill="#8b5cf6" />
                                  </marker>
                                  <marker id="arrowhead-green" markerWidth="10" markerHeight="8" refX="10" refY="4" orient="auto">
                                    <polygon points="0 0, 10 4, 0 8" fill="#059669" />
                                  </marker>
                                  <marker id="arrowhead-red" markerWidth="10" markerHeight="8" refX="10" refY="4" orient="auto">
                                    <polygon points="0 0, 10 4, 0 8" fill="#dc2626" />
                                  </marker>
                                  <marker id="arrowhead-orange" markerWidth="10" markerHeight="8" refX="10" refY="4" orient="auto">
                                    <polygon points="0 0, 10 4, 0 8" fill="#ea580c" />
                                  </marker>
                                </defs>
                              </svg>
                            </div>
                          )}
                        </div>
                        
                        <p className="text-gray-600">Expression de d√©part</p>
                      </div>
                      
                      {/* √âtape 1: Fl√®che a √ó b */}
                      {animationStep >= 1 && (
                        <div className="p-4 bg-purple-50 rounded-lg border-l-4 border-purple-500">
                          <div className="flex items-center justify-between">
                            <div className="text-xl font-mono font-bold">
                              <span className="text-blue-600 bg-blue-200 px-2 rounded">a</span>
                              <span className="text-gray-600"> √ó </span>
                              <span className="text-red-600 bg-red-200 px-2 rounded">b</span>
                              <span className="text-gray-600"> = </span>
                              <span className="text-purple-600 font-extrabold">ab</span>
                            </div>
                            <div className="text-sm text-gray-600">Premi√®re fl√®che</div>
                          </div>
                        </div>
                      )}
                      
                      {/* √âtape 2: Fl√®che a √ó 2 */}
                      {animationStep >= 2 && (
                        <div className="p-4 bg-green-50 rounded-lg border-l-4 border-green-500">
                          <div className="flex items-center justify-between">
                            <div className="text-xl font-mono font-bold">
                              <span className="text-blue-600 bg-blue-200 px-2 rounded">a</span>
                              <span className="text-gray-600"> √ó </span>
                              <span className="text-red-600 bg-red-200 px-2 rounded">2</span>
                              <span className="text-gray-600"> = </span>
                              <span className="text-green-600 font-extrabold">2a</span>
                            </div>
                            <div className="text-sm text-gray-600">Deuxi√®me fl√®che</div>
                          </div>
                        </div>
                      )}
                      
                      {/* √âtape 3: Fl√®che 1 √ó b */}
                      {animationStep >= 3 && (
                        <div className="p-4 bg-red-50 rounded-lg border-l-4 border-red-500">
                          <div className="flex items-center justify-between">
                            <div className="text-xl font-mono font-bold">
                              <span className="text-blue-600 bg-blue-200 px-2 rounded">1</span>
                              <span className="text-gray-600"> √ó </span>
                              <span className="text-red-600 bg-red-200 px-2 rounded">b</span>
                              <span className="text-gray-600"> = </span>
                              <span className="text-red-600 font-extrabold">b</span>
                            </div>
                            <div className="text-sm text-gray-600">Troisi√®me fl√®che</div>
                          </div>
                        </div>
                      )}
                      
                      {/* √âtape 4: Fl√®che 1 √ó 2 */}
                      {animationStep >= 4 && (
                        <div className="p-4 bg-orange-50 rounded-lg border-l-4 border-orange-500">
                          <div className="flex items-center justify-between">
                            <div className="text-xl font-mono font-bold">
                              <span className="text-blue-600 bg-blue-200 px-2 rounded">1</span>
                              <span className="text-gray-600"> √ó </span>
                              <span className="text-red-600 bg-red-200 px-2 rounded">2</span>
                              <span className="text-gray-600"> = </span>
                              <span className="text-orange-600 font-extrabold">2</span>
                            </div>
                            <div className="text-sm text-gray-600">Quatri√®me fl√®che</div>
                          </div>
                        </div>
                      )}
                      
                      {/* √âtape 5: R√©capitulatif de tous les produits */}
                      {animationStep >= 5 && (
                        <div className="p-4 bg-yellow-50 rounded-lg border-l-4 border-yellow-500">
                          <div className="text-center">
                            <div className="text-2xl font-mono font-bold mb-2">
                              <span className="text-purple-600 font-extrabold">ab</span>
                              <span className="text-gray-600"> + </span>
                              <span className="text-green-600 font-extrabold">2a</span>
                              <span className="text-gray-600"> + </span>
                              <span className="text-red-600 font-extrabold">b</span>
                              <span className="text-gray-600"> + </span>
                              <span className="text-orange-600 font-extrabold">2</span>
                            </div>
                            <p className="text-gray-600">R√©capitulatif de tous les produits</p>
                          </div>
                        </div>
                      )}
                      
                      {/* √âtape 6: D√©veloppement */}
                      {animationStep >= 6 && (
                        <div className="p-4 bg-indigo-50 rounded-lg border-l-4 border-indigo-500">
                          <div className="text-center">
                            <div className="text-2xl font-mono font-bold mb-2">
                              <span className="text-indigo-600">ab + 2a + b + 2</span>
                            </div>
                            <p className="text-gray-600">D√©veloppement complet</p>
                          </div>
                        </div>
                      )}
                      
                      {/* √âtape 7: R√©sultat final */}
                      {animationStep >= 7 && (
                        <div className="p-4 bg-green-100 rounded-lg border-l-4 border-green-600">
                          <div className="text-center">
                            <div className="text-3xl font-mono font-bold mb-2">
                              <span className="text-green-700 font-extrabold">ab + 2a + b + 2</span>
                            </div>
                            <p className="text-gray-600">R√©sultat final : impossible de regrouper davantage</p>
                          </div>
                        </div>
                      )}
                    </div>
                  )}

                  {/* Description de l'√©tape */}
                  <div className={`text-lg font-medium transition-all duration-800 ease-in-out ${
                    animationPlaying ? 'text-blue-600' : 'text-gray-600'
                  }`}>
                    {currentAnim.steps[animationStep]?.description || 'Cliquez sur "Jouer" pour voir la distributivit√© √©tape par √©tape !'}
                  </div>

                  {/* Indicateur de progression */}
                  <div className="flex justify-center space-x-2">
                    {currentAnim.steps.map((_, index) => (
                      <div
                        key={index}
                        className={`w-3 h-3 rounded-full transition-all duration-500 ${
                          index <= animationStep
                            ? 'bg-blue-500 scale-125'
                            : 'bg-gray-300'
                        }`}
                      />
                    ))}
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Exercices */}
        {activeTab === 'exercices' && (
          <div className="space-y-8">
            {/* S√©lecteur de mode */}
            <div className="bg-white rounded-xl p-6 shadow-lg border border-gray-200">
              <div className="flex flex-col sm:flex-row gap-4 items-center justify-between mb-6">
                <h2 className="text-2xl font-bold text-gray-800">üéØ Exercices de d√©veloppement</h2>
                
                <div className="flex gap-3 items-center">
                  <button
                    onClick={() => {
                      setExerciseLevel('normal')
                      setCurrentExercise(0)
                      resetExercise()
                    }}
                    className={`flex items-center gap-2 px-4 py-2 rounded-lg text-base font-bold shadow-md transition-colors ${
                      exerciseLevel === 'normal' 
                        ? 'bg-blue-600 text-white' 
                        : 'bg-blue-500 text-white hover:bg-blue-600'
                    }`}
                  >
                    <span className="text-xl">üìù</span>
                    Normal: {correctAnswersNormal}/{normalExercises.length}
                  </button>
                  <button
                    onClick={() => {
                      setExerciseLevel('beast')
                      setCurrentExercise(0)
                      resetExercise()
                    }}
                    className={`flex items-center gap-2 px-4 py-2 rounded-lg text-base font-bold shadow-md transition-colors ${
                      exerciseLevel === 'beast' 
                        ? 'bg-red-600 text-white' 
                        : 'bg-red-500 text-white hover:bg-red-600'
                    }`}
                  >
                    <span className="text-xl">üî•</span>
                    Beast: {correctAnswersBeast}/{beastExercises.length}
                  </button>

                  {showIncrement && (
                    <div className="flex items-center gap-2 px-3 py-1 bg-green-500 text-white rounded-lg text-sm font-bold animate-pulse">
                      <span className="text-lg">‚úÖ</span>
                      +1 !
                    </div>
                  )}
                  
                  {/* Bouton de r√©initialisation des compteurs */}
                  <button
                    onClick={resetCounters}
                    className="px-3 py-2 rounded-lg font-medium transition-colors bg-gray-500 text-white hover:bg-gray-600"
                    title="R√©initialiser les compteurs"
                  >
                    üîÑ
                  </button>
                </div>
              </div>
            </div>

            {/* Exercices Normaux */}
            {exerciseLevel === 'normal' && (
              <div className="bg-white rounded-xl p-6 shadow-lg border border-blue-200">
                <div className="flex flex-col sm:flex-row gap-4 items-center justify-between mb-6">
                  <div className="flex items-center gap-4">
                    <h3 className="text-lg font-semibold text-blue-800 flex items-center gap-2">
                      <span className="text-2xl">üìù</span>
                      Mode Normal - Exercice {currentExercise + 1} / {normalExercises.length}
                </h3>
                    {/* Barre de progression Mode Normal */}
                    <div className="flex items-center gap-2">
                      <div className="w-32 bg-gray-200 rounded-full h-2">
                        <div 
                          className="bg-blue-500 h-2 rounded-full transition-all duration-300"
                          style={{ width: `${((currentExercise + 1) / normalExercises.length) * 100}%` }}
                        />
                      </div>
                      <span className="text-sm text-gray-600 font-medium">
                        {Math.round(((currentExercise + 1) / normalExercises.length) * 100)}%
                      </span>
                    </div>
                </div>
              </div>

                <div className="space-y-4">
                  {/* Question Mode Normal avec score int√©gr√© */}
                  <div className="bg-blue-50 rounded-lg p-4 border border-blue-200">
                    <div className="flex items-center justify-between mb-3">
                      <h4 className="font-semibold text-blue-800">üìù D√©veloppez l'expression :</h4>
                      <span className="inline-flex items-center gap-1 px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm font-semibold">
                        üìù {correctAnswersNormal}/{normalExercises.length}
                      </span>
                    </div>
                    <div className="text-xl font-mono text-blue-900 text-center">
                  {currentEx.question}
                    </div>
                  </div>

                  {/* √âditeur math√©matique */}
                  <div className="mb-4 space-y-4">
                    <h4 className="font-semibold text-blue-800 mb-3">üìù Votre r√©ponse :</h4>
                    <MathEditor
                    value={userAnswer}
                      onChange={setUserAnswer}
                      placeholder="D√©veloppez l'expression... (ex: 3x + 6)"
                      onSubmit={checkAnswer}
                      theme="blue"
                    disabled={showAnswer}
                  />
                    
                    {/* Reconnaissance vocale */}
                    <div className="border-t border-blue-200 pt-3">
                      <VoiceInput
                        onTranscript={(transcript) => setUserAnswer(transcript)}
                        placeholder="Ou dites votre r√©ponse √† voix haute (ex: 'trois x plus six')..."
                        className="justify-center"
                      />
                    </div>
                  </div>
                  
                  {/* Feedback de r√©ponse */}
                  {showAnswer && (
                    <div className={`p-4 rounded-lg border transition-all duration-500 ${
                      answerFeedback === 'correct'
                        ? 'bg-green-50 border-green-200'
                        : 'bg-red-50 border-red-200'
                    }`}>
                      <div className="flex items-center gap-2 mb-2">
                        <span className="text-2xl">
                          {answerFeedback === 'correct' ? 'üéâ' : 'üí°'}
                        </span>
                        <p className={`font-semibold ${
                          answerFeedback === 'correct'
                            ? 'text-green-800'
                            : 'text-red-800'
                        }`}>
                          {answerFeedback === 'correct' ? 'Excellent !' : 'Presque !'}
                        </p>
                      </div>
                      <p className="text-gray-700">
                        La bonne r√©ponse est : <span className="font-mono font-bold text-blue-700">{currentEx.steps[currentEx.steps.length - 1].expr}</span>
                      </p>
                      
                      {/* Bouton pour voir la solution d√©taill√©e */}
                  <button
                        onClick={() => setShowSolution(!showSolution)}
                        className="mt-3 px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors text-sm"
                  >
                        {showSolution ? 'Masquer' : 'Voir'} la solution d√©taill√©e
                  </button>
                </div>
                  )}

                  {/* Solution d√©taill√©e */}
                  {showSolution && (
                    <div className="bg-gray-50 rounded-lg p-6 border border-gray-200">
                      <h4 className="font-bold text-gray-800 mb-4">üìö Solution √©tape par √©tape :</h4>
                      
                      <div className="space-y-3">
                        {currentEx.steps.map((step, index) => (
                          <div 
                            key={index}
                            className={`p-3 rounded-lg border transition-all duration-500 ${
                              index <= solutionStep ? 'opacity-100' : 'opacity-30'
                            }`}
                            style={{ backgroundColor: index === solutionStep ? '#eff6ff' : '#f9fafb' }}
                          >
                            <div className="flex items-center justify-between">
                              <span className="text-sm font-medium text-gray-600">{step.text}</span>
                              <span className={`font-mono text-lg ${step.color}`}>{step.expr}</span>
                            </div>
                          </div>
                        ))}
                      </div>
                      
                      {/* Navigation solution */}
                      <div className="flex justify-center gap-3 mt-4">
                        <button
                          onClick={prevSolutionStep}
                          disabled={solutionStep === 0}
                          className="px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 disabled:opacity-50 transition-colors"
                        >
                          ‚Üê Pr√©c√©dent
                        </button>
                        <button
                          onClick={nextSolutionStep}
                          disabled={solutionStep >= currentEx.steps.length - 1}
                          className="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:opacity-50 transition-colors"
                        >
                          Suivant ‚Üí
                        </button>
                        <button
                          onClick={resetSolutionStep}
                          className="px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors"
                        >
                          üîÑ Reset
                        </button>
                      </div>
                    </div>
                  )}

                  {/* Navigation exercices */}
                  <div className="flex justify-between pt-4">
                    <button
                      onClick={prevExercise}
                      disabled={currentExercise === 0}
                      className="px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 disabled:opacity-50 transition-colors"
                    >
                      ‚Üê Pr√©c√©dent
                    </button>
                    <button
                      onClick={nextExercise}
                      disabled={currentExercise === exercises.length - 1}
                      className="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:opacity-50 transition-colors"
                    >
                      Suivant ‚Üí
                    </button>
                  </div>
                </div>
              </div>
            )}

            {/* Exercices Beast Mode */}
            {exerciseLevel === 'beast' && (
              <div className="bg-white rounded-xl p-6 shadow-lg border border-red-200">
                <div className="flex flex-col sm:flex-row gap-4 items-center justify-between mb-6">
                  <div className="flex items-center gap-4">
                    <h3 className="text-lg font-semibold text-red-800 flex items-center gap-2">
                      <span className="text-2xl">üî•</span>
                      Beast Mode - Exercice {currentExercise + 1} / {beastExercises.length}
                      <span className="text-2xl">üî•</span>
                    </h3>
                    {/* Barre de progression Beast Mode */}
                    <div className="flex items-center gap-2">
                      <div className="w-32 bg-gray-200 rounded-full h-2">
                        <div 
                          className="bg-red-500 h-2 rounded-full transition-all duration-300"
                          style={{ width: `${((currentExercise + 1) / beastExercises.length) * 100}%` }}
                        />
                      </div>
                      <span className="text-sm text-gray-600 font-medium">
                        {Math.round(((currentExercise + 1) / beastExercises.length) * 100)}%
                      </span>
                    </div>
                  </div>
                </div>

                  <div className="space-y-4">
                  {/* Question Beast Mode avec score int√©gr√© */}
                  <div className="bg-red-50 rounded-lg p-4 border border-red-200">
                    <div className="flex items-center justify-between mb-3">
                      <h4 className="font-semibold text-red-800">üî• D√©fi Beast Mode :</h4>
                      <span className="inline-flex items-center gap-1 px-3 py-1 bg-orange-100 text-orange-700 rounded-full text-sm font-semibold">
                        üî• {correctAnswersBeast}/{beastExercises.length}
                      </span>
                    </div>
                    <div className="text-xl font-mono text-red-900 text-center">
                      {currentEx.question}
                    </div>
                  </div>

                  {/* √âditeur math√©matique Beast */}
                  <div className="mb-4 space-y-4">
                    <h4 className="font-semibold text-red-800 mb-3">üî• Votre r√©ponse Beast :</h4>
                    <MathEditor
                      value={userAnswer}
                      onChange={setUserAnswer}
                      placeholder="D√©fi Beast ! D√©veloppez cette expression complexe..."
                      onSubmit={checkAnswer}
                      theme="red"
                      disabled={showAnswer}
                    />
                    
                    {/* Reconnaissance vocale Beast */}
                    <div className="border-t border-red-200 pt-3">
                      <VoiceInput
                        onTranscript={(transcript) => setUserAnswer(transcript)}
                        placeholder="Mode Beast : dites votre r√©ponse (ex: 'six x carr√© plus cinq x moins quatre')..."
                        className="justify-center"
                      />
                    </div>
                  </div>
                  
                  {/* Feedback de r√©ponse Beast */}
                  {showAnswer && (
                    <div className={`p-4 rounded-lg border transition-all duration-500 ${
                      answerFeedback === 'correct'
                        ? 'bg-green-50 border-green-200'
                        : 'bg-red-50 border-red-200'
                    }`}>
                      <div className="flex items-center gap-2 mb-2">
                        <span className="text-2xl">
                          {answerFeedback === 'correct' ? 'üèÜ' : 'üí™'}
                        </span>
                      <p className={`font-semibold ${
                          answerFeedback === 'correct'
                          ? 'text-green-800'
                          : 'text-red-800'
                      }`}>
                          {answerFeedback === 'correct' ? 'BEAST CHAMPION !' : 'Beast en formation !'}
                        </p>
                      </div>
                      <p className="text-gray-700">
                        La r√©ponse beast : <span className="font-mono font-bold text-red-700">{currentEx.steps[currentEx.steps.length - 1].expr}</span>
                      </p>
                      
                      {/* Bouton pour voir la solution d√©taill√©e Beast */}
                      <button
                        onClick={() => setShowSolution(!showSolution)}
                        className="mt-3 px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors text-sm"
                      >
                        {showSolution ? 'Masquer' : 'Voir'} la solution beast
                      </button>
                    </div>
                  )}

                  {/* Solution d√©taill√©e Beast */}
                  {showSolution && (
                    <div className="bg-red-50 rounded-lg p-6 border border-red-200">
                      <h4 className="font-bold text-red-800 mb-4">üî• Solution Beast √©tape par √©tape :</h4>
                      
                      <div className="space-y-3">
                        {currentEx.steps.map((step, index) => (
                          <div 
                            key={index}
                            className={`p-3 rounded-lg border transition-all duration-500 ${
                              index <= solutionStep ? 'opacity-100' : 'opacity-30'
                            }`}
                            style={{ backgroundColor: index === solutionStep ? '#fef2f2' : '#fefefe' }}
                          >
                            <div className="flex items-center justify-between">
                              <span className="text-sm font-medium text-red-600">{step.text}</span>
                              <span className={`font-mono text-lg ${step.color}`}>{step.expr}</span>
                            </div>
                          </div>
                        ))}
                      </div>
                      
                      {/* Navigation solution Beast */}
                      <div className="flex justify-center gap-3 mt-4">
                        <button
                          onClick={prevSolutionStep}
                          disabled={solutionStep === 0}
                          className="px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 disabled:opacity-50 transition-colors"
                        >
                          ‚Üê Pr√©c√©dent
                        </button>
                        <button
                          onClick={nextSolutionStep}
                          disabled={solutionStep >= currentEx.steps.length - 1}
                          className="px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 disabled:opacity-50 transition-colors"
                        >
                          Suivant ‚Üí
                        </button>
                        <button
                          onClick={resetSolutionStep}
                          className="px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors"
                        >
                          üîÑ Reset
                        </button>
                    </div>
                  </div>
                )}

                  {/* Navigation exercices Beast */}
                  <div className="flex justify-between pt-4">
                    <button
                      onClick={prevExercise}
                      disabled={currentExercise === 0}
                      className="px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 disabled:opacity-50 transition-colors"
                    >
                      ‚Üê Pr√©c√©dent
                    </button>
                    <button
                      onClick={nextExercise}
                      disabled={currentExercise === exercises.length - 1}
                      className="px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 disabled:opacity-50 transition-colors"
                    >
                      Suivant ‚Üí
                    </button>
              </div>
                </div>
              </div>
            )}

            {/* Exercices Hardcore */}
            {exerciseLevel === 'hardcore' && (
              <div className="bg-white rounded-xl p-6 shadow-lg border border-purple-200">
                <div className="flex flex-col sm:flex-row gap-4 items-center justify-between mb-6">
                  <div className="flex items-center gap-4">
                    <h3 className="text-lg font-semibold text-purple-800 flex items-center gap-2">
                      <span className="text-2xl">üíÄ</span>
                      Mode Hardcore - Exercice {currentExercise + 1} / {hardcoreExercises.length}
                    </h3>
                    {/* Barre de progression Mode Hardcore */}
                    <div className="flex items-center gap-2">
                      <div className="w-32 bg-gray-200 rounded-full h-2">
                        <div 
                          className="bg-purple-500 h-2 rounded-full transition-all duration-300"
                          style={{ width: `${((currentExercise + 1) / hardcoreExercises.length) * 100}%` }}
                        />
                      </div>
                      <span className="text-sm text-gray-600 font-medium">
                        {Math.round(((currentExercise + 1) / hardcoreExercises.length) * 100)}%
                      </span>
                    </div>
                  </div>
                </div>

                <div className="space-y-4">
                  {/* Question Hardcore Mode avec score int√©gr√© */}
                  <div className="bg-purple-50 rounded-lg p-4 border border-purple-200">
                    <div className="flex items-center justify-between mb-3">
                      <h4 className="font-semibold text-purple-800">üíÄ D√©fi Hardcore - Fractions et LA TOTALE :</h4>
                      <span className="inline-flex items-center gap-1 px-3 py-1 bg-purple-100 text-purple-700 rounded-full text-sm font-semibold">
                        üíÄ {correctAnswersHardcore}/{hardcoreExercises.length}
                      </span>
                    </div>
                    <div className="text-xl font-mono text-purple-900 text-center">
                      <MathExpression expression={currentEx.question} />
                    </div>
                  </div>

                  {/* √âditeur math√©matique Hardcore */}
                  <div className="mb-4 space-y-4">
                    <h4 className="font-semibold text-purple-800 mb-3">üíÄ Votre r√©ponse Hardcore :</h4>
                    <MathEditor
                      value={userAnswer}
                      onChange={setUserAnswer}
                      placeholder="HARDCORE ! Fractions, puissances, tout est permis..."
                      onSubmit={checkAnswer}
                      theme="red"
                      disabled={showAnswer}
                    />
                    
                    {/* Reconnaissance vocale Hardcore */}
                    <div className="border-t border-purple-200 pt-3">
                      <VoiceInput
                        onTranscript={(transcript) => setUserAnswer(transcript)}
                        placeholder="Mode Hardcore : dites votre r√©ponse avec fractions (ex: 'un demi x carr√© plus trois quarts x')..."
                        className="justify-center"
                      />
                    </div>
                  </div>
                  
                  {/* Feedback de r√©ponse Hardcore */}
                  {showAnswer && (
                    <div className={`p-4 rounded-lg border transition-all duration-500 ${
                      answerFeedback === 'correct'
                        ? 'bg-green-50 border-green-200'
                        : 'bg-purple-50 border-purple-200'
                    }`}>
                      <div className="flex items-center gap-2 mb-2">
                        <span className="text-2xl">
                          {answerFeedback === 'correct' ? 'üëë' : 'üíÄ'}
                        </span>
                        <p className={`font-semibold ${
                          answerFeedback === 'correct'
                            ? 'text-green-800'
                            : 'text-purple-800'
                        }`}>
                          {answerFeedback === 'correct' ? 'HARDCORE LEGEND !' : 'Hardcore warrior en formation !'}
                        </p>
                      </div>
                      <p className="text-gray-700">
                        La r√©ponse hardcore : <span className="font-mono font-bold text-purple-700">
                          <MathExpression expression={currentEx.steps[currentEx.steps.length - 1].expr} />
                        </span>
                      </p>
                      
                      {/* Bouton pour voir la solution d√©taill√©e Hardcore */}
                      <button
                        onClick={() => setShowSolution(!showSolution)}
                        className="mt-3 px-4 py-2 bg-purple-500 text-white rounded-lg hover:bg-purple-600 transition-colors text-sm"
                      >
                        {showSolution ? 'Masquer' : 'Voir'} la solution hardcore
                      </button>
                    </div>
                  )}

                  {/* Solution d√©taill√©e Hardcore */}
                  {showSolution && (
                    <div className="bg-purple-50 rounded-lg p-6 border border-purple-200">
                      <h4 className="font-bold text-purple-800 mb-4">üíÄ Solution Hardcore √©tape par √©tape :</h4>
                      
                      <div className="space-y-3">
                        {currentEx.steps.map((step, index) => (
                          <div 
                            key={index}
                            className={`p-3 rounded-lg border transition-all duration-500 ${
                              index <= solutionStep ? 'opacity-100' : 'opacity-30'
                            }`}
                            style={{ backgroundColor: index === solutionStep ? '#faf5ff' : '#fefefe' }}
                          >
                            <div className="flex items-center justify-between">
                              <span className="text-sm font-medium text-purple-600">{step.text}</span>
                              <span className={`font-mono text-lg ${step.color}`}>
                                <MathExpression expression={step.expr} />
                              </span>
                            </div>
                          </div>
                        ))}
                      </div>
                      
                      {/* Navigation solution Hardcore */}
                      <div className="flex justify-center gap-3 mt-4">
                        <button
                          onClick={prevSolutionStep}
                          disabled={solutionStep === 0}
                          className="px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 disabled:opacity-50 transition-colors"
                        >
                          ‚Üê Pr√©c√©dent
                        </button>
                        <button
                          onClick={nextSolutionStep}
                          disabled={solutionStep >= currentEx.steps.length - 1}
                          className="px-4 py-2 bg-purple-500 text-white rounded-lg hover:bg-purple-600 disabled:opacity-50 transition-colors"
                        >
                          Suivant ‚Üí
                        </button>
                        <button
                          onClick={resetSolutionStep}
                          className="px-4 py-2 bg-indigo-500 text-white rounded-lg hover:bg-indigo-600 transition-colors"
                        >
                          üîÑ Reset
                        </button>
                      </div>
                    </div>
                  )}

                  {/* Navigation exercices Hardcore */}
                  <div className="flex justify-between pt-4">
                <button
                  onClick={prevExercise}
                  disabled={currentExercise === 0}
                      className="px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 disabled:opacity-50 transition-colors"
                >
                      ‚Üê Pr√©c√©dent
                </button>
                <button
                  onClick={nextExercise}
                  disabled={currentExercise === exercises.length - 1}
                      className="px-4 py-2 bg-purple-500 text-white rounded-lg hover:bg-purple-600 disabled:opacity-50 transition-colors"
                >
                      Suivant ‚Üí
                </button>
              </div>
            </div>
              </div>
            )}
          </div>
        )}
      </div>
    </div>
  )
} 