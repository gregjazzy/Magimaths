const textToSpeech = require('@google-cloud/text-to-speech');
const fs = require('fs').promises;
const path = require('path');

// Configuration Google Cloud TTS
const client = new textToSpeech.TextToSpeechClient();

// üéµ CONFIGURATION VOCALE PREMIUM
const VOICE_CONFIG = {
  languageCode: 'fr-FR',
  name: 'fr-FR-Wavenet-A',  // Voix premium f√©minine
  ssmlGender: 'FEMALE'
};

const AUDIO_CONFIG = {
  audioEncoding: 'MP3',
  speakingRate: 1.2,  // Vitesse optimis√©e pour l'apprentissage
  pitch: 0.0,
  volumeGainDb: 0.0
};

// üìù MAPPING COMPLET DES TEXTES VOCAUX
const VOCAL_TEXTS = {
  // üî¢ CP-NOMBRES-JUSQU-20
  'cp-nombres-jusqu-20': {
    'reconnaissance': {
      'course-intro': "Salut ! Aujourd'hui, nous allons apprendre √† reconna√Ætre les nombres de 0 √† 20 !",
      'course-explanation': "Regarde bien chaque nombre ! Tu dois observer sa forme et m√©moriser comment il s'√©crit !",
      'course-practice': "Maintenant, clique sur l'onglet Exercices pour t'entra√Æner √† reconna√Ætre tous ces nombres !",
      'exercise-intro': "Super ! Tu es dans les exercices de reconnaissance des nombres !",
      'exercise-instruction': "Pour chaque question, regarde bien le nombre et choisis la bonne r√©ponse. Allez, c'est parti !"
    },
    'comptage': {
      'course-intro': "Salut ! Aujourd'hui, nous allons apprendre √† compter de 0 √† 20 !",
      'course-explanation': "Compter, c'est dire les nombres dans l'ordre ! √âcoute bien : 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 !",
      'course-practice': "Maintenant, clique sur l'onglet Exercices pour t'entra√Æner √† compter !",
      'exercise-intro': "Super ! Tu es dans les exercices de comptage !",
      'exercise-instruction': "Pour chaque question, compte bien et choisis la bonne r√©ponse. N'oublie pas l'ordre des nombres !"
    },
    'ecriture': {
      'course-intro': "Salut ! Aujourd'hui, nous allons apprendre √† √©crire les nombres de 0 √† 20 !",
      'course-explanation': "Chaque nombre a sa propre forme ! Il faut bien tracer chaque trait pour qu'on puisse le reconna√Ætre !",
      'course-practice': "Maintenant, clique sur l'onglet Exercices pour t'entra√Æner √† √©crire les nombres !",
      'exercise-intro': "Super ! Tu es dans les exercices d'√©criture des nombres !",
      'exercise-instruction': "Pour chaque exercice, √©cris le nombre demand√© en suivant bien le mod√®le !"
    },
    'dizaines-unites': {
      'course-intro': "Salut ! Aujourd'hui, nous allons d√©couvrir les dizaines et les unit√©s !",
      'course-explanation': "Dans un nombre comme 15, il y a 1 dizaine et 5 unit√©s ! La dizaine, c'est un groupe de 10, et les unit√©s, ce sont les nombres tout seuls !",
      'course-practice': "Regarde bien les exemples et clique sur l'onglet Exercices pour t'entra√Æner !",
      'exercise-intro': "Tu vas d√©couvrir comment d√©composer les nombres en dizaines et unit√©s !"
    },
    'doubles-moities': {
      'course-intro': "Salut ! Aujourd'hui, nous allons d√©couvrir les doubles et les moiti√©s !",
      'course-explanation': "Un double, c'est quand on ajoute un nombre √† lui-m√™me ! Et une moiti√©, c'est quand on partage en deux parts √©gales !",
      'course-practice': "Maintenant, clique sur l'onglet Exercices pour t'entra√Æner !",
      'exercise-intro': "Tu vas apprendre √† calculer les doubles et √† trouver les moiti√©s ! C'est parti !"
    },
    'ordonner-comparer': {
      'course-intro': "Salut ! Aujourd'hui, nous allons apprendre √† ordonner et comparer les nombres !",
      'course-explanation': "Comparer, c'est dire quel nombre est plus grand ou plus petit ! Ordonner, c'est ranger les nombres du plus petit au plus grand !",
      'course-practice': "Maintenant, clique sur l'onglet Exercices pour t'entra√Æner !",
      'exercise-intro': "Tu vas apprendre √† comparer et ordonner les nombres de 0 √† 20 ! Allez-y !"
    },
    'decompositions': {
      'course-intro': "Salut ! Aujourd'hui, nous allons d√©couvrir les d√©compositions additives !",
      'course-explanation': "D√©composer un nombre, c'est le s√©parer en plusieurs morceaux qui, additionn√©s, donnent le nombre de d√©part !",
      'course-practice': "Regarde bien les exemples et choisis un nombre √† d√©composer !",
      'exercise-intro': "Tu vas apprendre toutes les fa√ßons de d√©composer les nombres !"
    },
    'complements-10': {
      'course-intro': "Salut ! Aujourd'hui, nous allons d√©couvrir les compl√©ments √† 10 !",
      'course-explanation': "Un compl√©ment √† 10, c'est le nombre qu'il faut ajouter pour arriver √† 10 ! Par exemple, 7 + 3 = 10, donc 3 est le compl√©ment de 7 !",
      'course-practice': "Maintenant, clique sur l'onglet Exercices pour t'entra√Æner !",
      'exercise-intro': "Tu vas ma√Ætriser tous les compl√©ments √† 10 ! C'est tr√®s utile pour calculer vite !"
    }
  },

  // ‚ûï CP-ADDITIONS-SIMPLES  
  'cp-additions-simples': {
    'sens-addition': {
      'course-intro': "Salut ! Aujourd'hui, nous allons d√©couvrir le sens de l'addition !",
      'course-explanation': "Additionner, c'est ajouter, r√©unir des objets ensemble ! C'est le contraire de soustraire !",
      'course-practice': "Tu peux essayer avec des objets, des nombres, ou des situations de la vie quotidienne !",
      'course-final': "Maintenant, clique sur l'onglet Exercices pour t'entra√Æner √† comprendre l'addition !",
      'exercise-intro': "Super ! Tu es dans les exercices sur le sens de l'addition ! Tu vas d√©couvrir 15 exercices vari√©s pour bien comprendre ce que veut dire additionner !"
    },
    'additions-jusqu-20': {
      'course-intro': "Salut ! Aujourd'hui, nous allons ma√Ætriser les additions jusqu'√† 20 !",
      'course-explanation': "Il y a plusieurs strat√©gies pour additionner : compter sur ses doigts, ajouter un par un, ou utiliser les doubles !",
      'course-practice': "Maintenant, clique sur l'onglet Exercices pour devenir un champion des additions !",
      'exercise-intro': "Super ! Tu es dans les exercices d'additions jusqu'√† 20 ! Tu vas r√©soudre 15 additions vari√©es !"
    },
    'problemes': {
      'course-intro': "Salut ! Aujourd'hui, nous allons r√©soudre des probl√®mes d'addition !",
      'course-explanation': "Un probl√®me d'addition, c'est une histoire o√π il faut ajouter des choses ensemble pour trouver la r√©ponse !",
      'course-practice': "Maintenant, clique sur l'onglet Exercices pour r√©soudre plein de probl√®mes !",
      'exercise-intro': "Super ! Tu es dans les exercices de probl√®mes d'addition ! Tu vas r√©soudre 18 probl√®mes de la vie quotidienne !"
    }
  },

  // ‚ûñ CP-SOUSTRACTIONS-SIMPLES
  'cp-soustractions-simples': {
    'sens-soustraction': {
      'course-intro': "Salut ! Aujourd'hui, nous allons d√©couvrir le sens de la soustraction !",
      'course-explanation': "Soustraire, c'est enlever, retirer des objets ! C'est le contraire d'additionner !",
      'course-practice': "Tu peux essayer avec des objets, des nombres, ou des situations de la vie quotidienne !",
      'course-final': "Maintenant, clique sur l'onglet Exercices pour t'entra√Æner √† comprendre la soustraction !",
      'exercise-intro': "Super ! Tu es dans les exercices sur le sens de la soustraction ! Tu vas d√©couvrir 18 exercices vari√©s !"
    },
    'soustractions-20': {
      'course-intro': "Salut ! Aujourd'hui, nous allons ma√Ætriser les soustractions jusqu'√† 20 !",
      'course-explanation': "Il y a 4 strat√©gies super efficaces : compter √† rebours, d√©composition, passer par 10, ou utiliser les doubles !",
      'course-practice': "Maintenant, clique sur l'onglet Exercices pour devenir un champion des soustractions !",
      'exercise-intro': "Super ! Tu es dans les exercices de soustractions jusqu'√† 20 ! Tu vas r√©soudre 20 soustractions vari√©es !"
    },
    'techniques': {
      'course-intro': "Salut ! Aujourd'hui, nous allons d√©couvrir les techniques avanc√©es de soustraction !",
      'course-explanation': "Il existe plein d'astuces pour soustraire plus facilement : la ligne num√©rique, les bonds, la d√©composition !",
      'course-practice': "Maintenant, clique sur l'onglet Exercices pour ma√Ætriser toutes ces techniques !",
      'exercise-intro': "Super ! Tu es dans les exercices de techniques de calcul ! Tu vas devenir un expert !"
    },
    'problemes': {
      'course-intro': "Salut ! Aujourd'hui, nous allons r√©soudre des probl√®mes de soustraction !",
      'course-explanation': "Un probl√®me de soustraction, c'est une histoire o√π il faut enlever des choses pour trouver la r√©ponse !",
      'course-practice': "Maintenant, clique sur l'onglet Exercices pour r√©soudre plein de probl√®mes !",
      'exercise-intro': "Super ! Tu es dans les exercices de probl√®mes de soustraction ! Tu vas r√©soudre 20 probl√®mes de la vie quotidienne !"
    }
  }
};

// üéµ FONCTION DE G√âN√âRATION AUDIO
async function generateAudio(text, outputPath) {
  try {
    console.log(`üéµ G√©n√©ration: ${outputPath}`);
    
    const request = {
      input: { text: text },
      voice: VOICE_CONFIG,
      audioConfig: AUDIO_CONFIG,
    };

    const [response] = await client.synthesizeSpeech(request);
    await fs.writeFile(outputPath, response.audioContent, 'binary');
    
    console.log(`‚úÖ G√©n√©r√©: ${outputPath}`);
    return true;
  } catch (error) {
    console.error(`‚ùå Erreur pour ${outputPath}:`, error.message);
    return false;
  }
}

// üöÄ G√âN√âRATION COMPL√àTE
async function generateAllAudio() {
  console.log('üöÄ D√âMARRAGE G√âN√âRATION AUDIO GOOGLE TTS');
  console.log(`üé§ Voix: ${VOICE_CONFIG.name} (Vitesse: ${AUDIO_CONFIG.speakingRate}x)`);
  
  let totalFiles = 0;
  let successCount = 0;
  let characterCount = 0;

  for (const [section, chapters] of Object.entries(VOCAL_TEXTS)) {
    // Cr√©er le dossier de section
    const sectionDir = path.join('public', 'audio', section);
    await fs.mkdir(sectionDir, { recursive: true });

    for (const [chapter, texts] of Object.entries(chapters)) {
      // Cr√©er le dossier de chapitre
      const chapterDir = path.join(sectionDir, chapter);
      await fs.mkdir(chapterDir, { recursive: true });

      for (const [key, text] of Object.entries(texts)) {
        const outputPath = path.join(chapterDir, `${key}.mp3`);
        
        // Compter les caract√®res
        characterCount += text.length;
        totalFiles++;

        // G√©n√©rer l'audio
        const success = await generateAudio(text, outputPath);
        if (success) successCount++;
        
        // Petit d√©lai pour √©viter de surcharger l'API
        await new Promise(resolve => setTimeout(resolve, 100));
      }
    }
  }

  console.log('\nüéâ G√âN√âRATION TERMIN√âE !');
  console.log(`üìä Fichiers g√©n√©r√©s: ${successCount}/${totalFiles}`);
  console.log(`üìù Caract√®res totaux: ${characterCount.toLocaleString()}`);
  console.log(`üí∞ Co√ªt estim√©: GRATUIT (sous les 1M caract√®res/mois)`);
  
  if (characterCount > 1000000) {
    console.warn('‚ö†Ô∏è ATTENTION: D√©passement du tier gratuit !');
  }
}

// üèÉ‚Äç‚ôÇÔ∏è EX√âCUTION
if (require.main === module) {
  generateAllAudio().catch(console.error);
}

module.exports = { generateAllAudio, VOCAL_TEXTS }; 